<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>babyLoginPlus——bugku</title>
      <link href="/2023/11/21/CTF-wp-2/"/>
      <url>/2023/11/21/CTF-wp-2/</url>
      
        <content type="html"><![CDATA[<h1 id="四川省赛2023"><a href="#四川省赛2023" class="headerlink" title="四川省赛2023"></a>四川省赛2023</h1><h2 id="big-number"><a href="#big-number" class="headerlink" title="big number"></a>big number</h2><h3 id="main-main"><a href="#main-main" class="headerlink" title="main_main"></a>main_main</h3><p>主逻辑只是获取输入，并调用<code>main.encyrpt</code>，最后进行比较：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231022160810727.png"></p><h3 id="main-encrypt"><a href="#main-encrypt" class="headerlink" title="main.encrypt"></a>main.encrypt</h3><p><code>main.encrypt</code>逻辑：</p><p>两个大数相乘<code>115792089237316195423570985008687907853269984665640564039457584007913129640233</code>和<code>463168356949264781694283940034751631413079938662562256157830336031652518559817</code>，然后将输入由二进制数据转化为大数，并进行指数为<code>131101</code>，模为两个大数的乘积的运算，即一个RSA加密。</p><p>这其中的大数的结构大概这样子：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231022161521021.png"></p><p>这里将输入转化为大数，然后将输入作为底，<code>num_131101</code>作为幂，大数乘积作为模，进行运算，结果放在<code>rax</code>上。</p><p>然后调用<code>main_encrypt2</code>。</p><h3 id="main-encrypt2"><a href="#main-encrypt2" class="headerlink" title="main_encrypt2"></a>main_encrypt2</h3><p>这个函数其实就是一个换表的<code>base58</code>。</p><p>表为：<code>rUzoi1mGW6u8TFH3RCbeKYZSJ2DsAXwgfhdQj5cvLNMaxV97kq4ynEBPpt</code></p><p>将输入的大数不断除以58，将余数进表得到字符加到结果中。</p><p><img src="/2023/11/21/CTF-wp-2/image-20231022162628506.png"></p><p>最后倒转字符串：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231022162737686.png"></p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">table = <span class="string">&quot;rUzoi1mGW6u8TFH3RCbeKYZSJ2DsAXwgfhdQj5cvLNMaxV97kq4ynEBPpt&quot;</span></span><br><span class="line">num1 = <span class="number">115792089237316195423570985008687907853269984665640564039457584007913129640233</span></span><br><span class="line">num2 = <span class="number">463168356949264781694283940034751631413079938662562256157830336031652518559817</span></span><br><span class="line">e = <span class="number">131101</span></span><br><span class="line">d = gmpy2.invert(e, (num1-<span class="number">1</span>)*(num2-<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">base58encoder</span>(<span class="params">x</span>):</span><br><span class="line">    big_num = <span class="built_in">int</span>(x, <span class="number">16</span>)</span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    quotient = big_num</span><br><span class="line">    <span class="keyword">while</span> quotient != <span class="number">0</span>:</span><br><span class="line">        quotient, remainder = <span class="built_in">divmod</span>(quotient, <span class="number">0x3A</span>)</span><br><span class="line">        result += table[remainder]</span><br><span class="line">    result = result[::-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">base58decoder</span>(<span class="params">x</span>):</span><br><span class="line">    remainder = [table.index(i) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">    big_num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> remainder:</span><br><span class="line">        big_num = big_num * <span class="number">58</span> + i</span><br><span class="line">    big_num = <span class="built_in">hex</span>(big_num)[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(big_num) % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        big_num = <span class="string">&quot;0&quot;</span> + big_num</span><br><span class="line">    flag_num = <span class="built_in">bytes</span>.fromhex(big_num).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> flag_num</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">enc</span>(<span class="params">flag</span>):</span><br><span class="line">    flag_num = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">        flag_num += <span class="built_in">hex</span>(<span class="built_in">ord</span>(i))[<span class="number">2</span>:]</span><br><span class="line">    flag_num = <span class="built_in">int</span>(flag_num, <span class="number">16</span>)</span><br><span class="line">    num = <span class="built_in">pow</span>(flag_num, e, num1 * num2)</span><br><span class="line">    big_num = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>(num):</span><br><span class="line">        big_num += <span class="built_in">hex</span>(<span class="built_in">ord</span>(i))[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">return</span> base58encoder(big_num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dec</span>(<span class="params">flag</span>):</span><br><span class="line">    flag_num = base58decoder(flag)</span><br><span class="line">    flag_num = <span class="built_in">int</span>(flag_num, <span class="number">10</span>)</span><br><span class="line">    flag_num = <span class="built_in">pow</span>(flag_num, d, num1*num2)</span><br><span class="line">    flag_num = <span class="built_in">hex</span>(flag_num)[<span class="number">2</span>:]</span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(flag_num), <span class="number">2</span>):</span><br><span class="line">        result += <span class="built_in">chr</span>(<span class="built_in">int</span>(flag_num[i:i+<span class="number">2</span>], <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;orHcGB9zRxciwQYPNhP3xgBAES9PLY1zb8hBPBmxvv83awPeZLfioAvLFA4QAGPr7WXaf&quot;</span> \</span><br><span class="line">         <span class="string">&quot;AAwCdoTKNqSaca57wUFVAxbq9fptnaRaA4d1Gm6K3eYBCWzF19hfkEjy6wEEeRdx8FztT&quot;</span> \</span><br><span class="line">         <span class="string">&quot;heVCiosWaJ8QsdRhiUysLpRBMU22HMK2DNA1Kpminxt4g2qA5hweWf1xLyuiosb4nR3Rn&quot;</span> \</span><br><span class="line">         <span class="string">&quot;csTWs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(enc(<span class="string">&quot;123&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(dec(result))</span><br></pre></td></tr></table></figure><h2 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h2><p>数独游戏。</p><p>网上的脚本：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">16</span>, M = N * N;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存放原矩阵</span></span><br><span class="line"><span class="comment">// 读入时每行后面会自动加一个 &#x27;\0&#x27;，所以每个串要开到 N + 1</span></span><br><span class="line"><span class="type">char</span> str[N][N + <span class="number">1</span>];</span><br><span class="line"><span class="comment">// 存放每一层的原始矩阵状态，方便恢复现场</span></span><br><span class="line"><span class="type">char</span> str2[M + <span class="number">1</span>][N][N + <span class="number">1</span>];</span><br><span class="line"><span class="comment">// ones 表示二进制数中几个1  map 表示二进制数中最后一个 1 的位置   </span></span><br><span class="line"><span class="type">int</span> ones[<span class="number">1</span> &lt;&lt; N], <span class="built_in">map</span>[<span class="number">1</span> &lt;&lt; N];</span><br><span class="line"><span class="comment">// 存放每个点可以放置的数</span></span><br><span class="line"><span class="type">int</span> state[N][N];</span><br><span class="line"><span class="comment">// 存放每一层的每一个点可以放置数的状态，方便恢复现场</span></span><br><span class="line"><span class="type">int</span> state2[M + <span class="number">1</span>][N][N], state3[M + <span class="number">1</span>][N][N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="type">int</span> <span class="title function_">lowbit</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变格子填放后，行、列、4*4 宫格的状态</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">draw</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> c)</span> &#123;</span><br><span class="line">    str[x][y] = c + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++) &#123;</span><br><span class="line">        <span class="comment">// 将 x 行对应的每一个空位的可选项中去除 c</span></span><br><span class="line">        <span class="comment">// ~(1 &lt;&lt; c) 表示将 二进制数的倒数第 c 位变为1，其余位取反</span></span><br><span class="line">        <span class="comment">// state[x][i] &amp; ~(1 &lt;&lt; c) 只将倒数第 c 位变为 1，其余位不变</span></span><br><span class="line">        state[x][i] &amp;= ~(<span class="number">1</span> &lt;&lt; c);</span><br><span class="line">        state[i][y] &amp;= ~(<span class="number">1</span> &lt;&lt; c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 找到该矩阵中左上角点在整个矩阵中对应的坐标</span></span><br><span class="line">    <span class="type">int</span> sx = x / <span class="number">4</span> * <span class="number">4</span>, sy = y / <span class="number">4</span> * <span class="number">4</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j ++) &#123;</span><br><span class="line">            state[sx + i][sy + j] &amp;= ~(<span class="number">1</span> &lt;&lt; c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将 (x, y) 的状态标记为以放置 c</span></span><br><span class="line">    state[x][y] = <span class="number">1</span> &lt;&lt; c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> cnt)</span> &#123;</span><br><span class="line">    <span class="comment">// 如果所有格子都填放完成，则直接返回即可</span></span><br><span class="line">    <span class="keyword">if</span> (!cnt) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 保存原来的状态，方便回溯</span></span><br><span class="line">    <span class="type">int</span> kcnt = cnt;</span><br><span class="line">    <span class="built_in">memcpy</span>(str2[kcnt], str, <span class="keyword">sizeof</span> str);</span><br><span class="line">    <span class="built_in">memcpy</span>(state2[kcnt], state, <span class="keyword">sizeof</span> state);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 枚举所有空白格，若只能填一个数，则直接填</span></span><br><span class="line">    <span class="comment">// 若不能填，则直接返回</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j ++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i][j] == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// state[i][j] 表示该位置可以放置的数</span></span><br><span class="line">                <span class="type">int</span> s = state[i][j];</span><br><span class="line">                <span class="comment">// 若一个数都不能放</span></span><br><span class="line">                <span class="keyword">if</span> (!s) &#123;</span><br><span class="line">                    <span class="comment">// 恢复现场</span></span><br><span class="line">                    <span class="built_in">memcpy</span>(str, str2[kcnt], <span class="keyword">sizeof</span> str);</span><br><span class="line">                    <span class="built_in">memcpy</span>(state, state2[kcnt], <span class="keyword">sizeof</span> state);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 若改格只能放置一个数</span></span><br><span class="line">                <span class="keyword">if</span> (ones[s] == <span class="number">1</span>) &#123;</span><br><span class="line">                    draw(i, j, <span class="built_in">map</span>[s]);</span><br><span class="line">                    cnt --;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 枚举每一行，若某个字母不能填在任何一个空位，直接返回</span></span><br><span class="line">    <span class="comment">// 若某个空格只能填一个字母，则直接填</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++) &#123;</span><br><span class="line">        <span class="comment">// sor  表示该行可填放的数字</span></span><br><span class="line">        <span class="comment">// sand 表示该行每个空位可以填放的字符</span></span><br><span class="line">        <span class="type">int</span> sor = <span class="number">0</span>, sand = (<span class="number">1</span> &lt;&lt; N) - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 表示该行已填放的数字</span></span><br><span class="line">        <span class="type">int</span> drawn = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j ++) &#123;</span><br><span class="line">            <span class="type">int</span> s = state[i][j];</span><br><span class="line">            sand &amp;= ~(s &amp; sor);</span><br><span class="line">            sor |= s;</span><br><span class="line">            <span class="comment">// s &amp; sor 表示该格子可以填放同时前面有格子也可以填的数</span></span><br><span class="line">            <span class="comment">// sand &amp; ~(s &amp; sor) 二进制数中 1 所在的位置，就是只可以填那个数</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (str[i][j] != <span class="string">&#x27;-&#x27;</span>) drawn |= s;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 若某个字母不能填放在该行的任意一个位置</span></span><br><span class="line">        <span class="keyword">if</span> (sor != (<span class="number">1</span> &lt;&lt; N) - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(str, str2[kcnt], <span class="keyword">sizeof</span> str);</span><br><span class="line">            <span class="built_in">memcpy</span>(state, state2[kcnt], <span class="keyword">sizeof</span> state);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = sand; j; j -= lowbit(j)) &#123;</span><br><span class="line">            <span class="type">int</span> t = lowbit(j);</span><br><span class="line">            <span class="comment">// 若改行没有填放过 t</span></span><br><span class="line">            <span class="keyword">if</span> (!(drawn &amp; t)) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; N; k ++) &#123;</span><br><span class="line">                    <span class="comment">// 找出填放 t 的那个格子</span></span><br><span class="line">                    <span class="keyword">if</span> (state[i][k] &amp; t) &#123;</span><br><span class="line">                        draw(i, k, <span class="built_in">map</span>[t]);</span><br><span class="line">                        cnt --;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 枚举每一列，若某个字母不能填在任何一个空位，直接返回</span></span><br><span class="line">    <span class="comment">// 若某个空格只能填一个字母，则直接填</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> sor = <span class="number">0</span>, sand = (<span class="number">1</span> &lt;&lt; N) - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> drawn = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j ++) &#123;</span><br><span class="line">            <span class="type">int</span> s = state[j][i];</span><br><span class="line">            sand &amp;= ~(s &amp; sor);</span><br><span class="line">            sor |= s;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (str[j][i] != <span class="string">&#x27;-&#x27;</span>) drawn |= s;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (sor != (<span class="number">1</span> &lt;&lt; N) - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(str, str2[kcnt], <span class="keyword">sizeof</span> str);</span><br><span class="line">            <span class="built_in">memcpy</span>(state, state2[kcnt], <span class="keyword">sizeof</span> state);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = sand; j; j -= lowbit(j)) &#123;</span><br><span class="line">            <span class="type">int</span> t = lowbit(j);</span><br><span class="line">            <span class="keyword">if</span> (!(drawn &amp; t)) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; N; k ++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (state[k][i] &amp; t) &#123;</span><br><span class="line">                        draw(k, i, <span class="built_in">map</span>[t]);</span><br><span class="line">                        cnt --;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 枚举每一个 4*4 宫格，若某个字母不能填在任何一个空位，直接返回</span></span><br><span class="line">    <span class="comment">// 若某个空格只能填一个字母，指直接填</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++) &#123;</span><br><span class="line">        <span class="type">int</span> sor = <span class="number">0</span>, sand = (<span class="number">1</span> &lt;&lt; N) - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> drawn = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j ++) &#123;</span><br><span class="line">            <span class="type">int</span> sx = i / <span class="number">4</span> * <span class="number">4</span>, sy = i % <span class="number">4</span> * <span class="number">4</span>;</span><br><span class="line">            <span class="comment">// 找到该点在该矩阵中偏移量</span></span><br><span class="line">            <span class="type">int</span> dx = j / <span class="number">4</span>, dy = j % <span class="number">4</span>;</span><br><span class="line">            <span class="type">int</span> s = state[sx + dx][sy + dy];</span><br><span class="line">            sand &amp;= ~(s &amp; sor);</span><br><span class="line">            sor |= s;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (str[sx + dx][sy + dy] != <span class="string">&#x27;-&#x27;</span>) drawn |= s;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (sor != (<span class="number">1</span> &lt;&lt; N) - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(str, str2[kcnt], <span class="keyword">sizeof</span> str);</span><br><span class="line">            <span class="built_in">memcpy</span>(state, state2[kcnt], <span class="keyword">sizeof</span> state);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = sand; j; j -= lowbit(j)) &#123;</span><br><span class="line">            <span class="type">int</span> t = lowbit(j);</span><br><span class="line">            <span class="keyword">if</span> (!(drawn &amp; t)) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; N; k ++) &#123;</span><br><span class="line">                    <span class="type">int</span> sx = i / <span class="number">4</span> * <span class="number">4</span>, sy = i % <span class="number">4</span> * <span class="number">4</span>;</span><br><span class="line">                    <span class="type">int</span> dx = k / <span class="number">4</span>, dy = k % <span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">if</span> (state[sx + dx][sy + dy] &amp; t) &#123;</span><br><span class="line">                        draw(sx + dx, sy + dy, <span class="built_in">map</span>[t]);</span><br><span class="line">                        cnt --;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果经过上面的步骤，已经填放完毕，则不用进行下面的步骤</span></span><br><span class="line">    <span class="keyword">if</span> (!cnt) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 找可以填放数最少的空格</span></span><br><span class="line">    <span class="comment">// 记住填放数最少的空格的坐标，以及可以填放的数</span></span><br><span class="line">    <span class="type">int</span> x, y, s = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j ++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i][j] == <span class="string">&#x27;-&#x27;</span> &amp;&amp; ones[state[i][j]] &lt; s) &#123;</span><br><span class="line">                s = ones[state[i][j]];</span><br><span class="line">                x = i, y = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memcpy</span>(state3[kcnt], state, <span class="keyword">sizeof</span> state);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 枚举每一个可以填放的数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = state[x][y]; i; i -= lowbit(i)) &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(state, state3[kcnt], <span class="keyword">sizeof</span> state);</span><br><span class="line">        draw(x, y, <span class="built_in">map</span>[lowbit(i)]);</span><br><span class="line">        <span class="keyword">if</span> (dfs(cnt - <span class="number">1</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 恢复现场</span></span><br><span class="line">    <span class="built_in">memcpy</span>(state, state2[kcnt], <span class="keyword">sizeof</span> state);</span><br><span class="line">    <span class="built_in">memcpy</span>(str, str2[kcnt], <span class="keyword">sizeof</span> str);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化 map 和 ones 数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++ ) <span class="built_in">map</span>[<span class="number">1</span> &lt;&lt; i] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span> &lt;&lt; N; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j; j -= lowbit(j))</span><br><span class="line">            ones[i] ++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 当扫描到数据时，才继续读入后续数据</span></span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, *str))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i ++ ) <span class="built_in">cin</span> &gt;&gt; str[i];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 初始化每个格子的状态，是能够放置任意字符</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j ++ )</span><br><span class="line">                state[i][j] = (<span class="number">1</span> &lt;&lt; N) - <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 存放空白格子数</span></span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将已经放置字符的格子对应的状态进行更新</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j ++ )</span><br><span class="line">                <span class="keyword">if</span> (str[i][j] != <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">                    draw(i, j, str[i][j] - <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">                <span class="keyword">else</span> cnt ++ ;</span><br><span class="line"></span><br><span class="line">        dfs(cnt);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++ ) <span class="built_in">cout</span> &lt;&lt; str[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">ALMDCJEPBFIKOGNH</span></span><br><span class="line"><span class="comment">BCEFADGHJLNOIKMP</span></span><br><span class="line"><span class="comment">GHIJBKNOACMPDEFL</span></span><br><span class="line"><span class="comment">KNOPFILMDEGHABCJ</span></span><br><span class="line"><span class="comment">CABEDFHGIJKLMNPO</span></span><br><span class="line"><span class="comment">DFGHEABCMOPNJILK</span></span><br><span class="line"><span class="comment">IJKLMOPNCABDEFHG</span></span><br><span class="line"><span class="comment">MOPNILJKEGHFBADC</span></span><br><span class="line"><span class="comment">EBACGHDFKIJMLPON</span></span><br><span class="line"><span class="comment">FDHGJBALNPOCKMEI</span></span><br><span class="line"><span class="comment">JINKOPMEFBLACHGD</span></span><br><span class="line"><span class="comment">OPLMKNCIGHDEFJAB</span></span><br><span class="line"><span class="comment">HECALGIBONFJPDKM</span></span><br><span class="line"><span class="comment">LGDBHCKAPMEINOJF</span></span><br><span class="line"><span class="comment">NKFIPMOJLDAGHCBE</span></span><br><span class="line"><span class="comment">PMJONEFDHKCBGLIA</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>然后将输出按程序的规范提取一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&quot;010c000400000510000609000f070e0802030506010407080a0c0e0f000b0d1007080900020b0e0f01030d100400060c000e0f100609000d00000708010203000301020504060007090a0b0c000e100f00000700050100030d0f100e0a09000b09000b000d0f100003010200050008070d0f0000090c0a00000008060201000300020003000804060b090a0d0010000e060408070a02000c0e100f030b0d050000090e0b0f10000006000c010300070400100c0d0b0e030007080005060a01000805000000000902000e000a10000b0d0c00040208030b00100d0500000f0a000e0b0009100d0f0a0c00000708030005100d0a0f0e050604080b0302000c0900&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(a), <span class="number">2</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">32</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">    num = <span class="built_in">int</span>(a[i:i+<span class="number">2</span>], <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(num + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>) - <span class="number">1</span>), end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">b = <span class="string">&quot;ALMDCJEPBFIKOGNHBCEFADGHJLNOIKMPGHIJBKNOACMPDEFLKNOPFILMDEGHABCJCABEDFHGIJKLMNPODFGHEABCMOPNJILKIJKLMOPNCABDEFHGMOPNILJKEGHFBADCEBACGHDFKIJMLPONFDHGJBALNPOCKMEIJINKOPMEFBLACHGDOPLMKNCIGHDEFJABHECALGIBONFJPDKMLGDBHCKAPMEINOJFNKFIPMOJLDAGHCBEPMJONEFDHKCBGLIA&quot;</span></span><br><span class="line">c = <span class="string">&quot;AL-D--EP-FI-OGNHBCEFADGHJLNO-KMPGHI-BKNOACMPD-FL-NOPFI-M--GHABC-CABEDF-GIJKL-NPO--G-EA-CMOPNJI-KI-K-MOP-CAB-E-HGMO--ILJ---HFBA-C-B-C-HDFKIJM-P-NFDHGJB-LNPOCKME--INKOP--F-LAC-GD-PLMKNC-GH-EFJA-HE----IB-N-JP-KML-DBHCK-PME--OJ-NK-IPMOJL--GHC-EPMJONEFDHKCB-LI-&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">    <span class="keyword">if</span> c[i] != <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    result += <span class="built_in">hex</span>(<span class="built_in">ord</span>(b[i]) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>) + <span class="number">1</span>)[<span class="number">2</span>:].upper()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="comment"># D3A2B9A5BC45A8D4682CACE4610EB574517CF19AD528F94231C7F64719E6641271</span></span><br></pre></td></tr></table></figure><h1 id="HitCon2023"><a href="#HitCon2023" class="headerlink" title="HitCon2023"></a>HitCon2023</h1><h2 id="blade"><a href="#blade" class="headerlink" title="blade"></a>blade</h2><p><a href="https://hexrotor.github.io/2023/09/10/hitcon-2023-blade-wp">网上师傅的wp</a></p><h3 id="程序逻辑"><a href="#程序逻辑" class="headerlink" title="程序逻辑"></a>程序逻辑</h3><p>执行以下程序，是有以下逻辑的：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028195335798.png"></p><p>由师傅的wp关注程序的这个main函数：<code>seccomp_shell::main::hef7e76ec97275895()</code>：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028195556547.png"></p><p>关注下<code>seccomp_shell::cli::prompt::h56d4b6fe2f13f522(&amp;v5)</code>，其中有<code>switch</code>去判断是否<code>server</code>还是<code>shell</code>：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028200045052.png"></p><p>进入<code>seccomp_shell::shell::prompt::h76cecfe7bd3bdf50(v33)</code>，其中有刚才打印出来的字符串：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028200210279.png"></p><p>再往下走，有<code>switch</code>，应该是根据字符串长度再判别是啥命令：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028200253921.png"></p><p>其中有<code>case</code>为<code>flag</code>，其中有<code>verify、fail、success</code>三个函数：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028200417998.png"></p><p>进入<code>seccomp_shell::shell::verify::h898bf5fa26dafbab</code>有判别参数是否为<code>0x64</code>，应该是字符串长度：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028200614679.png"></p><p>之后进入一个大循环，大循环中有几个小循环，是根据<code>dest</code>的值打乱<code>input</code>的顺序，一共有八个：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028200741673.png"></p><p>打乱<code>input</code>之后，对<code>input</code>进行如下的加密：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028200947149.png"></p><p>之后大循环这样子执行256轮，然后结束。</p><p>对最后的比较结果赋值，以及更改：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028201838143.png"></p><p><code>unk_556233FE7B2B</code>部分其实是字节码：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028232614542.png"></p><p>反编译可得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">.rodata:000055978D72FB2B loc_55978D72FB2B:                       ; DATA XREF: seccomp_shell::shell::verify::h898bf5fa26dafbab+44D↑o</span><br><span class="line">.rodata:000055978D72FB2B push    rsp</span><br><span class="line">.rodata:000055978D72FB2C pop     rbp</span><br><span class="line">.rodata:000055978D72FB2D xor     esi, esi</span><br><span class="line">.rodata:000055978D72FB2F mov     rcx, 379F3A62B80657A1h</span><br><span class="line">.rodata:000055978D72FB39 mov     rdx, 37F7494DD66F358Eh</span><br><span class="line">.rodata:000055978D72FB43 xor     rcx, rdx</span><br><span class="line">.rodata:000055978D72FB46 push    rcx</span><br><span class="line">.rodata:000055978D72FB47 push    rsp</span><br><span class="line">.rodata:000055978D72FB48 pop     rdi</span><br><span class="line">.rodata:000055978D72FB49 push    2</span><br><span class="line">.rodata:000055978D72FB4B pop     rax</span><br><span class="line">.rodata:000055978D72FB4C cdq</span><br><span class="line">.rodata:000055978D72FB4D syscall                                 ; LINUX - sys_open</span><br><span class="line">.rodata:000055978D72FB4F xchg    rax, rdi</span><br><span class="line">.rodata:000055978D72FB51 xor     eax, eax</span><br><span class="line">.rodata:000055978D72FB53 push    rax</span><br><span class="line">.rodata:000055978D72FB54 push    rsp</span><br><span class="line">.rodata:000055978D72FB55 pop     rsi</span><br><span class="line">.rodata:000055978D72FB56 push    4</span><br><span class="line">.rodata:000055978D72FB58 pop     rdx</span><br><span class="line">.rodata:000055978D72FB59 syscall                                 ; LINUX - sys_read</span><br><span class="line">.rodata:000055978D72FB5B pop     r12</span><br><span class="line">.rodata:000055978D72FB5D push    3</span><br><span class="line">.rodata:000055978D72FB5F pop     rax</span><br><span class="line">.rodata:000055978D72FB60 syscall                                 ; LINUX - sys_close</span><br><span class="line">.rodata:000055978D72FB62 xor     esi, esi</span><br><span class="line">.rodata:000055978D72FB64 mov     rcx, 0AAC06463C36F3B3Bh</span><br><span class="line">.rodata:000055978D72FB6E mov     rdx, 0AAC06463C30B4C48h</span><br><span class="line">.rodata:000055978D72FB78 xor     rcx, rdx</span><br><span class="line">.rodata:000055978D72FB7B push    rcx</span><br><span class="line">.rodata:000055978D72FB7C mov     rcx, 7DA9F8D67582578Ch</span><br><span class="line">.rodata:000055978D72FB86 mov     rdx, 0EC888F916F632A3h</span><br><span class="line">.rodata:000055978D72FB90 xor     rcx, rdx</span><br><span class="line">.rodata:000055978D72FB93 push    rcx</span><br><span class="line">.rodata:000055978D72FB94 push    rsp</span><br><span class="line">.rodata:000055978D72FB95 pop     rdi</span><br><span class="line">.rodata:000055978D72FB96 push    2</span><br><span class="line">.rodata:000055978D72FB98 pop     rax</span><br><span class="line">.rodata:000055978D72FB99 cdq</span><br><span class="line">.rodata:000055978D72FB9A syscall                                 ; LINUX - sys_open</span><br><span class="line">.rodata:000055978D72FB9C xchg    rax, rdi</span><br><span class="line">.rodata:000055978D72FB9E xor     eax, eax</span><br><span class="line">.rodata:000055978D72FBA0 push    rax</span><br><span class="line">.rodata:000055978D72FBA1 push    rsp</span><br><span class="line">.rodata:000055978D72FBA2 pop     rsi</span><br><span class="line">.rodata:000055978D72FBA3 push    4</span><br><span class="line">.rodata:000055978D72FBA5 pop     rdx</span><br><span class="line">.rodata:000055978D72FBA6 syscall                                 ; LINUX - sys_read</span><br><span class="line">.rodata:000055978D72FBA8 pop     r13</span><br><span class="line">.rodata:000055978D72FBAA push    3</span><br><span class="line">.rodata:000055978D72FBAC pop     rax</span><br><span class="line">.rodata:000055978D72FBAD syscall                                 ; LINUX - sys_close</span><br><span class="line">.rodata:000055978D72FBAF xor     esi, esi</span><br><span class="line">.rodata:000055978D72FBB1 push    6Fh ; &#x27;o&#x27;</span><br><span class="line">.rodata:000055978D72FBB3 mov     rcx, 77D9F62D0C06E559h</span><br><span class="line">.rodata:000055978D72FBBD mov     rdx, 5BC8C027A638176h</span><br><span class="line">.rodata:000055978D72FBC7 xor     rcx, rdx</span><br><span class="line">.rodata:000055978D72FBCA push    rcx</span><br><span class="line">.rodata:000055978D72FBCB push    rsp</span><br><span class="line">.rodata:000055978D72FBCC pop     rdi</span><br><span class="line">.rodata:000055978D72FBCD push    2</span><br><span class="line">.rodata:000055978D72FBCF pop     rax</span><br><span class="line">.rodata:000055978D72FBD0 cdq</span><br><span class="line">.rodata:000055978D72FBD1 syscall                                 ; LINUX - sys_open</span><br><span class="line">.rodata:000055978D72FBD3 xchg    rax, rdi</span><br><span class="line">.rodata:000055978D72FBD5 xor     eax, eax</span><br><span class="line">.rodata:000055978D72FBD7 push    rax</span><br><span class="line">.rodata:000055978D72FBD8 push    rsp</span><br><span class="line">.rodata:000055978D72FBD9 pop     rsi</span><br><span class="line">.rodata:000055978D72FBDA push    4</span><br><span class="line">.rodata:000055978D72FBDC pop     rdx</span><br><span class="line">.rodata:000055978D72FBDD syscall                                 ; LINUX - sys_read</span><br><span class="line">.rodata:000055978D72FBDF pop     rax</span><br><span class="line">.rodata:000055978D72FBE0 not     rax</span><br><span class="line">.rodata:000055978D72FBE3 shr     rax, 1Dh</span><br><span class="line">.rodata:000055978D72FBE7 cqo</span><br><span class="line">.rodata:000055978D72FBE9 push    29h ; &#x27;)&#x27;</span><br><span class="line">.rodata:000055978D72FBEB pop     rcx</span><br><span class="line">.rodata:000055978D72FBEC div     rcx</span><br><span class="line">.rodata:000055978D72FBEF xchg    rax, r14</span><br><span class="line">.rodata:000055978D72FBF1 push    3</span><br><span class="line">.rodata:000055978D72FBF3 pop     rax</span><br><span class="line">.rodata:000055978D72FBF4 syscall                                 ; LINUX - sys_close</span><br><span class="line">.rodata:000055978D72FBF6 mov     eax, 0DEADBEEFh</span><br><span class="line">.rodata:000055978D72FBFB add     eax, r12d</span><br><span class="line">.rodata:000055978D72FBFE xor     eax, r13d</span><br><span class="line">.rodata:000055978D72FC01 ror     eax, 0Bh</span><br><span class="line">.rodata:000055978D72FC04 not     eax</span><br><span class="line">.rodata:000055978D72FC06 xor     eax, r14d</span><br><span class="line">.rodata:000055978D72FC09 cmp     eax, 0DEADBEEFh</span><br><span class="line">.rodata:000055978D72FC0E jnz     short loc_55978D72FC15</span><br><span class="line">.rodata:000055978D72FC0E</span><br><span class="line">.rodata:000055978D72FC10 push    1</span><br><span class="line">.rodata:000055978D72FC12 pop     rax</span><br><span class="line">.rodata:000055978D72FC13 jmp     short loc_55978D72FC18</span><br><span class="line">.rodata:000055978D72FC13</span><br><span class="line">.rodata:000055978D72FC15 ; ---------------------------------------------------------------------------</span><br><span class="line">.rodata:000055978D72FC15</span><br><span class="line">.rodata:000055978D72FC15 loc_55978D72FC15:                       ; CODE XREF: .rodata:000055978D72FC0E↑j</span><br><span class="line">.rodata:000055978D72FC15 xor     rax, rax</span><br><span class="line">.rodata:000055978D72FC15</span><br><span class="line">.rodata:000055978D72FC18</span><br><span class="line">.rodata:000055978D72FC18 loc_55978D72FC18:                       ; CODE XREF: .rodata:000055978D72FC13↑j</span><br><span class="line">.rodata:000055978D72FC18 push    rax</span><br><span class="line">.rodata:000055978D72FC19 push    rbx</span><br><span class="line">.rodata:000055978D72FC1A pop     rdi</span><br><span class="line">.rodata:000055978D72FC1B push    rsp</span><br><span class="line">.rodata:000055978D72FC1C pop     rsi</span><br><span class="line">.rodata:000055978D72FC1D push    8</span><br><span class="line">.rodata:000055978D72FC1F pop     rdx</span><br><span class="line">.rodata:000055978D72FC20 push    1</span><br><span class="line">.rodata:000055978D72FC22 pop     rax</span><br><span class="line">.rodata:000055978D72FC23 syscall                                 ; LINUX - sys_write</span><br><span class="line">.rodata:000055978D72FC25 push    rbp</span><br><span class="line">.rodata:000055978D72FC26 pop     rsp</span><br><span class="line">.rodata:000055978D72FC27 jmp     r15</span><br><span class="line">.rodata:000055978D72FC27</span><br></pre></td></tr></table></figure><p>但要注意，程序运行过程中会对字节码进行更改：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028233517580.png"></p><p>因此逻辑应该是分别去<code>dest</code>和<code>input</code>的四个字符到字节码的红框中的位置，然后执行字节码进行比较。</p><p><code>dest</code>的部分：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028215224606.png"></p><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><p>对于大循环中，对输入的顺序更改，可以使用输入输出表来解决；对输入的加密，由于是字节的加密，也可以使用输入输出表来解决。</p><p>更改顺序的输入输出表：可以输入base64的字符串，来获取转换一次后的字符串结果。</p><p>字节加密的输入输出表：可以将<code>0x0-0xff</code>分为四组分别输入一次，得到结果。</p><p>比较的部分的操作基本都在图中，需要到r12、r13、r14三个寄存器的值，可以执行一遍字节码，得到结果（也可以弄懂字节码自己推结果）：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231028235436236.png"></p><p>最后脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">de_cmp</span>(<span class="params">x</span>):</span><br><span class="line">    r12 = <span class="number">0x0000000464C457F</span></span><br><span class="line">    r13 = <span class="number">0x0000000746F6F72</span></span><br><span class="line">    r14 = <span class="number">0x000000031F3831F</span></span><br><span class="line"></span><br><span class="line">    x = np.uint32(x)</span><br><span class="line">    x = np.uint32(x ^ r14)</span><br><span class="line">    x = np.uint32(~x)</span><br><span class="line">    x = np.uint32((x &lt;&lt; <span class="number">11</span>) | (x &gt;&gt; (<span class="number">32</span> - <span class="number">11</span>)))</span><br><span class="line">    x = np.uint32(x ^ r13)</span><br><span class="line">    x = np.uint32(x - r12)</span><br><span class="line">    x = np.int32(x)</span><br><span class="line">    <span class="keyword">return</span> [x &amp; <span class="number">0xff</span>, (x &amp; <span class="number">0xff00</span>) &gt;&gt; <span class="number">8</span>, (x &amp; <span class="number">0xff0000</span>) &gt;&gt; <span class="number">16</span>, (x &amp; <span class="number">0xff000000</span>) &gt;&gt; <span class="number">24</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">data: <span class="built_in">list</span>, table: <span class="built_in">dict</span></span>):</span><br><span class="line">    tmp = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        tmp.append(table.index(i))</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_order</span>(<span class="params">data: <span class="built_in">list</span>, table: <span class="built_in">list</span></span>):</span><br><span class="line">    tmp = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">64</span>):</span><br><span class="line">        tmp.append(data[table[i]])</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">old = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line">trans = <span class="string">&quot;rP5V+azMm8xwY1SGnHtb/OcZyvDpRgN6kd3q9LKE4QTfXhB0UuoCs2JiejFl7AIW&quot;</span></span><br><span class="line">reverse_table = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> old:</span><br><span class="line">    reverse_table.append(trans.find(i))</span><br><span class="line">enc_table = [</span><br><span class="line">    <span class="number">0xFB</span>, <span class="number">0x7B</span>, <span class="number">0x4E</span>, <span class="number">0xBB</span>, <span class="number">0x51</span>, <span class="number">0x15</span>, <span class="number">0x8D</span>, <span class="number">0xDB</span>, <span class="number">0xB0</span>, <span class="number">0xAC</span>,</span><br><span class="line">    <span class="number">0xA5</span>, <span class="number">0x8E</span>, <span class="number">0xAA</span>, <span class="number">0xB2</span>, <span class="number">0x60</span>, <span class="number">0xEB</span>, <span class="number">0x63</span>, <span class="number">0x5C</span>, <span class="number">0xDE</span>, <span class="number">0x42</span>,</span><br><span class="line">    <span class="number">0x2B</span>, <span class="number">0xC6</span>, <span class="number">0xA6</span>, <span class="number">0x35</span>, <span class="number">0x30</span>, <span class="number">0x43</span>, <span class="number">0xD6</span>, <span class="number">0x5F</span>, <span class="number">0xBD</span>, <span class="number">0x24</span>,</span><br><span class="line">    <span class="number">0xB1</span>, <span class="number">0xE3</span>, <span class="number">0x8C</span>, <span class="number">0xA7</span>, <span class="number">0xD5</span>, <span class="number">0x2A</span>, <span class="number">0x7C</span>, <span class="number">0x6D</span>, <span class="number">0x8B</span>, <span class="number">0x17</span>,</span><br><span class="line">    <span class="number">0x9D</span>, <span class="number">0x83</span>, <span class="number">0xFE</span>, <span class="number">0x69</span>, <span class="number">0x10</span>, <span class="number">0x59</span>, <span class="number">0xA9</span>, <span class="number">0x9E</span>, <span class="number">0x0F</span>, <span class="number">0x1C</span>,</span><br><span class="line">    <span class="number">0x66</span>, <span class="number">0x97</span>, <span class="number">0x5B</span>, <span class="number">0x61</span>, <span class="number">0xED</span>, <span class="number">0xAD</span>, <span class="number">0xE0</span>, <span class="number">0xDA</span>, <span class="number">0x27</span>, <span class="number">0x06</span>,</span><br><span class="line">    <span class="number">0x25</span>, <span class="number">0xDC</span>, <span class="number">0x5E</span>, <span class="number">0xE7</span>,</span><br><span class="line">    <span class="number">0x41</span>, <span class="number">0x32</span>, <span class="number">0xD2</span>, <span class="number">0xD9</span>, <span class="number">0x8F</span>, <span class="number">0xEE</span>, <span class="number">0xAF</span>, <span class="number">0x03</span>, <span class="number">0x93</span>, <span class="number">0x3A</span>,</span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0xA2</span>, <span class="number">0xE1</span>, <span class="number">0xB3</span>, <span class="number">0xEC</span>, <span class="number">0x81</span>, <span class="number">0x9F</span>, <span class="number">0xCA</span>, <span class="number">0x58</span>, <span class="number">0xB7</span>,</span><br><span class="line">    <span class="number">0x79</span>, <span class="number">0xFD</span>, <span class="number">0x3B</span>, <span class="number">0xA0</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0xCB</span>, <span class="number">0xA8</span>, <span class="number">0x80</span>, <span class="number">0xC0</span>,</span><br><span class="line">    <span class="number">0x16</span>, <span class="number">0x4D</span>, <span class="number">0x2F</span>, <span class="number">0x75</span>, <span class="number">0x71</span>, <span class="number">0x0A</span>, <span class="number">0x04</span>, <span class="number">0x39</span>, <span class="number">0xFF</span>, <span class="number">0xC1</span>,</span><br><span class="line">    <span class="number">0x9C</span>, <span class="number">0xAB</span>, <span class="number">0xEF</span>, <span class="number">0xA4</span>, <span class="number">0xD8</span>, <span class="number">0xE2</span>, <span class="number">0x14</span>, <span class="number">0xC2</span>, <span class="number">0x6C</span>, <span class="number">0x64</span>,</span><br><span class="line">    <span class="number">0x1E</span>, <span class="number">0x6B</span>, <span class="number">0x7E</span>, <span class="number">0x99</span>, <span class="number">0x2E</span>, <span class="number">0x09</span>, <span class="number">0x0B</span>, <span class="number">0x86</span>, <span class="number">0x74</span>, <span class="number">0x6A</span>,</span><br><span class="line">    <span class="number">0xC4</span>, <span class="number">0x2D</span>, <span class="number">0x4F</span>, <span class="number">0xF9</span>,</span><br><span class="line">    <span class="number">0xFA</span>, <span class="number">0x94</span>, <span class="number">0xB6</span>, <span class="number">0x1F</span>, <span class="number">0x89</span>, <span class="number">0x6F</span>, <span class="number">0x5D</span>, <span class="number">0xE8</span>, <span class="number">0xEA</span>, <span class="number">0xB5</span>,</span><br><span class="line">    <span class="number">0x5A</span>, <span class="number">0x65</span>, <span class="number">0x88</span>, <span class="number">0xC5</span>, <span class="number">0x7F</span>, <span class="number">0x77</span>, <span class="number">0x11</span>, <span class="number">0xCF</span>, <span class="number">0xF1</span>, <span class="number">0x1B</span>,</span><br><span class="line">    <span class="number">0x3F</span>, <span class="number">0xF4</span>, <span class="number">0x48</span>, <span class="number">0x47</span>, <span class="number">0x12</span>, <span class="number">0xE4</span>, <span class="number">0xBA</span>, <span class="number">0xDF</span>, <span class="number">0xE9</span>, <span class="number">0x62</span>,</span><br><span class="line">    <span class="number">0x6E</span>, <span class="number">0xB4</span>, <span class="number">0x96</span>, <span class="number">0xCD</span>, <span class="number">0x13</span>, <span class="number">0x53</span>, <span class="number">0x4B</span>, <span class="number">0x28</span>, <span class="number">0xD7</span>, <span class="number">0xD1</span>,</span><br><span class="line">    <span class="number">0x33</span>, <span class="number">0xB8</span>, <span class="number">0xE6</span>, <span class="number">0x7A</span>, <span class="number">0x2C</span>, <span class="number">0x9B</span>, <span class="number">0x29</span>, <span class="number">0x44</span>, <span class="number">0x52</span>, <span class="number">0xF7</span>,</span><br><span class="line">    <span class="number">0x20</span>, <span class="number">0xF2</span>, <span class="number">0x31</span>, <span class="number">0xD3</span>, <span class="number">0xB9</span>, <span class="number">0x40</span>, <span class="number">0xD0</span>, <span class="number">0x34</span>, <span class="number">0xF5</span>, <span class="number">0x54</span>,</span><br><span class="line">    <span class="number">0x1A</span>, <span class="number">0x01</span>, <span class="number">0xA1</span>, <span class="number">0x92</span>,</span><br><span class="line">    <span class="number">0xFC</span>, <span class="number">0x85</span>, <span class="number">0x07</span>, <span class="number">0xBE</span>, <span class="number">0xDD</span>, <span class="number">0xBC</span>, <span class="number">0x19</span>, <span class="number">0xF3</span>, <span class="number">0x36</span>, <span class="number">0xF6</span>,</span><br><span class="line">    <span class="number">0x72</span>, <span class="number">0x98</span>, <span class="number">0x4C</span>, <span class="number">0x7D</span>, <span class="number">0xC7</span>, <span class="number">0xD4</span>, <span class="number">0x45</span>, <span class="number">0x4A</span>, <span class="number">0x9A</span>, <span class="number">0xC3</span>,</span><br><span class="line">    <span class="number">0x8A</span>, <span class="number">0xE5</span>, <span class="number">0x50</span>, <span class="number">0x46</span>, <span class="number">0xCC</span>, <span class="number">0x68</span>, <span class="number">0x76</span>, <span class="number">0x67</span>, <span class="number">0xC9</span>, <span class="number">0x0E</span>,</span><br><span class="line">    <span class="number">0x3C</span>, <span class="number">0x57</span>, <span class="number">0xF0</span>, <span class="number">0x22</span>, <span class="number">0xBF</span>, <span class="number">0x26</span>, <span class="number">0x84</span>, <span class="number">0x0D</span>, <span class="number">0x90</span>, <span class="number">0xA3</span>,</span><br><span class="line">    <span class="number">0xAE</span>, <span class="number">0x3D</span>, <span class="number">0x1D</span>, <span class="number">0xC8</span>, <span class="number">0x91</span>, <span class="number">0x05</span>, <span class="number">0x87</span>, <span class="number">0x70</span>, <span class="number">0x08</span>, <span class="number">0x73</span>,</span><br><span class="line">    <span class="number">0x21</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x3E</span>, <span class="number">0x37</span>, <span class="number">0x23</span>, <span class="number">0x18</span>, <span class="number">0x56</span>, <span class="number">0xCE</span>, <span class="number">0x82</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0x95</span>, <span class="number">0x78</span>, <span class="number">0xF8</span></span><br><span class="line">]</span><br><span class="line">result = [</span><br><span class="line">    <span class="number">0xA7</span>, <span class="number">0x51</span>, <span class="number">0x68</span>, <span class="number">0x52</span>, <span class="number">0x85</span>, <span class="number">0x27</span>, <span class="number">0xFF</span>, <span class="number">0x31</span>, <span class="number">0x88</span>, <span class="number">0x87</span>,</span><br><span class="line">    <span class="number">0xD2</span>, <span class="number">0xC7</span>, <span class="number">0xD3</span>, <span class="number">0x23</span>, <span class="number">0x3F</span>, <span class="number">0x52</span>, <span class="number">0x55</span>, <span class="number">0x10</span>, <span class="number">0x1F</span>, <span class="number">0xAF</span>,</span><br><span class="line">    <span class="number">0x27</span>, <span class="number">0xF0</span>, <span class="number">0x94</span>, <span class="number">0x5C</span>, <span class="number">0xCD</span>, <span class="number">0x3F</span>, <span class="number">0x7A</span>, <span class="number">0x79</span>, <span class="number">0x9F</span>, <span class="number">0x2F</span>,</span><br><span class="line">    <span class="number">0xF0</span>, <span class="number">0xE7</span>, <span class="number">0x45</span>, <span class="number">0xF0</span>, <span class="number">0x86</span>, <span class="number">0x3C</span>, <span class="number">0xF9</span>, <span class="number">0xB0</span>, <span class="number">0xEA</span>, <span class="number">0x6D</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0x42</span>, <span class="number">0xF7</span>, <span class="number">0x91</span>, <span class="number">0xED</span>, <span class="number">0x3A</span>, <span class="number">0x9A</span>, <span class="number">0x7C</span>, <span class="number">0x01</span>, <span class="number">0x6B</span>,</span><br><span class="line">    <span class="number">0x84</span>, <span class="number">0xDC</span>, <span class="number">0x6C</span>, <span class="number">0xC8</span>, <span class="number">0x43</span>, <span class="number">0x07</span>, <span class="number">0x5C</span>, <span class="number">0x08</span>, <span class="number">0xF7</span>, <span class="number">0xDF</span>,</span><br><span class="line">    <span class="number">0xEB</span>, <span class="number">0xE3</span>, <span class="number">0xAE</span>, <span class="number">0xA4</span></span><br><span class="line">]</span><br><span class="line">result = struct.unpack(<span class="string">&quot;&lt;16I&quot;</span>, <span class="built_in">bytes</span>(result))</span><br><span class="line"></span><br><span class="line">tmp = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    tmp += de_cmp(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    tmp = decrypt(tmp, enc_table)</span><br><span class="line">    tmp = reverse_order(tmp, reverse_table)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> tmp))</span><br></pre></td></tr></table></figure><h2 id="lessequalmore"><a href="#lessequalmore" class="headerlink" title="lessequalmore"></a>lessequalmore</h2><p>👉 <a href="https://phot0n.com/2023/09/11/HITCONCTF-2023/">网上师傅的wp</a></p><h3 id="程序逻辑-1"><a href="#程序逻辑-1" class="headerlink" title="程序逻辑"></a>程序逻辑</h3><p>程序逻辑是虚拟机，输入然后验证。</p><p><img src="/2023/11/21/CTF-wp-2/image-20231029203817832.png"></p><p>用python实现虚拟机：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;chal.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read().split()</span><br><span class="line">    data = [<span class="built_in">int</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> data]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VM</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, opcode</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.opcode = opcode</span><br><span class="line">        self.eip = <span class="number">0</span></span><br><span class="line">        self.input_num = <span class="number">0</span></span><br><span class="line">        self.flag_5436 = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getinput</span>(<span class="params">self</span>):</span><br><span class="line">        t = sys.stdin.read(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> t != <span class="string">&#x27;%&#x27;</span>:</span><br><span class="line">            num = np.int64(<span class="built_in">ord</span>(t))</span><br><span class="line">            <span class="keyword">return</span> ~num</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            t = sys.stdin.read(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">if</span> t == <span class="string">&#x27;x&#x27;</span>:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    num = sys.stdin.readline()</span><br><span class="line">                    num = <span class="built_in">int</span>(num, <span class="number">16</span>)</span><br><span class="line">                    num = np.int64(num)</span><br><span class="line">                    <span class="keyword">return</span> ~num</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;please input a hex number&#x27;</span>)</span><br><span class="line">                    exit(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">elif</span> <span class="number">37</span> &lt;= <span class="built_in">ord</span>(t) &lt;= <span class="number">57</span>:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    num = t + sys.stdin.readline()</span><br><span class="line">                    num = <span class="built_in">int</span>(num, <span class="number">10</span>)</span><br><span class="line">                    <span class="built_in">print</span>(num)</span><br><span class="line">                    num = np.int64(num)</span><br><span class="line">                    <span class="keyword">return</span> ~num</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;please input a dec number&#x27;</span>)</span><br><span class="line">                    exit(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                num = np.int64(<span class="built_in">ord</span>(t))</span><br><span class="line">                <span class="keyword">return</span> ~num</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> self.eip &gt;= <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> self.eip == <span class="number">5436</span>:</span><br><span class="line">                self.flag_5436 += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> self.flag_5436 == <span class="number">3</span>:</span><br><span class="line">                    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;check_begin_opcode.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                        f.write(<span class="built_in">str</span>(self.opcode))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            arg1, arg2 = self.opcode[self.eip], self.opcode[self.eip + <span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> arg1 &lt; <span class="number">0</span> <span class="keyword">and</span> arg2 &gt;= <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># num = -int(input())</span></span><br><span class="line">                <span class="keyword">if</span> self.input_num &lt; <span class="number">64</span>:</span><br><span class="line">                    num = -(self.input_num % <span class="number">26</span> + <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;get input&quot;</span>, (self.input_num % <span class="number">26</span> + <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)))</span><br><span class="line">                    self.input_num += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    num = -<span class="number">10</span></span><br><span class="line"></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.eip&#125;</span>:\tcode[<span class="subst">&#123;arg2&#125;</span>] = code[<span class="subst">&#123;arg2&#125;</span>]:<span class="subst">&#123;self.opcode[arg2]&#125;</span> - input:<span class="subst">&#123;num&#125;</span> = <span class="subst">&#123;self.opcode[arg2] - num&#125;</span>&quot;</span>)</span><br><span class="line">                self.opcode[arg2] -= num</span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> arg1 &gt;= <span class="number">0</span> <span class="keyword">and</span> arg2 &gt;= <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.eip&#125;</span>:\tcode[<span class="subst">&#123;arg2&#125;</span>] = code[<span class="subst">&#123;arg2&#125;</span>]:<span class="subst">&#123;self.opcode[arg2]&#125;</span> - code[<span class="subst">&#123;arg1&#125;</span>]:<span class="subst">&#123;self.opcode[arg1]&#125;</span> = <span class="subst">&#123;self.opcode[arg2] - self.opcode[arg1]&#125;</span>&quot;</span>)</span><br><span class="line">                self.opcode[arg2] -= self.opcode[arg1]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> arg1 &gt;= <span class="number">0</span> <span class="keyword">and</span> arg2 &lt; <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.eip&#125;</span>:\tOutput: code[<span class="subst">&#123;arg1&#125;</span>]:<span class="subst">&#123;<span class="built_in">chr</span>(self.opcode[arg1])&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">chr</span>(self.opcode[arg1]), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                num = -<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">chr</span>(num), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> self.opcode[arg2] &lt;= <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">if</span> self.opcode[self.eip + <span class="number">2</span>] != self.eip + <span class="number">3</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;code[<span class="subst">&#123;arg2&#125;</span>]:<span class="subst">&#123;self.opcode[arg2]&#125;</span> &lt;= 0, jmp to code[<span class="subst">&#123;self.eip + <span class="number">2</span>&#125;</span>]:<span class="subst">&#123;self.opcode[self.eip + <span class="number">2</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                self.eip = self.opcode[self.eip + <span class="number">2</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.eip += <span class="number">3</span></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    vm = VM(data)</span><br><span class="line">    vm.run()</span><br></pre></td></tr></table></figure><p>根据输出的信息，可以知道输入被放到了<code>opcode[16:]</code>的地方，长度放在了<code>opcode[4]</code>，<code>4375, 4376, 4394, 4561, 4562, 4580</code>这几个地方放了最后一位输出的位置。</p><p>根据程序逻辑，输出之后会再次输出回车符，程序一共输出了四次回车符（<code>eip = 5433</code>）:</p><p><img src="/2023/11/21/CTF-wp-2/image-20231029203935907.png"></p><p>第三次回车符之后就是开始检查输入了，因此可以不用管前面的部分，上面的代码尝试当程序第三次执行完输出之后，即到<code>eip=5436</code>时，将<code>opcode</code> <code>dump</code>出来。</p><p><code>dump</code>出来后，直接让虚拟机从<code>5436</code>开始执行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;cd.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = <span class="built_in">eval</span>(f.read())</span><br><span class="line"><span class="built_in">print</span>(data[<span class="number">7</span>])</span><br><span class="line">length = <span class="number">64</span></span><br><span class="line">data[<span class="number">4</span>] = length</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">4375</span>, <span class="number">4376</span>, <span class="number">4394</span>]:</span><br><span class="line">    data[i] = <span class="number">16</span>+length-<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">4561</span>, <span class="number">4562</span>, <span class="number">4580</span>]:</span><br><span class="line">    data[i] = <span class="number">16</span>+length</span><br><span class="line">x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, \</span><br><span class="line">    x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, \</span><br><span class="line">    x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, \</span><br><span class="line">    x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63 = sympy.symbols(</span><br><span class="line">        <span class="string">&#x27;x0:64&#x27;</span>, integer=<span class="literal">True</span>, positive=<span class="literal">True</span>, domain=sympy.Interval(<span class="number">0</span>, <span class="number">256</span>)</span><br><span class="line">    )</span><br><span class="line">data[<span class="number">16</span>] = x0</span><br><span class="line">data[<span class="number">17</span>] = x1</span><br><span class="line">data[<span class="number">18</span>] = x2</span><br><span class="line">data[<span class="number">19</span>] = x3</span><br><span class="line">data[<span class="number">20</span>] = x4</span><br><span class="line">data[<span class="number">21</span>] = x5</span><br><span class="line">data[<span class="number">22</span>] = x6</span><br><span class="line">data[<span class="number">23</span>] = x7</span><br><span class="line">data[<span class="number">24</span>] = x8</span><br><span class="line">data[<span class="number">25</span>] = x9</span><br><span class="line">data[<span class="number">26</span>] = x10</span><br><span class="line">data[<span class="number">27</span>] = x11</span><br><span class="line">data[<span class="number">28</span>] = x12</span><br><span class="line">data[<span class="number">29</span>] = x13</span><br><span class="line">data[<span class="number">30</span>] = x14</span><br><span class="line">data[<span class="number">31</span>] = x15</span><br><span class="line">data[<span class="number">32</span>] = x16</span><br><span class="line">data[<span class="number">33</span>] = x17</span><br><span class="line">data[<span class="number">34</span>] = x18</span><br><span class="line">data[<span class="number">35</span>] = x19</span><br><span class="line">data[<span class="number">36</span>] = x20</span><br><span class="line">data[<span class="number">37</span>] = x21</span><br><span class="line">data[<span class="number">38</span>] = x22</span><br><span class="line">data[<span class="number">39</span>] = x23</span><br><span class="line">data[<span class="number">40</span>] = x24</span><br><span class="line">data[<span class="number">41</span>] = x25</span><br><span class="line">data[<span class="number">42</span>] = x26</span><br><span class="line">data[<span class="number">43</span>] = x27</span><br><span class="line">data[<span class="number">44</span>] = x28</span><br><span class="line">data[<span class="number">45</span>] = x29</span><br><span class="line">data[<span class="number">46</span>] = x30</span><br><span class="line">data[<span class="number">47</span>] = x31</span><br><span class="line">data[<span class="number">48</span>] = x32</span><br><span class="line">data[<span class="number">49</span>] = x33</span><br><span class="line">data[<span class="number">50</span>] = x34</span><br><span class="line">data[<span class="number">51</span>] = x35</span><br><span class="line">data[<span class="number">52</span>] = x36</span><br><span class="line">data[<span class="number">53</span>] = x37</span><br><span class="line">data[<span class="number">54</span>] = x38</span><br><span class="line">data[<span class="number">55</span>] = x39</span><br><span class="line">data[<span class="number">56</span>] = x40</span><br><span class="line">data[<span class="number">57</span>] = x41</span><br><span class="line">data[<span class="number">58</span>] = x42</span><br><span class="line">data[<span class="number">59</span>] = x43</span><br><span class="line">data[<span class="number">60</span>] = x44</span><br><span class="line">data[<span class="number">61</span>] = x45</span><br><span class="line">data[<span class="number">62</span>] = x46</span><br><span class="line">data[<span class="number">63</span>] = x47</span><br><span class="line">data[<span class="number">64</span>] = x48</span><br><span class="line">data[<span class="number">65</span>] = x49</span><br><span class="line">data[<span class="number">66</span>] = x50</span><br><span class="line">data[<span class="number">67</span>] = x51</span><br><span class="line">data[<span class="number">68</span>] = x52</span><br><span class="line">data[<span class="number">69</span>] = x53</span><br><span class="line">data[<span class="number">70</span>] = x54</span><br><span class="line">data[<span class="number">71</span>] = x55</span><br><span class="line">data[<span class="number">72</span>] = x56</span><br><span class="line">data[<span class="number">73</span>] = x57</span><br><span class="line">data[<span class="number">74</span>] = x58</span><br><span class="line">data[<span class="number">75</span>] = x59</span><br><span class="line">data[<span class="number">76</span>] = x60</span><br><span class="line">data[<span class="number">77</span>] = x61</span><br><span class="line">data[<span class="number">78</span>] = x62</span><br><span class="line">data[<span class="number">79</span>] = x63</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VM</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, opcode</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.opcode = opcode</span><br><span class="line">        self.eip = <span class="number">5436</span></span><br><span class="line">        self.input_num = <span class="number">0</span></span><br><span class="line">        self.index = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> self.eip &gt;= <span class="number">0</span>:</span><br><span class="line">            arg1, arg2 = self.opcode[self.eip], self.opcode[self.eip + <span class="number">1</span>]</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">type</span>(arg1)==sympy.core.add.Add):</span><br><span class="line">                varname = <span class="string">f&quot;y<span class="subst">&#123;self.index&#125;</span>&quot;</span></span><br><span class="line">                <span class="built_in">vars</span>()[varname] = sympy.symbols(varname,integer=<span class="literal">True</span>,positive=<span class="literal">True</span>)</span><br><span class="line">                num = <span class="built_in">vars</span>()[varname]</span><br><span class="line">                self.index += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> arg1 &lt; <span class="number">0</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;input&quot;</span>, end=<span class="string">&quot;: &quot;</span>)</span><br><span class="line">                    num = -<span class="built_in">int</span>(<span class="built_in">input</span>()) <span class="comment"># 基本不会走到这里了</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    num = self.opcode[arg1]</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">if</span> arg2 &lt; <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">chr</span>(num), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.eip&#125;</span>:\tcode[<span class="subst">&#123;arg2&#125;</span>] = code[<span class="subst">&#123;arg2&#125;</span>]:<span class="subst">&#123;self.opcode[arg2]&#125;</span> - code[<span class="subst">&#123;arg1&#125;</span>]:<span class="subst">&#123;self.opcode[arg1]&#125;</span> = <span class="subst">&#123;self.opcode[arg2] - self.opcode[arg1]&#125;</span>&quot;</span>)</span><br><span class="line">                self.opcode[arg2] -= num</span><br><span class="line">                self.opcode[arg2] = sympy.sympify(self.opcode[arg2])</span><br><span class="line"></span><br><span class="line">            bore = self.opcode[arg2] &lt;= <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">type</span>(bore)==sympy.core.relational.LessThan):</span><br><span class="line">                ans_max_set = &#123;&#125;</span><br><span class="line">                ans_min_set = &#123;&#125;</span><br><span class="line">                sym = bore.free_symbols</span><br><span class="line">                <span class="keyword">while</span>(sym != <span class="built_in">set</span>()):</span><br><span class="line">                    tmp = sym.pop()</span><br><span class="line">                    ans_max_set[tmp]=<span class="number">256</span></span><br><span class="line">                    ans_min_set[tmp]=<span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span>(bore.subs(ans_max_set)  <span class="keyword">or</span> bore.subs(ans_min_set)):</span><br><span class="line">                    <span class="keyword">if</span> self.opcode[self.eip + <span class="number">2</span>] != self.eip + <span class="number">3</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;code[<span class="subst">&#123;arg2&#125;</span>]:<span class="subst">&#123;self.opcode[arg2]&#125;</span> &lt;= 0, jmp to code[<span class="subst">&#123;self.eip + <span class="number">2</span>&#125;</span>]:<span class="subst">&#123;self.opcode[self.eip + <span class="number">2</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                </span><br><span class="line">                    self.eip = self.opcode[self.eip+<span class="number">2</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.eip += <span class="number">3</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> self.opcode[arg2] &lt;= <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">if</span> self.opcode[self.eip + <span class="number">2</span>] != self.eip + <span class="number">3</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;code[<span class="subst">&#123;arg2&#125;</span>]:<span class="subst">&#123;self.opcode[arg2]&#125;</span> &lt;= 0, jmp to code[<span class="subst">&#123;self.eip + <span class="number">2</span>&#125;</span>]:<span class="subst">&#123;self.opcode[self.eip + <span class="number">2</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                </span><br><span class="line">                    self.eip = self.opcode[self.eip + <span class="number">2</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.eip += <span class="number">3</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(self.opcode)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span> -&gt;<span class="subst">&#123;self.opcode[i]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    vm = VM(data)</span><br><span class="line">    vm.run()</span><br></pre></td></tr></table></figure><p>可以使用<code>sympy</code>，让输入是符号，以便在过程的表达式中好看点，在执行之前，将输入放到opcode中。</p><p>在输出的信息中，跟踪<code>x0</code>走，可以发现其逐渐变成了多项式：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231029204536946.png"></p><p>原本存放<code>x0</code>的地方<code>opcode[16]</code>存放了多项式：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231029204657885.png"></p><p>跟踪这个多项式的最后结果，其和一个大数进行了减法，猜测是比较：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231029204818076.png"></p><p>最后，虚拟机结束后，输出opcode的结果，存放输入的地方都变成了多项式：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231029204928320.png"></p><p>比较的结果可以在下面找到：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231029204947060.png"></p><p>以上可以列成等式，但能看出部分等式，左右相差较大，观察其他式子，可以补充个<code>16777216</code>。</p><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">x0 = Int(<span class="string">&#x27;x0&#x27;</span>)</span><br><span class="line">x1 = Int(<span class="string">&#x27;x1&#x27;</span>)</span><br><span class="line">x2 = Int(<span class="string">&#x27;x2&#x27;</span>)</span><br><span class="line">x3 = Int(<span class="string">&#x27;x3&#x27;</span>)</span><br><span class="line">x4 = Int(<span class="string">&#x27;x4&#x27;</span>)</span><br><span class="line">x5 = Int(<span class="string">&#x27;x5&#x27;</span>)</span><br><span class="line">x6 = Int(<span class="string">&#x27;x6&#x27;</span>)</span><br><span class="line">x7 = Int(<span class="string">&#x27;x7&#x27;</span>)</span><br><span class="line">x8 = Int(<span class="string">&#x27;x8&#x27;</span>)</span><br><span class="line">x9 = Int(<span class="string">&#x27;x9&#x27;</span>)</span><br><span class="line">x10 = Int(<span class="string">&#x27;x10&#x27;</span>)</span><br><span class="line">x11 = Int(<span class="string">&#x27;x11&#x27;</span>)</span><br><span class="line">x12 = Int(<span class="string">&#x27;x12&#x27;</span>)</span><br><span class="line">x13 = Int(<span class="string">&#x27;x13&#x27;</span>)</span><br><span class="line">x14 = Int(<span class="string">&#x27;x14&#x27;</span>)</span><br><span class="line">x15 = Int(<span class="string">&#x27;x15&#x27;</span>)</span><br><span class="line">x16 = Int(<span class="string">&#x27;x16&#x27;</span>)</span><br><span class="line">x17 = Int(<span class="string">&#x27;x17&#x27;</span>)</span><br><span class="line">x18 = Int(<span class="string">&#x27;x18&#x27;</span>)</span><br><span class="line">x19 = Int(<span class="string">&#x27;x19&#x27;</span>)</span><br><span class="line">x20 = Int(<span class="string">&#x27;x20&#x27;</span>)</span><br><span class="line">x21 = Int(<span class="string">&#x27;x21&#x27;</span>)</span><br><span class="line">x22 = Int(<span class="string">&#x27;x22&#x27;</span>)</span><br><span class="line">x23 = Int(<span class="string">&#x27;x23&#x27;</span>)</span><br><span class="line">x24 = Int(<span class="string">&#x27;x24&#x27;</span>)</span><br><span class="line">x25 = Int(<span class="string">&#x27;x25&#x27;</span>)</span><br><span class="line">x26 = Int(<span class="string">&#x27;x26&#x27;</span>)</span><br><span class="line">x27 = Int(<span class="string">&#x27;x27&#x27;</span>)</span><br><span class="line">x28 = Int(<span class="string">&#x27;x28&#x27;</span>)</span><br><span class="line">x29 = Int(<span class="string">&#x27;x29&#x27;</span>)</span><br><span class="line">x30 = Int(<span class="string">&#x27;x30&#x27;</span>)</span><br><span class="line">x31 = Int(<span class="string">&#x27;x31&#x27;</span>)</span><br><span class="line">x32 = Int(<span class="string">&#x27;x32&#x27;</span>)</span><br><span class="line">x33 = Int(<span class="string">&#x27;x33&#x27;</span>)</span><br><span class="line">x34 = Int(<span class="string">&#x27;x34&#x27;</span>)</span><br><span class="line">x35 = Int(<span class="string">&#x27;x35&#x27;</span>)</span><br><span class="line">x36 = Int(<span class="string">&#x27;x36&#x27;</span>)</span><br><span class="line">x37 = Int(<span class="string">&#x27;x37&#x27;</span>)</span><br><span class="line">x38 = Int(<span class="string">&#x27;x38&#x27;</span>)</span><br><span class="line">x39 = Int(<span class="string">&#x27;x39&#x27;</span>)</span><br><span class="line">x40 = Int(<span class="string">&#x27;x40&#x27;</span>)</span><br><span class="line">x41 = Int(<span class="string">&#x27;x41&#x27;</span>)</span><br><span class="line">x42 = Int(<span class="string">&#x27;x42&#x27;</span>)</span><br><span class="line">x43 = Int(<span class="string">&#x27;x43&#x27;</span>)</span><br><span class="line">x44 = Int(<span class="string">&#x27;x44&#x27;</span>)</span><br><span class="line">x45 = Int(<span class="string">&#x27;x45&#x27;</span>)</span><br><span class="line">x46 = Int(<span class="string">&#x27;x46&#x27;</span>)</span><br><span class="line">x47 = Int(<span class="string">&#x27;x47&#x27;</span>)</span><br><span class="line">x48 = Int(<span class="string">&#x27;x48&#x27;</span>)</span><br><span class="line">x49 = Int(<span class="string">&#x27;x49&#x27;</span>)</span><br><span class="line">x50 = Int(<span class="string">&#x27;x50&#x27;</span>)</span><br><span class="line">x51 = Int(<span class="string">&#x27;x51&#x27;</span>)</span><br><span class="line">x52 = Int(<span class="string">&#x27;x52&#x27;</span>)</span><br><span class="line">x53 = Int(<span class="string">&#x27;x53&#x27;</span>)</span><br><span class="line">x54 = Int(<span class="string">&#x27;x54&#x27;</span>)</span><br><span class="line">x55 = Int(<span class="string">&#x27;x55&#x27;</span>)</span><br><span class="line">x56 = Int(<span class="string">&#x27;x56&#x27;</span>)</span><br><span class="line">x57 = Int(<span class="string">&#x27;x57&#x27;</span>)</span><br><span class="line">x58 = Int(<span class="string">&#x27;x58&#x27;</span>)</span><br><span class="line">x59 = Int(<span class="string">&#x27;x59&#x27;</span>)</span><br><span class="line">x60 = Int(<span class="string">&#x27;x60&#x27;</span>)</span><br><span class="line">x61 = Int(<span class="string">&#x27;x61&#x27;</span>)</span><br><span class="line">x62 = Int(<span class="string">&#x27;x62&#x27;</span>)</span><br><span class="line">x63 = Int(<span class="string">&#x27;x63&#x27;</span>)</span><br><span class="line">solver = Solver()</span><br><span class="line">solver.add(<span class="number">16774200</span> == -<span class="number">7</span> * x0 - <span class="number">2</span> * x1 + <span class="number">3</span> * x2 - <span class="number">4</span> * x3 + <span class="number">4</span> * x4 - <span class="number">13</span> * x5 - <span class="number">2</span> * x6 - <span class="number">7</span> * x7 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">1411</span> == -<span class="number">2</span> * x0 + <span class="number">3</span> * x1 + <span class="number">2</span> * x2 + <span class="number">5</span> * x3 + <span class="number">6</span> * x4 - <span class="number">10</span> * x5 + <span class="number">11</span> * x6 - <span class="number">3</span> * x7)</span><br><span class="line">solver.add(<span class="number">16776275</span> == -<span class="number">2</span> * x0 - <span class="number">4</span> * x1 - <span class="number">3</span> * x2 - <span class="number">3</span> * x3 + <span class="number">4</span> * x4 - <span class="number">5</span> * x5 - <span class="number">2</span> * x6 + <span class="number">6</span> * x7 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">3646</span> == <span class="number">9</span> * x0 + <span class="number">3</span> * x1 - <span class="number">3</span> * x2 + <span class="number">5</span> * x3 - <span class="number">6</span> * x4 + <span class="number">17</span> * x5 + <span class="number">2</span> * x6 + <span class="number">7</span> * x7)</span><br><span class="line">solver.add(<span class="number">1532</span> == -<span class="number">2</span> * x0 + <span class="number">2</span> * x1 - x2 + <span class="number">3</span> * x3 + <span class="number">6</span> * x4 - <span class="number">8</span> * x5 + <span class="number">9</span> * x6 + <span class="number">4</span> * x7)</span><br><span class="line">solver.add(<span class="number">6451</span> == <span class="number">6</span> * x0 + <span class="number">7</span> * x1 - <span class="number">2</span> * x2 + <span class="number">13</span> * x3 + <span class="number">5</span> * x4 + x5 + <span class="number">20</span> * x6 + <span class="number">8</span> * x7)</span><br><span class="line">solver.add(<span class="number">2510</span> == <span class="number">9</span> * x0 - x1 - <span class="number">6</span> * x2 + x3 - <span class="number">8</span> * x4 + <span class="number">22</span> * x5 - <span class="number">6</span> * x6 + <span class="number">13</span> * x7)</span><br><span class="line">solver.add(<span class="number">16777141</span> == <span class="number">5</span> * x0 - <span class="number">5</span> * x1 - <span class="number">8</span> * x2 - <span class="number">6</span> * x3 - <span class="number">5</span> * x4 + <span class="number">15</span> * x5 - <span class="number">11</span> * x6 + <span class="number">15</span> * x7 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">16775256</span> == <span class="number">3</span> * x10 - <span class="number">4</span> * x11 + <span class="number">4</span> * x12 - <span class="number">13</span> * x13 - <span class="number">2</span> * x14 - <span class="number">7</span> * x15 - <span class="number">7</span> * x8 - <span class="number">2</span> * x9 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">2061</span> == <span class="number">2</span> * x10 + <span class="number">5</span> * x11 + <span class="number">6</span> * x12 - <span class="number">10</span> * x13 + <span class="number">11</span> * x14 - <span class="number">3</span> * x15 - <span class="number">2</span> * x8 + <span class="number">3</span> * x9)</span><br><span class="line">solver.add(<span class="number">16776706</span> == -<span class="number">3</span> * x10 - <span class="number">3</span> * x11 + <span class="number">4</span> * x12 - <span class="number">5</span> * x13 - <span class="number">2</span> * x14 + <span class="number">6</span> * x15 - <span class="number">2</span> * x8 - <span class="number">4</span> * x9 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">2260</span> == -<span class="number">3</span> * x10 + <span class="number">5</span> * x11 - <span class="number">6</span> * x12 + <span class="number">17</span> * x13 + <span class="number">2</span> * x14 + <span class="number">7</span> * x15 + <span class="number">9</span> * x8 + <span class="number">3</span> * x9)</span><br><span class="line">solver.add(<span class="number">2107</span> == -x10 + <span class="number">3</span> * x11 + <span class="number">6</span> * x12 - <span class="number">8</span> * x13 + <span class="number">9</span> * x14 + <span class="number">4</span> * x15 - <span class="number">2</span> * x8 + <span class="number">2</span> * x9)</span><br><span class="line">solver.add(<span class="number">6124</span> == -<span class="number">2</span> * x10 + <span class="number">13</span> * x11 + <span class="number">5</span> * x12 + x13 + <span class="number">20</span> * x14 + <span class="number">8</span> * x15 + <span class="number">6</span> * x8 + <span class="number">7</span> * x9)</span><br><span class="line">solver.add(<span class="number">878</span> == -<span class="number">6</span> * x10 + x11 - <span class="number">8</span> * x12 + <span class="number">22</span> * x13 - <span class="number">6</span> * x14 + <span class="number">13</span> * x15 + <span class="number">9</span> * x8 - x9)</span><br><span class="line">solver.add(<span class="number">16776140</span> == -<span class="number">8</span> * x10 - <span class="number">6</span> * x11 - <span class="number">5</span> * x12 + <span class="number">15</span> * x13 - <span class="number">11</span> * x14 + <span class="number">15</span> * x15 + <span class="number">5</span> * x8 - <span class="number">5</span> * x9 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">16775299</span> == -<span class="number">7</span> * x16 - <span class="number">2</span> * x17 + <span class="number">3</span> * x18 - <span class="number">4</span> * x19 + <span class="number">4</span> * x20 - <span class="number">13</span> * x21 - <span class="number">2</span> * x22 - <span class="number">7</span> * x23 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">1374</span> == -<span class="number">2</span> * x16 + <span class="number">3</span> * x17 + <span class="number">2</span> * x18 + <span class="number">5</span> * x19 + <span class="number">6</span> * x20 - <span class="number">10</span> * x21 + <span class="number">11</span> * x22 - <span class="number">3</span> * x23)</span><br><span class="line">solver.add(<span class="number">16776956</span> == -<span class="number">2</span> * x16 - <span class="number">4</span> * x17 - <span class="number">3</span> * x18 - <span class="number">3</span> * x19 + <span class="number">4</span> * x20 - <span class="number">5</span> * x21 - <span class="number">2</span> * x22 + <span class="number">6</span> * x23 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">2212</span> == <span class="number">9</span> * x16 + <span class="number">3</span> * x17 - <span class="number">3</span> * x18 + <span class="number">5</span> * x19 - <span class="number">6</span> * x20 + <span class="number">17</span> * x21 + <span class="number">2</span> * x22 + <span class="number">7</span> * x23)</span><br><span class="line">solver.add(<span class="number">1577</span> == -<span class="number">2</span> * x16 + <span class="number">2</span> * x17 - x18 + <span class="number">3</span> * x19 + <span class="number">6</span> * x20 - <span class="number">8</span> * x21 + <span class="number">9</span> * x22 + <span class="number">4</span> * x23)</span><br><span class="line">solver.add(<span class="number">4993</span> == <span class="number">6</span> * x16 + <span class="number">7</span> * x17 - <span class="number">2</span> * x18 + <span class="number">13</span> * x19 + <span class="number">5</span> * x20 + x21 + <span class="number">20</span> * x22 + <span class="number">8</span> * x23)</span><br><span class="line">solver.add(<span class="number">1351</span> == <span class="number">9</span> * x16 - x17 - <span class="number">6</span> * x18 + x19 - <span class="number">8</span> * x20 + <span class="number">22</span> * x21 - <span class="number">6</span> * x22 + <span class="number">13</span> * x23)</span><br><span class="line">solver.add(<span class="number">16777040</span> == <span class="number">5</span> * x16 - <span class="number">5</span> * x17 - <span class="number">8</span> * x18 - <span class="number">6</span> * x19 - <span class="number">5</span> * x20 + <span class="number">15</span> * x21 - <span class="number">11</span> * x22 + <span class="number">15</span> * x23 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">16774665</span> == -<span class="number">7</span> * x24 - <span class="number">2</span> * x25 + <span class="number">3</span> * x26 - <span class="number">4</span> * x27 + <span class="number">4</span> * x28 - <span class="number">13</span> * x29 - <span class="number">2</span> * x30 - <span class="number">7</span> * x31 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">1498</span> == -<span class="number">2</span> * x24 + <span class="number">3</span> * x25 + <span class="number">2</span> * x26 + <span class="number">5</span> * x27 + <span class="number">6</span> * x28 - <span class="number">10</span> * x29 + <span class="number">11</span> * x30 - <span class="number">3</span> * x31)</span><br><span class="line">solver.add(<span class="number">16776379</span> == -<span class="number">2</span> * x24 - <span class="number">4</span> * x25 - <span class="number">3</span> * x26 - <span class="number">3</span> * x27 + <span class="number">4</span> * x28 - <span class="number">5</span> * x29 - <span class="number">2</span> * x30 + <span class="number">6</span> * x31 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">3062</span> == <span class="number">9</span> * x24 + <span class="number">3</span> * x25 - <span class="number">3</span> * x26 + <span class="number">5</span> * x27 - <span class="number">6</span> * x28 + <span class="number">17</span> * x29 + <span class="number">2</span> * x30 + <span class="number">7</span> * x31)</span><br><span class="line">solver.add(<span class="number">1593</span> == -<span class="number">2</span> * x24 + <span class="number">2</span> * x25 - x26 + <span class="number">3</span> * x27 + <span class="number">6</span> * x28 - <span class="number">8</span> * x29 + <span class="number">9</span> * x30 + <span class="number">4</span> * x31)</span><br><span class="line">solver.add(<span class="number">5966</span> == <span class="number">6</span> * x24 + <span class="number">7</span> * x25 - <span class="number">2</span> * x26 + <span class="number">13</span> * x27 + <span class="number">5</span> * x28 + x29 + <span class="number">20</span> * x30 + <span class="number">8</span> * x31)</span><br><span class="line">solver.add(<span class="number">1924</span> == <span class="number">9</span> * x24 - x25 - <span class="number">6</span> * x26 + x27 - <span class="number">8</span> * x28 + <span class="number">22</span> * x29 - <span class="number">6</span> * x30 + <span class="number">13</span> * x31)</span><br><span class="line">solver.add(<span class="number">16776815</span> == <span class="number">5</span> * x24 - <span class="number">5</span> * x25 - <span class="number">8</span> * x26 - <span class="number">6</span> * x27 - <span class="number">5</span> * x28 + <span class="number">15</span> * x29 - <span class="number">11</span> * x30 + <span class="number">15</span> * x31 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">16774318</span> == -<span class="number">7</span> * x32 - <span class="number">2</span> * x33 + <span class="number">3</span> * x34 - <span class="number">4</span> * x35 + <span class="number">4</span> * x36 - <span class="number">13</span> * x37 - <span class="number">2</span> * x38 - <span class="number">7</span> * x39 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">851</span> == -<span class="number">2</span> * x32 + <span class="number">3</span> * x33 + <span class="number">2</span> * x34 + <span class="number">5</span> * x35 + <span class="number">6</span> * x36 - <span class="number">10</span> * x37 + <span class="number">11</span> * x38 - <span class="number">3</span> * x39)</span><br><span class="line">solver.add(<span class="number">16775763</span> == -<span class="number">2</span> * x32 - <span class="number">4</span> * x33 - <span class="number">3</span> * x34 - <span class="number">3</span> * x35 + <span class="number">4</span> * x36 - <span class="number">5</span> * x37 - <span class="number">2</span> * x38 + <span class="number">6</span> * x39 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">3663</span> == <span class="number">9</span> * x32 + <span class="number">3</span> * x33 - <span class="number">3</span> * x34 + <span class="number">5</span> * x35 - <span class="number">6</span> * x36 + <span class="number">17</span> * x37 + <span class="number">2</span> * x38 + <span class="number">7</span> * x39)</span><br><span class="line">solver.add(<span class="number">711</span> == -<span class="number">2</span> * x32 + <span class="number">2</span> * x33 - x34 + <span class="number">3</span> * x35 + <span class="number">6</span> * x36 - <span class="number">8</span> * x37 + <span class="number">9</span> * x38 + <span class="number">4</span> * x39)</span><br><span class="line">solver.add(<span class="number">5193</span> == <span class="number">6</span> * x32 + <span class="number">7</span> * x33 - <span class="number">2</span> * x34 + <span class="number">13</span> * x35 + <span class="number">5</span> * x36 + x37 + <span class="number">20</span> * x38 + <span class="number">8</span> * x39)</span><br><span class="line">solver.add(<span class="number">2591</span> == <span class="number">9</span> * x32 - x33 - <span class="number">6</span> * x34 + x35 - <span class="number">8</span> * x36 + <span class="number">22</span> * x37 - <span class="number">6</span> * x38 + <span class="number">13</span> * x39)</span><br><span class="line">solver.add(<span class="number">16777069</span> == <span class="number">5</span> * x32 - <span class="number">5</span> * x33 - <span class="number">8</span> * x34 - <span class="number">6</span> * x35 - <span class="number">5</span> * x36 + <span class="number">15</span> * x37 - <span class="number">11</span> * x38 + <span class="number">15</span> * x39 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">16774005</span> == -<span class="number">7</span> * x40 - <span class="number">2</span> * x41 + <span class="number">3</span> * x42 - <span class="number">4</span> * x43 + <span class="number">4</span> * x44 - <span class="number">13</span> * x45 - <span class="number">2</span> * x46 - <span class="number">7</span> * x47 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">1189</span> == -<span class="number">2</span> * x40 + <span class="number">3</span> * x41 + <span class="number">2</span> * x42 + <span class="number">5</span> * x43 + <span class="number">6</span> * x44 - <span class="number">10</span> * x45 + <span class="number">11</span> * x46 - <span class="number">3</span> * x47)</span><br><span class="line">solver.add(<span class="number">16776283</span> == -<span class="number">2</span> * x40 - <span class="number">4</span> * x41 - <span class="number">3</span> * x42 - <span class="number">3</span> * x43 + <span class="number">4</span> * x44 - <span class="number">5</span> * x45 - <span class="number">2</span> * x46 + <span class="number">6</span> * x47 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">3892</span> == <span class="number">9</span> * x40 + <span class="number">3</span> * x41 - <span class="number">3</span> * x42 + <span class="number">5</span> * x43 - <span class="number">6</span> * x44 + <span class="number">17</span> * x45 + <span class="number">2</span> * x46 + <span class="number">7</span> * x47)</span><br><span class="line">solver.add(<span class="number">1372</span> == -<span class="number">2</span> * x40 + <span class="number">2</span> * x41 - x42 + <span class="number">3</span> * x43 + <span class="number">6</span> * x44 - <span class="number">8</span> * x45 + <span class="number">9</span> * x46 + <span class="number">4</span> * x47)</span><br><span class="line">solver.add(<span class="number">6362</span> == <span class="number">6</span> * x40 + <span class="number">7</span> * x41 - <span class="number">2</span> * x42 + <span class="number">13</span> * x43 + <span class="number">5</span> * x44 + x45 + <span class="number">20</span> * x46 + <span class="number">8</span> * x47)</span><br><span class="line">solver.add(<span class="number">2910</span> == <span class="number">9</span> * x40 - x41 - <span class="number">6</span> * x42 + x43 - <span class="number">8</span> * x44 + <span class="number">22</span> * x45 - <span class="number">6</span> * x46 + <span class="number">13</span> * x47)</span><br><span class="line">solver.add(<span class="number">307</span> == <span class="number">5</span> * x40 - <span class="number">5</span> * x41 - <span class="number">8</span> * x42 - <span class="number">6</span> * x43 - <span class="number">5</span> * x44 + <span class="number">15</span> * x45 - <span class="number">11</span> * x46 + <span class="number">15</span> * x47)</span><br><span class="line">solver.add(<span class="number">16775169</span> == -<span class="number">7</span> * x48 - <span class="number">2</span> * x49 + <span class="number">3</span> * x50 - <span class="number">4</span> * x51 + <span class="number">4</span> * x52 - <span class="number">13</span> * x53 - <span class="number">2</span> * x54 - <span class="number">7</span> * x55 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">1031</span> == -<span class="number">2</span> * x48 + <span class="number">3</span> * x49 + <span class="number">2</span> * x50 + <span class="number">5</span> * x51 + <span class="number">6</span> * x52 - <span class="number">10</span> * x53 + <span class="number">11</span> * x54 - <span class="number">3</span> * x55)</span><br><span class="line">solver.add(<span class="number">16776798</span> == -<span class="number">2</span> * x48 - <span class="number">4</span> * x49 - <span class="number">3</span> * x50 - <span class="number">3</span> * x51 + <span class="number">4</span> * x52 - <span class="number">5</span> * x53 - <span class="number">2</span> * x54 + <span class="number">6</span> * x55 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">2426</span> == <span class="number">9</span> * x48 + <span class="number">3</span> * x49 - <span class="number">3</span> * x50 + <span class="number">5</span> * x51 - <span class="number">6</span> * x52 + <span class="number">17</span> * x53 + <span class="number">2</span> * x54 + <span class="number">7</span> * x55)</span><br><span class="line">solver.add(<span class="number">1171</span> == -<span class="number">2</span> * x48 + <span class="number">2</span> * x49 - x50 + <span class="number">3</span> * x51 + <span class="number">6</span> * x52 - <span class="number">8</span> * x53 + <span class="number">9</span> * x54 + <span class="number">4</span> * x55)</span><br><span class="line">solver.add(<span class="number">4570</span> == <span class="number">6</span> * x48 + <span class="number">7</span> * x49 - <span class="number">2</span> * x50 + <span class="number">13</span> * x51 + <span class="number">5</span> * x52 + x53 + <span class="number">20</span> * x54 + <span class="number">8</span> * x55)</span><br><span class="line">solver.add(<span class="number">1728</span> == <span class="number">9</span> * x48 - x49 - <span class="number">6</span> * x50 + x51 - <span class="number">8</span> * x52 + <span class="number">22</span> * x53 - <span class="number">6</span> * x54 + <span class="number">13</span> * x55)</span><br><span class="line">solver.add(<span class="number">33</span> == <span class="number">5</span> * x48 - <span class="number">5</span> * x49 - <span class="number">8</span> * x50 - <span class="number">6</span> * x51 - <span class="number">5</span> * x52 + <span class="number">15</span> * x53 - <span class="number">11</span> * x54 + <span class="number">15</span> * x55)</span><br><span class="line">solver.add(<span class="number">16775201</span> == -<span class="number">7</span> * x56 - <span class="number">2</span> * x57 + <span class="number">3</span> * x58 - <span class="number">4</span> * x59 + <span class="number">4</span> * x60 - <span class="number">13</span> * x61 - <span class="number">2</span> * x62 - <span class="number">7</span> * x63 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">819</span> == -<span class="number">2</span> * x56 + <span class="number">3</span> * x57 + <span class="number">2</span> * x58 + <span class="number">5</span> * x59 + <span class="number">6</span> * x60 - <span class="number">10</span> * x61 + <span class="number">11</span> * x62 - <span class="number">3</span> * x63)</span><br><span class="line">solver.add(<span class="number">16776898</span> == -<span class="number">2</span> * x56 - <span class="number">4</span> * x57 - <span class="number">3</span> * x58 - <span class="number">3</span> * x59 + <span class="number">4</span> * x60 - <span class="number">5</span> * x61 - <span class="number">2</span> * x62 + <span class="number">6</span> * x63 + <span class="number">16777216</span>)</span><br><span class="line">solver.add(<span class="number">2370</span> == <span class="number">9</span> * x56 + <span class="number">3</span> * x57 - <span class="number">3</span> * x58 + <span class="number">5</span> * x59 - <span class="number">6</span> * x60 + <span class="number">17</span> * x61 + <span class="number">2</span> * x62 + <span class="number">7</span> * x63)</span><br><span class="line">solver.add(<span class="number">1132</span> == -<span class="number">2</span> * x56 + <span class="number">2</span> * x57 - x58 + <span class="number">3</span> * x59 + <span class="number">6</span> * x60 - <span class="number">8</span> * x61 + <span class="number">9</span> * x62 + <span class="number">4</span> * x63)</span><br><span class="line">solver.add(<span class="number">4255</span> == <span class="number">6</span> * x56 + <span class="number">7</span> * x57 - <span class="number">2</span> * x58 + <span class="number">13</span> * x59 + <span class="number">5</span> * x60 + x61 + <span class="number">20</span> * x62 + <span class="number">8</span> * x63)</span><br><span class="line">solver.add(<span class="number">1900</span> == <span class="number">9</span> * x56 - x57 - <span class="number">6</span> * x58 + x59 - <span class="number">8</span> * x60 + <span class="number">22</span> * x61 - <span class="number">6</span> * x62 + <span class="number">13</span> * x63)</span><br><span class="line">solver.add(<span class="number">347</span> == <span class="number">5</span> * x56 - <span class="number">5</span> * x57 - <span class="number">8</span> * x58 - <span class="number">6</span> * x59 - <span class="number">5</span> * x60 + <span class="number">15</span> * x61 - <span class="number">11</span> * x62 + <span class="number">15</span> * x63)</span><br><span class="line">flag = []</span><br><span class="line">ans = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> solver.check() == sat:</span><br><span class="line">    m = solver.model()</span><br><span class="line">    flag.append(m[x0])</span><br><span class="line">    flag.append(m[x1])</span><br><span class="line">    flag.append(m[x2])</span><br><span class="line">    flag.append(m[x3])</span><br><span class="line">    flag.append(m[x4])</span><br><span class="line">    flag.append(m[x5])</span><br><span class="line">    flag.append(m[x6])</span><br><span class="line">    flag.append(m[x7])</span><br><span class="line">    flag.append(m[x8])</span><br><span class="line">    flag.append(m[x9])</span><br><span class="line">    flag.append(m[x10])</span><br><span class="line">    flag.append(m[x11])</span><br><span class="line">    flag.append(m[x12])</span><br><span class="line">    flag.append(m[x13])</span><br><span class="line">    flag.append(m[x14])</span><br><span class="line">    flag.append(m[x15])</span><br><span class="line">    flag.append(m[x16])</span><br><span class="line">    flag.append(m[x17])</span><br><span class="line">    flag.append(m[x18])</span><br><span class="line">    flag.append(m[x19])</span><br><span class="line">    flag.append(m[x20])</span><br><span class="line">    flag.append(m[x21])</span><br><span class="line">    flag.append(m[x22])</span><br><span class="line">    flag.append(m[x23])</span><br><span class="line">    flag.append(m[x24])</span><br><span class="line">    flag.append(m[x25])</span><br><span class="line">    flag.append(m[x26])</span><br><span class="line">    flag.append(m[x27])</span><br><span class="line">    flag.append(m[x28])</span><br><span class="line">    flag.append(m[x29])</span><br><span class="line">    flag.append(m[x30])</span><br><span class="line">    flag.append(m[x31])</span><br><span class="line">    flag.append(m[x32])</span><br><span class="line">    flag.append(m[x33])</span><br><span class="line">    flag.append(m[x34])</span><br><span class="line">    flag.append(m[x35])</span><br><span class="line">    flag.append(m[x36])</span><br><span class="line">    flag.append(m[x37])</span><br><span class="line">    flag.append(m[x38])</span><br><span class="line">    flag.append(m[x39])</span><br><span class="line">    flag.append(m[x40])</span><br><span class="line">    flag.append(m[x41])</span><br><span class="line">    flag.append(m[x42])</span><br><span class="line">    flag.append(m[x43])</span><br><span class="line">    flag.append(m[x44])</span><br><span class="line">    flag.append(m[x45])</span><br><span class="line">    flag.append(m[x46])</span><br><span class="line">    flag.append(m[x47])</span><br><span class="line">    flag.append(m[x48])</span><br><span class="line">    flag.append(m[x49])</span><br><span class="line">    flag.append(m[x50])</span><br><span class="line">    flag.append(m[x51])</span><br><span class="line">    flag.append(m[x52])</span><br><span class="line">    flag.append(m[x53])</span><br><span class="line">    flag.append(m[x54])</span><br><span class="line">    flag.append(m[x55])</span><br><span class="line">    flag.append(m[x56])</span><br><span class="line">    flag.append(m[x57])</span><br><span class="line">    flag.append(m[x58])</span><br><span class="line">    flag.append(m[x59])</span><br><span class="line">    flag.append(m[x60])</span><br><span class="line">    flag.append(m[x61])</span><br><span class="line">    flag.append(m[x62])</span><br><span class="line">    flag.append(m[x63])</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">        ans += <span class="built_in">chr</span>(i.as_long())</span><br><span class="line">    <span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure><h2 id="CrazyArcade"><a href="#CrazyArcade" class="headerlink" title="CrazyArcade"></a>CrazyArcade</h2><p>根据这位师傅的思路来做👉<a href="https://github.com/mmm-team/public-writeups/tree/ab897bfac361a4a985dbe6219652499056c74ebe/hitcon2023/rev_crazyarcade">hitcon2023&#x2F;rev_crazyarcade</a></p><blockquote><p>… it uses a driver to read and write memory in the driver via <code>DeviceIoControl</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">read ioctl handler bytes into handler_bytes</span><br><span class="line"></span><br><span class="line">write magic 0x25 bytes into driver+0x3000</span><br><span class="line"></span><br><span class="line">for i in range(0x1337):</span><br><span class="line">    (driver+0x3000)[i%0x25] ^= (i&amp;0xff) ^ handler_bytes[i%0x584]</span><br></pre></td></tr></table></figure></blockquote><p>关注<code>DeviceIoControl</code>的调用，来到<code>sub_7FF6F6CD6070</code>，大概是初始化部分：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">__int64 <span class="title function_">sub_7FF6F6CD6070</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    __int64 OutBuffer[<span class="number">3</span>]; <span class="comment">// [rsp+70h] [rbp-90h] BYREF</span></span><br><span class="line">    <span class="type">int</span> v35; <span class="comment">// [rsp+88h] [rbp-78h]</span></span><br><span class="line">    __int128 v36; <span class="comment">// [rsp+8Ch] [rbp-74h]</span></span><br><span class="line">    <span class="type">int</span> v37; <span class="comment">// [rsp+9Ch] [rbp-64h]</span></span><br><span class="line">    </span><br><span class="line">    __int64 InBuffer[<span class="number">3</span>]; <span class="comment">// [rsp+A0h] [rbp-60h] BYREF</span></span><br><span class="line">    <span class="type">int</span> v39; <span class="comment">// [rsp+B8h] [rbp-48h]</span></span><br><span class="line">    <span class="type">int</span> v40; <span class="comment">// [rsp+BCh] [rbp-44h]</span></span><br><span class="line">    __int128 v41; <span class="comment">// [rsp+C0h] [rbp-40h]</span></span><br><span class="line"></span><br><span class="line">    wcscpy(Source, <span class="string">L&quot;\\CrazyArcade.sys&quot;</span>);</span><br><span class="line">    GetCurrentDirectoryW(<span class="number">0x115</span>u, Buffer);</span><br><span class="line">    wcsncat_s(Buffer, <span class="number">0x115</span>ui64, Source, <span class="number">0x11</span>ui64);</span><br><span class="line">    <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)sub_7FF6F6CD4BD0(v1, v0, Buffer) == <span class="number">5</span> ) <span class="comment">// 开启CrazyArcade服务啥的</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBoxW(<span class="number">0</span>i64, <span class="string">L&quot;Please run with Administrator\n&quot;</span>, <span class="string">L&quot;error&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        ExitProcess(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    hDevice = <span class="number">0</span>i64;</span><br><span class="line">    base_address_CrazyArcade = <span class="number">0</span>i64;</span><br><span class="line">    FileW = CreateFileW(<span class="string">L&quot;\\\\.\\RTCore64&quot;</span>, <span class="number">0xC0000000</span>, <span class="number">0</span>, <span class="number">0</span>i64, <span class="number">3u</span>, <span class="number">0</span>, <span class="number">0</span>i64);</span><br><span class="line">    <span class="keyword">if</span> ( FileW == (HANDLE)<span class="number">-1</span>i64 )</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBoxW(<span class="number">0</span>i64, <span class="string">L&quot;Failed to get driver handle.&quot;</span>, <span class="string">L&quot;error&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        ExitProcess(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    hDevice = FileW;</span><br><span class="line">    v3 = ((__int64 (*)(<span class="type">void</span>))return_base_address_CrazyArcade)();</span><br><span class="line">    base_address_CrazyArcade = v3;</span><br><span class="line">    <span class="keyword">if</span> ( !hDevice || !v3 )</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBoxW(<span class="number">0</span>i64, <span class="string">L&quot;Wrong driver info\n&quot;</span>, <span class="string">L&quot;error&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        ExitProcess(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    v4 = <span class="number">0x584</span>i64;</span><br><span class="line">    qword_7FF6F6CE6248 = (__int64)operator new(<span class="number">0x584</span>ui64);</span><br><span class="line">    v5 = <span class="number">0</span>i64;</span><br><span class="line">    v6 = <span class="number">0</span>i64;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        OutBuffer[<span class="number">1</span>] = v6 + base_address_CrazyArcade + <span class="number">0x1450</span>;</span><br><span class="line">        OutBuffer[<span class="number">0</span>] = <span class="number">0</span>i64;</span><br><span class="line">        OutBuffer[<span class="number">2</span>] = <span class="number">0</span>i64;</span><br><span class="line">        v36 = <span class="number">0</span>i64;</span><br><span class="line">        v37 = <span class="number">0</span>;</span><br><span class="line">        v35 = <span class="number">1</span>;</span><br><span class="line">        DeviceIoControl(hDevice, <span class="number">0x80002048</span>, OutBuffer, <span class="number">0x30</span>u, OutBuffer, <span class="number">0x30</span>u, &amp;BytesReturned, <span class="number">0</span>i64);</span><br><span class="line">        ++v5;</span><br><span class="line">        ++v6;</span><br><span class="line">        *(_BYTE *)(v5 + qword_7FF6F6CE6248 - <span class="number">1</span>) = v36;</span><br><span class="line">        --v4;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( v4 );</span><br><span class="line">    </span><br><span class="line">    v27[<span class="number">0</span>] = <span class="number">0x7F198AB7</span>;</span><br><span class="line">    v7 = v27;</span><br><span class="line">    v27[<span class="number">1</span>] = <span class="number">0xF0812D54</span>;</span><br><span class="line">    v8 = <span class="number">0</span>i64;</span><br><span class="line">    v27[<span class="number">2</span>] = <span class="number">0xC9CADDB8</span>;</span><br><span class="line">    v9 = <span class="number">37</span>i64;</span><br><span class="line">    v27[<span class="number">3</span>] = <span class="number">841204691</span>;</span><br><span class="line">    v28 = <span class="number">0x2EC95302AB8141BA</span>i64;</span><br><span class="line">    v29 = <span class="number">0xD295EDABAD207ED6</span>ui64;</span><br><span class="line">    v30 = <span class="number">0x922AE7B6</span>;</span><br><span class="line">    v31 = <span class="number">62</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        v10 = *(<span class="type">unsigned</span> __int8 *)v7;</span><br><span class="line">        InBuffer[<span class="number">1</span>] = v8 + base_address_CrazyArcade + <span class="number">0x3000</span>;</span><br><span class="line">        v40 = v10;</span><br><span class="line">        InBuffer[<span class="number">0</span>] = <span class="number">0</span>i64;</span><br><span class="line">        InBuffer[<span class="number">2</span>] = <span class="number">0</span>i64;</span><br><span class="line">        v41 = <span class="number">0</span>i64;</span><br><span class="line">        v39 = <span class="number">1</span>;</span><br><span class="line">        DeviceIoControl(hDevice, <span class="number">0x8000204C</span>, InBuffer, <span class="number">0x30</span>u, InBuffer, <span class="number">0x30</span>u, &amp;v33, <span class="number">0</span>i64);</span><br><span class="line">        ++v8;</span><br><span class="line">        v7 = (<span class="type">int</span> *)((<span class="type">char</span> *)v7 + <span class="number">1</span>);</span><br><span class="line">        --v9;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( v9 );</span><br><span class="line">    boom_times = <span class="number">0</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>DeviceIoControl</code>的另一处调用：可以发现WP中的加密逻辑</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">sub_7FF6F6CD30A0</span><span class="params">(__int64 a1)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> *v2; <span class="comment">// rax</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> boom_times; <span class="comment">// ecx</span></span><br><span class="line">    DWORD lpBytesReturned[<span class="number">2</span>]; <span class="comment">// [rsp+40h] [rbp-88h] BYREF</span></span><br><span class="line">    DWORD BytesReturned; <span class="comment">// [rsp+48h] [rbp-80h] BYREF</span></span><br><span class="line">    __int64 OutBuffer[<span class="number">3</span>]; <span class="comment">// [rsp+50h] [rbp-78h] BYREF</span></span><br><span class="line">    <span class="type">int</span> v8; <span class="comment">// [rsp+68h] [rbp-60h]</span></span><br><span class="line">    __int128 v9; <span class="comment">// [rsp+6Ch] [rbp-5Ch]</span></span><br><span class="line">    <span class="type">int</span> v10; <span class="comment">// [rsp+7Ch] [rbp-4Ch]</span></span><br><span class="line">    __int64 InBuffer[<span class="number">3</span>]; <span class="comment">// [rsp+80h] [rbp-48h] BYREF</span></span><br><span class="line">    <span class="type">int</span> v12; <span class="comment">// [rsp+98h] [rbp-30h]</span></span><br><span class="line">    <span class="type">int</span> v13; <span class="comment">// [rsp+9Ch] [rbp-2Ch]</span></span><br><span class="line">    __int128 v14; <span class="comment">// [rsp+A0h] [rbp-28h]</span></span><br><span class="line"></span><br><span class="line">    sub_7FF6F6CD3850(a1, lpBytesReturned);</span><br><span class="line">    v2 = dword_7FF6F6CE62E0;</span><br><span class="line">    <span class="keyword">if</span> ( dword_7FF6F6CE62E0[<span class="number">15</span> * lpBytesReturned[<span class="number">1</span>] + lpBytesReturned[<span class="number">0</span>]] == <span class="number">5</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( byte_7FF6F6CE4038 )</span><br><span class="line">            LODWORD(v2) = Mix_PlayChannel(<span class="number">1</span>i64, qword_7FF6F6CE62D0);</span><br><span class="line">        boom_times = ::boom_times;</span><br><span class="line">        *(_BYTE *)(a1 + <span class="number">20</span>) = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> ( boom_times &lt; <span class="number">0x1337</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            v8 = <span class="number">1</span>;</span><br><span class="line">            OutBuffer[<span class="number">0</span>] = <span class="number">0</span>i64;</span><br><span class="line">            v9 = <span class="number">0</span>i64;</span><br><span class="line">            OutBuffer[<span class="number">2</span>] = <span class="number">0</span>i64;</span><br><span class="line">            v10 = <span class="number">0</span>;</span><br><span class="line">            OutBuffer[<span class="number">1</span>] = base_address_CrazyArcade + <span class="number">0x3000</span> + boom_times % <span class="number">0x25</span>;</span><br><span class="line">            DeviceIoControl(hDevice, <span class="number">0x80002048</span>, OutBuffer, <span class="number">0x30</span>u, OutBuffer, <span class="number">0x30</span>u, &amp;BytesReturned, <span class="number">0</span>i64);</span><br><span class="line">            v14 = <span class="number">0</span>i64;</span><br><span class="line">            InBuffer[<span class="number">0</span>] = <span class="number">0</span>i64;</span><br><span class="line">            InBuffer[<span class="number">2</span>] = <span class="number">0</span>i64;</span><br><span class="line">            v12 = <span class="number">1</span>;</span><br><span class="line">            InBuffer[<span class="number">1</span>] = ::boom_times % <span class="number">0x25</span>u + base_address_CrazyArcade + <span class="number">0x3000</span>;</span><br><span class="line">            v13 = (<span class="type">unsigned</span> __int8)(::boom_times ^ v9) ^ *(<span class="type">unsigned</span> __int8 *)(::boom_times % <span class="number">0x584</span>u + qword_7FF6F6CE6248);</span><br><span class="line">            LODWORD(v2) = DeviceIoControl(hDevice, <span class="number">0x8000204C</span>, InBuffer, <span class="number">0x30</span>u, InBuffer, <span class="number">0x30</span>u, lpBytesReturned, <span class="number">0</span>i64);</span><br><span class="line">            ++::boom_times;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">int</span>)v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>CrazyArcade.sys</code>的部分逻辑，为<code>CrazyArcade</code>的驱动操作，以下的<code>case</code>的为根据控制代码来进行（只贴了两个用到了的）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall <span class="title function_">sub_11450</span><span class="params">(__int64 a1, IRP *a2)</span>&#123;</span><br><span class="line">    a2-&gt;IoStatus.Status = <span class="number">0</span>;</span><br><span class="line">    a2-&gt;IoStatus.Information = <span class="number">0</span>i64;</span><br><span class="line">    CurrentStackLocation = a2-&gt;Tail.Overlay.CurrentStackLocation;</span><br><span class="line">    p_Type = (<span class="type">int</span> *)&amp;a2-&gt;AssociatedIrp.MasterIrp-&gt;Type;</span><br><span class="line">    Options = CurrentStackLocation-&gt;Parameters.Create.Options;</span><br><span class="line">    v6 = CurrentStackLocation-&gt;Parameters.Read.Length;</span><br><span class="line"><span class="keyword">if</span> ( CurrentStackLocation-&gt;MajorFunction == <span class="number">14</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">switch</span> ( CurrentStackLocation-&gt;Parameters.Read.ByteOffset.LowPart )</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">case</span> <span class="number">0x80002048</span>:</span><br><span class="line">                <span class="keyword">if</span> ( (_DWORD)Options == <span class="number">48</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    v7 = *((_QWORD *)p_Type + <span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">if</span> ( v7 )</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">switch</span> ( p_Type[<span class="number">6</span>] )</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                p_Type[<span class="number">7</span>] = *(<span class="type">unsigned</span> __int8 *)((<span class="type">unsigned</span> <span class="type">int</span>)p_Type[<span class="number">5</span>] + v7);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                p_Type[<span class="number">7</span>] = *(<span class="type">unsigned</span> __int16 *)((<span class="type">unsigned</span> <span class="type">int</span>)p_Type[<span class="number">5</span>] + v7);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                                p_Type[<span class="number">7</span>] = *(_DWORD *)((<span class="type">unsigned</span> <span class="type">int</span>)p_Type[<span class="number">5</span>] + v7);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        a2-&gt;IoStatus.Status = <span class="number">0</span>;</span><br><span class="line">                        a2-&gt;IoStatus.Information = <span class="number">48</span>i64;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        a2-&gt;IoStatus.Status = <span class="number">0xC000000D</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                  a2-&gt;IoStatus.Status = <span class="number">0xC000000D</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x8000204C</span>:</span><br><span class="line">                <span class="keyword">if</span> ( (_DWORD)Options == <span class="number">48</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    v8 = *((_QWORD *)p_Type + <span class="number">1</span>); <span class="comment">// p_Type[2]</span></span><br><span class="line">                    <span class="keyword">if</span> ( v8 )</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">switch</span> ( p_Type[<span class="number">6</span>] )</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                *(_BYTE *)((<span class="type">unsigned</span> <span class="type">int</span>)p_Type[<span class="number">5</span>] + v8) = *((_BYTE *)p_Type + <span class="number">28</span>);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                *(_WORD *)((<span class="type">unsigned</span> <span class="type">int</span>)p_Type[<span class="number">5</span>] + v8) = *((_WORD *)p_Type + <span class="number">14</span>);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                                *(_DWORD *)((<span class="type">unsigned</span> <span class="type">int</span>)p_Type[<span class="number">5</span>] + v8) = p_Type[<span class="number">7</span>];</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        a2-&gt;IoStatus.Status = <span class="number">0</span>;</span><br><span class="line">                        a2-&gt;IoStatus.Information = <span class="number">48</span>i64;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        a2-&gt;IoStatus.Status = <span class="number">-1073741670</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a2-&gt;IoStatus.Status = <span class="number">-1073741811</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line">    Status = a2-&gt;IoStatus.Status;</span><br><span class="line">    IofCompleteRequest(a2, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据<code>CrazyArcade.sys</code>中的代码，加上GPT可以判断<code>0x8000204C</code>是写数据，<code>0x80002048</code>是读数据。</p><p>那么在<code>sub_7FF6F6CD6070</code>中就是初始化数据了。</p><p>调试<code>sub_7FF6F6CD30A0</code>发现当经过<code>DeviceIoContorl</code>后，<code>v9</code>发生了变化，猜测该数据就是读出来的数据。</p><p><code>v9</code>在OutBuffer的四个字节之后，而下方计算的值<code>v13</code>在<code>InBuffer</code>在四个字节之后，猜测<code>v13</code>就是写回去的数据。</p><p>并且<code>OutBuffer[1], InBuffer[1]</code>是读写驱动内存的数据的位置。</p><p><img src="/2023/11/21/CTF-wp-2/image-20231117222815091.png"></p><p>因此，在<code>sub_7FF6F6CD6070</code>就是初始化数据赋值的部分：</p><p><img src="/2023/11/21/CTF-wp-2/image-20231117223423707.png"></p><p>以上就可以求flag了，中间的数据可以直接dump出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;handler_bytes&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    handler_bytes = f.read()</span><br><span class="line">handler_array = <span class="built_in">list</span>(handler_bytes)</span><br><span class="line">data = [</span><br><span class="line">    <span class="number">0x7F198AB7</span>, <span class="number">0x0F0812D54</span>, <span class="number">0x0C9CADDB8</span>, <span class="number">0x3223C3D3</span>, <span class="number">0x0AB8141BA</span>, </span><br><span class="line">    <span class="number">0x2EC95302</span>, <span class="number">0x0AD207ED6</span>, <span class="number">0x0D295EDAB</span>, <span class="number">0x922AE7B6</span>, <span class="number">0x3E</span></span><br><span class="line">]</span><br><span class="line">d = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data) - <span class="number">1</span>):</span><br><span class="line">    d += struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, data[i])</span><br><span class="line">d += struct.pack(<span class="string">&#x27;&lt;B&#x27;</span>, data[-<span class="number">1</span>])</span><br><span class="line">d = <span class="built_in">list</span>(d)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x1337</span>):</span><br><span class="line">    d[i % <span class="built_in">len</span>(d)] ^= (i &amp; <span class="number">0xff</span>) ^ handler_array[i % <span class="built_in">len</span>(handler_array)]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>, d)))</span><br><span class="line"><span class="comment"># hitcon&#123;cr4zy_arc4de_wi7h_vuln_dr1ver&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-WP-1</title>
      <link href="/2023/11/21/CTF-wp-1/"/>
      <url>/2023/11/21/CTF-wp-1/</url>
      
        <content type="html"><![CDATA[<h1 id="巅峰极客2023"><a href="#巅峰极客2023" class="headerlink" title="巅峰极客2023"></a>巅峰极客2023</h1><p>wp1:<a href="https://www.cnblogs.com/gaoyucan/p/17577858.html">巅峰极客 2023 逆向 Writeup - s11nk - 博客园 (cnblogs.com)</a></p><h2 id="g0Re"><a href="#g0Re" class="headerlink" title="g0Re"></a>g0Re</h2><h3 id="还原特征码"><a href="#还原特征码" class="headerlink" title="还原特征码"></a>还原特征码</h3><p><img src="/2023/11/21/CTF-wp-1/image-20230801125708417.png" alt="1"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230801125740785.png" alt="2"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230801125759270.png" alt="3"></p><p>即可upx脱壳。</p><h3 id="程序逻辑"><a href="#程序逻辑" class="headerlink" title="程序逻辑"></a>程序逻辑</h3><p>首先是一个AES加密，调试可以得出加密函数：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230801170924313.png" alt="加密"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230801170937909.png" alt="加密"></p><p>然后一个换表了的base64：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230801164047334.png" alt="base64实现部分逻辑"></p><p>最后与key异或，然后比较：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230801165034002.png" alt="异或、比较"></p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">key = [</span><br><span class="line">    <span class="number">0x77</span>, <span class="number">0x76</span>, <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x74</span>, <span class="number">0x62</span>, <span class="number">0x79</span>, <span class="number">0x67</span>, <span class="number">0x77</span>, <span class="number">0x62</span>,</span><br><span class="line">    <span class="number">0x6B</span>, <span class="number">0x32</span>, <span class="number">0x62</span>, <span class="number">0x34</span>, <span class="number">0x36</span>, <span class="number">0x64</span></span><br><span class="line">]</span><br><span class="line">uni_base64 = <span class="string">&#x27;456789&#125;#IJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123ABCDEFGH&#x27;</span></span><br><span class="line">std_base64 = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">data = [</span><br><span class="line">    <span class="number">0xC9F5C5CFC889CEE6</span>, <span class="number">0xCCAC7FCE91C0D9D2</span>,</span><br><span class="line">    <span class="number">0x92EAD496C0B7CFE9</span>, <span class="number">0x93AEA5CB84DFD7E2</span>,</span><br><span class="line">    <span class="number">0xC9F0CEDF97BECAA6</span>, <span class="number">0xDB65B1C46BAEE1B7</span>,</span><br><span class="line">    <span class="number">0xC3ED8CD69392EDCE</span>, <span class="number">0xA7B5B2AAA594DAA3</span></span><br><span class="line">]</span><br><span class="line">result = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    result += struct.pack(<span class="string">&#x27;&lt;Q&#x27;</span>, data[i])</span><br><span class="line">result = <span class="built_in">list</span>(result)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    result[i] -= key[i % <span class="number">16</span>]</span><br><span class="line">    result[i] ^= <span class="number">0x1A</span></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> result)</span><br><span class="line">result = result.translate(<span class="built_in">str</span>.maketrans(uni_base64, std_base64))</span><br><span class="line">result = base64.b64decode(result)</span><br><span class="line">result = AES.new(<span class="built_in">bytearray</span>(key), mode=AES.MODE_ECB).decrypt(result)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h2 id="ezlua"><a href="#ezlua" class="headerlink" title="ezlua"></a>ezlua</h2><p>跟着<a href="https://www.cnblogs.com/gaoyucan/p/17577858.html">巅峰极客 2023 逆向 Writeup</a>走</p><h3 id="程序逻辑-1"><a href="#程序逻辑-1" class="headerlink" title="程序逻辑"></a>程序逻辑</h3><p>程序获取输入，验证是否都为十六进制字符，之后每两位输入组成两位十六进制数放入<code>lua_code[0x59b9:0x59CE]</code>，</p><p><img src="/2023/11/21/CTF-wp-1/image-20231013164203497.png"></p><p>输入后为<code>lua_code[0x59b9:0x59CE]</code>下断点，在这里被读取了，是<code>lj_buf_ruleb128</code></p><p><img src="/2023/11/21/CTF-wp-1/image-20231013170345369.png"></p><p>来到其上层函数：</p><p><img src="/2023/11/21/CTF-wp-1/image-20231013170840450.png"></p><p><img src="/2023/11/21/CTF-wp-1/image-20231013170901540.png" alt="师傅的思路"></p><p>现输⼊的数据其实是两个 u64 类型的数字使⽤ uleb128 编码成 4 个 32bit 的值，判断依据是 tp 的值均为 3。</p><p><img src="/2023/11/21/CTF-wp-1/image-20231013173740146.png"></p><p>猜测是调用<code>lua</code>变化输入，然后再获取结果，进行比较。</p><h3 id="反编译luajit"><a href="#反编译luajit" class="headerlink" title="反编译luajit"></a>反编译luajit</h3><p>将<code>lua_code</code>保存为二进制文件，用<a href="https://github.com/Dr-MTN/luajit-decompiler">luajit-decompiler</a>反编译。</p><p><img src="/2023/11/21/CTF-wp-1/image-20231013171232784.png"></p><p>查看结果显示的数据是浮点数，根据wp更改，注释掉两行（<code>./luajit-decompiler/ljd/rawdump/constants.py</code>）再次反编译，即可。</p><p><img src="/2023/11/21/CTF-wp-1/image-20231013171350002.png"></p><p>反编译后逻辑很简单，但有虚假控制流，可以改为python代码，打印下<code>slot2</code>。<br>每一步操作的逻辑：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">slot6 = bit.rshift(slot1, 8)</span><br><span class="line">slot7 = bit.lshift(slot1, 56)</span><br><span class="line">slot4 = bit.bor(slot6, slot7)</span><br><span class="line">slot1 = slot0 + slot4</span><br><span class="line">slot1 = bit.bxor(slot1, slot2)</span><br><span class="line"></span><br><span class="line">slot6 = bit.lshift(slot0, 3)</span><br><span class="line">slot7 = bit.rshift(slot0, 61)</span><br><span class="line">slot4 = bit.bor(slot6, slot7)</span><br><span class="line">slot0 = bit.xor(slot4, slot1)</span><br></pre></td></tr></table></figure><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> leb128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">u64_to_uleb128</span>(<span class="params">u</span>):</span><br><span class="line">    high = u &gt;&gt; <span class="number">32</span></span><br><span class="line">    low = u &amp; <span class="number">0xffffffff</span></span><br><span class="line">    <span class="keyword">return</span> leb128.u.encode(low).<span class="built_in">hex</span>() + leb128.u.encode(high).<span class="built_in">hex</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dec</span>(<span class="params">s0, s1, s2</span>):</span><br><span class="line">    s0 = ((s0 ^ s1) &lt;&lt; <span class="number">61</span> | (s0 ^ s1) &gt;&gt; <span class="number">3</span>) &amp; <span class="number">0xffffffffffffffff</span></span><br><span class="line">    t = ((s1 ^ s2) - s0) &amp; <span class="number">0xffffffffffffffff</span></span><br><span class="line">    s1 = (t &gt;&gt; <span class="number">56</span> | t &lt;&lt; <span class="number">8</span>) &amp; <span class="number">0xffffffffffffffff</span></span><br><span class="line">    <span class="keyword">return</span> s0, s1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">slot2 = [</span><br><span class="line">    <span class="number">0xdeadbeef12345678</span>,</span><br><span class="line">    <span class="number">0x28539dc5904d8141</span>,</span><br><span class="line">    <span class="number">0xf2ac321ccf237a7b</span>,</span><br><span class="line">    <span class="number">0xf03df21e866b1a36</span>,</span><br><span class="line">    <span class="number">0x584cde754c325b4b</span>,</span><br><span class="line">    <span class="number">0x97407269ac231f8b</span>,</span><br><span class="line">    <span class="number">0xd2960ba60ee82d09</span>,</span><br><span class="line">    <span class="number">0xb34efc0e8d197592</span>,</span><br><span class="line">    <span class="number">0x15011adba4d8613d</span>,</span><br><span class="line">    <span class="number">0x1598470b72677cea</span>,</span><br><span class="line">    <span class="number">0xb497efc6db87c606</span>,</span><br><span class="line">    <span class="number">0xae0f3ba8a4eeb218</span>,</span><br><span class="line">    <span class="number">0xab6036ab64121254</span>,</span><br><span class="line">    <span class="number">0x663ae5cc72c5eb7f</span>,</span><br><span class="line">    <span class="number">0x71af0f7e9c371b0e</span>,</span><br><span class="line">    <span class="number">0xeb97fc6b58f9eb33</span>,</span><br><span class="line">    <span class="number">0x774108a83f7c75f6</span>,</span><br><span class="line">    <span class="number">0x5a6542d5c9968681</span>,</span><br><span class="line">    <span class="number">0x5e6fb973117ccfb1</span>,</span><br><span class="line">    <span class="number">0xea8134ba653ce534</span>,</span><br><span class="line">    <span class="number">0xfc92946aa1cc9678</span>,</span><br><span class="line">    <span class="number">0x38af8cc9553071e4</span>,</span><br><span class="line">    <span class="number">0x99f7a1b258084992</span>,</span><br><span class="line">    <span class="number">0x82e920e890bb99da</span>,</span><br><span class="line">    <span class="number">0xc67f72528ed05d6c</span>,</span><br><span class="line">    <span class="number">0x4cab3a53d2598281</span>,</span><br><span class="line">    <span class="number">0x517358620b3249f9</span>,</span><br><span class="line">    <span class="number">0xcf3d41fd5e5e0786</span>,</span><br><span class="line">    <span class="number">0x626be66ab995efe3</span>,</span><br><span class="line">    <span class="number">0x24d85b01f54e2ab1</span>,</span><br><span class="line">    <span class="number">0xe9cd3a65e3f95992</span>,</span><br><span class="line">    <span class="number">0x4bf5996751882d17</span></span><br><span class="line">]</span><br><span class="line">s0, s1 = <span class="number">0xDD26C29515A28396</span>, <span class="number">0xBD722D4BAF99B9C7</span></span><br><span class="line">slot2.reverse()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(slot2)):</span><br><span class="line">    s0, s1 = dec(s0, s1, slot2[i])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(u64_to_uleb128(s1) + u64_to_uleb128(s0))</span><br></pre></td></tr></table></figure><h1 id="CTF2023"><a href="#CTF2023" class="headerlink" title="*CTF2023"></a>*CTF2023</h1><p>wp1:<a href="https://blog.csdn.net/weixin_51280668/article/details/132056750">*CTF2023Reverse逆向详解wp_柒傑的博客-CSDN博客</a></p><p>wp2:<a href="http://blog.xmcve.com/2023/07/31/starCTF-2023-Writeup/">*CTF 2023 Writeup - 星盟安全团队 (xmcve.com)</a></p><h2 id="ezcode"><a href="#ezcode" class="headerlink" title="ezcode"></a>ezcode</h2><p>更改文件后缀名为ps1，使用PowerShell ISE调试。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230808171225215.png" alt="image-20230808171225215"></p><p>单步调试可以看到：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230808171412038.png" alt="image-20230808171412038"></p><p>打印前面一长串char可以看到：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230808171449081.png" alt="image-20230808171449081"></p><p>再次调试，在使用shift+f10跳出之后，输入：${@*}</p><p><img src="/2023/11/21/CTF-wp-1/image-20230808171702324.png" alt="image-20230808171702324"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230808171643262.png" alt="image-20230808171643262"></p><p>打印获取的一长串char，即可看到主逻辑：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">chiper</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.d = <span class="number">0x87654321</span></span><br><span class="line">        k0 = <span class="number">0x67452301</span></span><br><span class="line">        k1 = <span class="number">0xefcdab89</span></span><br><span class="line">        k2 = <span class="number">0x98badcfe</span></span><br><span class="line">        k3 = <span class="number">0x10325476</span></span><br><span class="line">        self.k = [k0, k1, k2, k3]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">e</span>(<span class="params">self, n, v</span>):</span><br><span class="line">        <span class="keyword">from</span> ctypes <span class="keyword">import</span> c_uint32</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">MX</span>(<span class="params">z, y, total, key, p, e</span>):</span><br><span class="line">            temp1 = (z.value &gt;&gt; <span class="number">6</span> ^ y.value &lt;&lt; <span class="number">4</span>) + \</span><br><span class="line">                (y.value &gt;&gt; <span class="number">2</span> ^ z.value &lt;&lt; <span class="number">5</span>)</span><br><span class="line">            temp2 = (total.value ^ y.value) + \</span><br><span class="line">                (key[(p &amp; <span class="number">3</span>) ^ e.value] ^ z.value)</span><br><span class="line">            <span class="keyword">return</span> c_uint32(temp1 ^ temp2)</span><br><span class="line">        key = self.k</span><br><span class="line">        delta = self.d</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span>//n</span><br><span class="line">        total = c_uint32(<span class="number">0</span>)</span><br><span class="line">        z = c_uint32(v[n-<span class="number">1</span>])</span><br><span class="line">        e = c_uint32(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> rounds &gt; <span class="number">0</span>:</span><br><span class="line">            total.value += delta</span><br><span class="line">            e.value = (total.value &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span></span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">1</span>):</span><br><span class="line">                y = c_uint32(v[p+<span class="number">1</span>])</span><br><span class="line">                v[p] = c_uint32(v[p] + MX(z, y, total, key, p, e).value).value</span><br><span class="line">                z.value = v[p]</span><br><span class="line">            y = c_uint32(v[<span class="number">0</span>])</span><br><span class="line">            v[n-<span class="number">1</span>] = c_uint32(v[n-<span class="number">1</span>] + MX(z, y, total,</span><br><span class="line">                              key, n-<span class="number">1</span>, e).value).value</span><br><span class="line">            z.value = v[n-<span class="number">1</span>]</span><br><span class="line">            rounds -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bytes2ints</span>(<span class="params">self,cs:<span class="built_in">bytes</span></span>)-&gt;<span class="built_in">list</span>:</span><br><span class="line">        new_length=<span class="built_in">len</span>(cs)+(<span class="number">8</span>-<span class="built_in">len</span>(cs)%<span class="number">8</span>)%<span class="number">8</span></span><br><span class="line">        barray=cs.ljust(new_length,<span class="string">b&#x27;\x00&#x27;</span>)</span><br><span class="line">        i=<span class="number">0</span></span><br><span class="line">        v=[]</span><br><span class="line">        <span class="keyword">while</span> i &lt; new_length:</span><br><span class="line">            v0 = <span class="built_in">int</span>.from_bytes(barray[i:i+<span class="number">4</span>], <span class="string">&#x27;little&#x27;</span>)</span><br><span class="line">            v1 = <span class="built_in">int</span>.from_bytes(barray[i+<span class="number">4</span>:i+<span class="number">8</span>], <span class="string">&#x27;little&#x27;</span>)</span><br><span class="line">            v.append(v0)</span><br><span class="line">            v.append(v1)</span><br><span class="line">            i += <span class="number">8</span></span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">instr:<span class="built_in">str</span>,checklist:<span class="built_in">list</span></span>)-&gt;<span class="built_in">int</span>:</span><br><span class="line">    length=<span class="built_in">len</span>(instr)</span><br><span class="line">    <span class="keyword">if</span> length%<span class="number">8</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Incorrect format.&quot;</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line">    c=chiper()</span><br><span class="line">    v = c.bytes2ints(instr.encode())</span><br><span class="line">    output=<span class="built_in">list</span>(c.e(<span class="built_in">len</span>(v),v))</span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;<span class="built_in">len</span>(checklist)):</span><br><span class="line">        <span class="keyword">if</span> i&lt;<span class="built_in">len</span>(output) <span class="keyword">and</span> output[i]==checklist[i]:</span><br><span class="line">            i+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> i==<span class="built_in">len</span>(checklist):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    ans=[<span class="number">1374278842</span>, <span class="number">2136006540</span>, <span class="number">4191056815</span>, <span class="number">3248881376</span>]</span><br><span class="line">    <span class="comment"># generateRes()</span></span><br><span class="line">    flag=<span class="built_in">input</span>(<span class="string">&#x27;Please input flag:&#x27;</span>)</span><br><span class="line">    res=check(flag,ans)</span><br><span class="line">    <span class="keyword">if</span> res:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Congratulations, you&#x27;ve got the flag!&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Flag is *ctf&#123;your_input&#125;!&quot;</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Nope,try again!&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="flagfile"><a href="#flagfile" class="headerlink" title="flagfile"></a>flagfile</h2><h4 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用file -d选项调试检测</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&#x27;flag&#123;&#x27;</span> + <span class="string">&#x27;*&#x27;</span> * (<span class="number">64</span> - <span class="built_in">len</span>(<span class="string">&#x27;flag&#123;&#x27;</span>)))</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">34</span>):</span><br><span class="line">    text = subprocess.run([<span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;-m&#x27;</span>, <span class="string">&#x27;flag.mgc&#x27;</span>, <span class="string">&#x27;-d&#x27;</span>, <span class="string">&#x27;flag&#x27;</span>],</span><br><span class="line">                          capture_output=<span class="literal">True</span>, text=<span class="literal">True</span>, check=<span class="literal">True</span>).stderr</span><br><span class="line">    <span class="comment"># print(&quot;text:\n&quot;, text, &quot;\ntext end\n&quot;)</span></span><br><span class="line">    <span class="comment"># 2: &gt;&gt; 64 leshort^00000076,=111,&quot;&quot;]</span></span><br><span class="line">    data = re.findall(<span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>: &gt;* (\d+) leshort\^([\da-f]+),=(\d+),&quot;&quot;]&#x27;</span>, text)</span><br><span class="line">    <span class="built_in">print</span>(i, <span class="string">&quot;offset:&quot;</span>, data[<span class="number">0</span>][<span class="number">0</span>], <span class="string">&quot;data:&quot;</span>, data)</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;ab&#x27;</span>)</span><br><span class="line">    f.write((<span class="built_in">int</span>(data[<span class="number">0</span>][<span class="number">1</span>], <span class="number">16</span>) ^ <span class="built_in">int</span>(data[<span class="number">0</span>][<span class="number">2</span>])).to_bytes(<span class="number">2</span>, <span class="string">&#x27;little&#x27;</span>))</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">34</span>, <span class="number">100</span>):</span><br><span class="line">    text = subprocess.run([<span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;-m&#x27;</span>, <span class="string">&#x27;flag.mgc&#x27;</span>, <span class="string">&#x27;-d&#x27;</span>, <span class="string">&#x27;flag&#x27;</span>],</span><br><span class="line">                          capture_output=<span class="literal">True</span>, text=<span class="literal">True</span>, check=<span class="literal">True</span>).stderr</span><br><span class="line">    <span class="comment"># print(&quot;text:\n&quot;, text, &quot;\ntext end\n&quot;)</span></span><br><span class="line">    <span class="comment"># 34: &gt;&gt; 64(byte,&amp;0), byte^ffffffffffffff8a,=-20,&quot;&quot;]</span></span><br><span class="line">    <span class="comment"># mget/128 @25:</span></span><br><span class="line">    data = re.findall(<span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>: &gt;* \d+\(byte,&amp;0\), byte\^([\da-f]+),=([-\d]+),&quot;&quot;]&#x27;</span>, text)</span><br><span class="line">    off = re.findall(<span class="string">f&#x27;mget/128 @(\d+):&#x27;</span>, text)</span><br><span class="line">    <span class="built_in">print</span>(i, <span class="string">&quot;offset:&quot;</span>, off[-<span class="number">1</span>], <span class="string">&quot;data:&quot;</span>, data)</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;rb+&#x27;</span>)</span><br><span class="line">    f.seek(<span class="built_in">int</span>(off[-<span class="number">1</span>]))</span><br><span class="line">    f.write(((<span class="built_in">int</span>(data[<span class="number">0</span>][<span class="number">0</span>], <span class="number">16</span>) ^ <span class="built_in">int</span>(data[<span class="number">0</span>][<span class="number">1</span>])) &amp; <span class="number">0xff</span>).to_bytes(<span class="number">1</span>, <span class="string">&#x27;little&#x27;</span>))</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure><h4 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h4><p>解析mgc文件：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/param.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>    <span class="comment">/* Include that here, to make sure __P gets defined */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span>    <span class="comment">/* For open and flags */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXDESC    64        <span class="comment">/* max len of text description/MIME type */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXMIME    80        <span class="comment">/* max len of text MIME type */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXstring 128    </span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">VALUETYPE</span> &#123;</span></span><br><span class="line">    <span class="type">uint8_t</span> b;</span><br><span class="line">    <span class="type">uint16_t</span> h;</span><br><span class="line">    <span class="type">uint32_t</span> l;</span><br><span class="line">    <span class="type">uint64_t</span> q;</span><br><span class="line">    <span class="type">uint8_t</span> hs[<span class="number">2</span>];    <span class="comment">/* 2 bytes of a fixed-endian &quot;short&quot; */</span></span><br><span class="line">    <span class="type">uint8_t</span> hl[<span class="number">4</span>];    <span class="comment">/* 4 bytes of a fixed-endian &quot;long&quot; */</span></span><br><span class="line">    <span class="type">uint8_t</span> hq[<span class="number">8</span>];    <span class="comment">/* 8 bytes of a fixed-endian &quot;quad&quot; */</span></span><br><span class="line">    <span class="type">char</span> s[MAXstring];    <span class="comment">/* the search string or regex pattern */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> us[MAXstring];</span><br><span class="line">    <span class="type">uint64_t</span> guid[<span class="number">2</span>];</span><br><span class="line">    <span class="type">float</span> f;</span><br><span class="line">    <span class="type">double</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">magic</span> &#123;</span></span><br><span class="line">    <span class="comment">/* Word 1 */</span></span><br><span class="line">    <span class="type">uint16_t</span> cont_level;    <span class="comment">/* level of &quot;&gt;&quot; */</span></span><br><span class="line">    <span class="type">uint8_t</span> flag;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INDIR        0x01    <span class="comment">/* if &#x27;(...)&#x27; appears */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OFFADD        0x02    <span class="comment">/* if &#x27;&gt;&amp;&#x27; or &#x27;&gt;...(&amp;&#x27; appears */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INDIROFFADD    0x04    <span class="comment">/* if &#x27;&gt;&amp;(&#x27; appears */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UNSIGNED    0x08    <span class="comment">/* comparison is unsigned */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NOSPACE        0x10    <span class="comment">/* suppress space character before output */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BINTEST        0x20    <span class="comment">/* test is for a binary type (set only</span></span></span><br><span class="line"><span class="comment"><span class="meta">                   for top-level tests) */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TEXTTEST    0x40    <span class="comment">/* for passing to file_softmagic */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OFFNEGATIVE    0x80    <span class="comment">/* relative to the end of file */</span></span></span><br><span class="line"></span><br><span class="line">    <span class="type">uint8_t</span> factor;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Word 2 */</span></span><br><span class="line">    <span class="type">uint8_t</span> reln;        <span class="comment">/* relation (0=eq, &#x27;&gt;&#x27;=gt, etc) */</span></span><br><span class="line">    <span class="type">uint8_t</span> vallen;        <span class="comment">/* length of string value, if any */</span></span><br><span class="line">    <span class="type">uint8_t</span> type;        <span class="comment">/* comparison type (FILE_*) */</span></span><br><span class="line">    <span class="type">uint8_t</span> in_type;    <span class="comment">/* type of indirection */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>             FILE_INVALID    0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>             FILE_BYTE    1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_SHORT    2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_DEFAULT    3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LONG    4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_STRING    5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_DATE    6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BESHORT    7</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BELONG    8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BEDATE    9</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LESHORT    10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LELONG    11</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LEDATE    12</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_PSTRING    13</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LDATE    14</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BELDATE    15</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LELDATE    16</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_REGEX    17</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BESTRING16    18</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LESTRING16    19</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_SEARCH    20</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_MEDATE    21</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_MELDATE    22</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_MELONG    23</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_QUAD    24</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LEQUAD    25</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BEQUAD    26</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_QDATE    27</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LEQDATE    28</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BEQDATE    29</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_QLDATE    30</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LEQLDATE    31</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BEQLDATE    32</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_FLOAT    33</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BEFLOAT    34</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LEFLOAT    35</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_DOUBLE    36</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BEDOUBLE    37</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LEDOUBLE    38</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BEID3    39</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LEID3    40</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_INDIRECT    41</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_QWDATE    42</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_LEQWDATE    43</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_BEQWDATE    44</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_NAME    45</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_USE    46</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_CLEAR    47</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_DER    48</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_GUID    49</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OFFSET    50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_NAMES_SIZE    51 <span class="comment">/* size of array to contain all names */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IS_STRING(t) \</span></span><br><span class="line"><span class="meta">    ((t) == FILE_STRING || \</span></span><br><span class="line"><span class="meta">     (t) == FILE_PSTRING || \</span></span><br><span class="line"><span class="meta">     (t) == FILE_BESTRING16 || \</span></span><br><span class="line"><span class="meta">     (t) == FILE_LESTRING16 || \</span></span><br><span class="line"><span class="meta">     (t) == FILE_REGEX || \</span></span><br><span class="line"><span class="meta">     (t) == FILE_SEARCH || \</span></span><br><span class="line"><span class="meta">     (t) == FILE_INDIRECT || \</span></span><br><span class="line"><span class="meta">     (t) == FILE_NAME || \</span></span><br><span class="line"><span class="meta">     (t) == FILE_USE)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_FMT_NONE 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_FMT_NUM  1 <span class="comment">/* &quot;cduxXi&quot; */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_FMT_STR  2 <span class="comment">/* &quot;s&quot; */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_FMT_QUAD 3 <span class="comment">/* &quot;ll&quot; */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_FMT_FLOAT 4 <span class="comment">/* &quot;eEfFgG&quot; */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_FMT_DOUBLE 5 <span class="comment">/* &quot;eEfFgG&quot; */</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Word 3 */</span></span><br><span class="line">    <span class="type">uint8_t</span> in_op;        <span class="comment">/* operator for indirection */</span></span><br><span class="line">    <span class="type">uint8_t</span> mask_op;    <span class="comment">/* operator for mask */</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ENABLE_CONDITIONALS</span></span><br><span class="line">    <span class="type">uint8_t</span> cond;        <span class="comment">/* conditional type */</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    <span class="type">uint8_t</span> dummy;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    <span class="type">uint8_t</span> factor_op;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span>        FILE_FACTOR_OP_PLUS    <span class="string">&#x27;+&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>        FILE_FACTOR_OP_MINUS    <span class="string">&#x27;-&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>        FILE_FACTOR_OP_TIMES    <span class="string">&#x27;*&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>        FILE_FACTOR_OP_DIV    <span class="string">&#x27;/&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>        FILE_FACTOR_OP_NONE    <span class="string">&#x27;\0&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPS    <span class="string">&quot;&amp;|^+-*/%&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPAND    0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPOR    1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPXOR    2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPADD    3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPMINUS    4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPMULTIPLY    5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPDIVIDE    6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPMODULO    7</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPS_MASK    0x07 <span class="comment">/* mask for above ops */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_UNUSED_1    0x08</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_UNUSED_2    0x10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPSIGNED    0x20</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPINVERSE    0x40</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                FILE_OPINDIRECT    0x80</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ENABLE_CONDITIONALS</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                COND_NONE    0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                COND_IF        1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                COND_ELIF    2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>                COND_ELSE    3</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/* ENABLE_CONDITIONALS */</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Word 4 */</span></span><br><span class="line">    <span class="type">int32_t</span> offset;        <span class="comment">/* offset to magic number */</span></span><br><span class="line">    <span class="comment">/* Word 5 */</span></span><br><span class="line">    <span class="type">int32_t</span> in_offset;    <span class="comment">/* offset from indirection */</span></span><br><span class="line">    <span class="comment">/* Word 6 */</span></span><br><span class="line">    <span class="type">uint32_t</span> lineno;    <span class="comment">/* line number in magic file */</span></span><br><span class="line">    <span class="comment">/* Word 7,8 */</span></span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">        <span class="type">uint64_t</span> _mask;    <span class="comment">/* for use with numeric and date types */</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">            <span class="type">uint32_t</span> _count;    <span class="comment">/* repeat/line count */</span></span><br><span class="line">            <span class="type">uint32_t</span> _flags;    <span class="comment">/* modifier flags */</span></span><br><span class="line">        &#125; _s;        <span class="comment">/* for use with string types */</span></span><br><span class="line">    &#125; _u;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> num_mask _u._mask</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> str_range _u._s._count</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> str_flags _u._s._flags</span></span><br><span class="line">    <span class="comment">/* Words 9-24 */</span></span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">VALUETYPE</span> <span class="title">value</span>;</span>    <span class="comment">/* either number or string */</span></span><br><span class="line">    <span class="comment">/* Words 25-40 */</span></span><br><span class="line">    <span class="type">char</span> desc[MAXDESC];    <span class="comment">/* description */</span></span><br><span class="line">    <span class="comment">/* Words 41-60 */</span></span><br><span class="line">    <span class="type">char</span> mimetype[MAXMIME]; <span class="comment">/* MIME type */</span></span><br><span class="line">    <span class="comment">/* Words 61-62 */</span></span><br><span class="line">    <span class="type">char</span> apple[<span class="number">8</span>];        <span class="comment">/* APPLE CREATOR/TYPE */</span></span><br><span class="line">    <span class="comment">/* Words 63-78 */</span></span><br><span class="line">    <span class="type">char</span> ext[<span class="number">64</span>];        <span class="comment">/* Popular extensions */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ffff = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">10000</span>];</span><br><span class="line">    <span class="type">int</span> fd = open(<span class="string">&quot;flag.mgc&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    read(fd, buf, <span class="number">0x170</span> + <span class="number">8</span>);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">magic</span> <span class="title">a</span>[100];</span></span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> test[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">memset</span>(test, <span class="number">0</span>, <span class="number">1000</span>);</span><br><span class="line">    <span class="type">char</span> flag[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">while</span> (read(fd, &amp;a[index], <span class="keyword">sizeof</span>(<span class="keyword">struct</span> magic)) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        index += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; index; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">magic</span> <span class="title">temp</span> =</span> a[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;lineno: %d\n&quot;</span>, temp.lineno);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;type: %d\n&quot;</span>, temp.type);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;reln: %c\n&quot;</span>, temp.reln);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;in_offset: %d\n&quot;</span>, temp.in_offset);</span><br><span class="line">        <span class="keyword">if</span> (((<span class="type">int</span>)(temp.type)) == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ffff = (temp.offset - <span class="number">63</span>) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;offset: %d\n&quot;</span>, (test[ffff]));</span><br><span class="line">            <span class="type">char</span> ttt = ((temp.value.b) &amp; <span class="number">0xff</span>) ^ ((temp._u._mask) &amp; <span class="number">0xff</span>);</span><br><span class="line">            flag[test[ffff]] = ttt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;offset: %d\n&quot;</span>, temp.offset);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;b: %llx\n&quot;</span>, temp.value.b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;q: %llx\n&quot;</span>, temp.value.q);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;_mask: %llx\n&quot;</span>, temp._u._mask);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;mask_op: %llx\n&quot;</span>, temp.mask_op);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;in_op: %llx\n&quot;</span>, temp.in_op);</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> tes = temp._u._mask ^ temp.value.q;</span><br><span class="line">        test[i] = tes;</span><br><span class="line">        <span class="keyword">if</span> (temp.offset &lt; <span class="number">64</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;aaaa!!!!!!!!!!!!!\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n=======================\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; index; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%llx,&quot;</span>, test[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n\n\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">40</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, flag[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="NepCTF2023"><a href="#NepCTF2023" class="headerlink" title="NepCTF2023"></a>NepCTF2023</h1><h2 id="eeeeerte"><a href="#eeeeerte" class="headerlink" title="eeeeerte"></a>eeeeerte</h2><h3 id="安装易语言反编译模块"><a href="#安装易语言反编译模块" class="headerlink" title="安装易语言反编译模块"></a>安装易语言反编译模块</h3><p>更改ida.cfg文件，使其可显示中文字符：</p><blockquote><p>NameChars &#x3D;<br>        “$?@”           &#x2F;&#x2F; asm specific character<br>        “_0123456789”<br>        “ABCDEFGHIJKLMNOPQRSTUVWXYZ”<br>        “abcdefghijklmnopqrstuvwxyz”,<br>        &#x2F;&#x2F; This would enable common Chinese characters in identifiers:<br>        Culture_CJK_Unified_Ideographs,<br>        CURRENT_CULTURE;</p></blockquote><p>更改ida64.dll和ida.dll，使其可在反编译代码中显示中文字符：（nop掉该语句）</p><p><img src="/2023/11/21/CTF-wp-1/image-20230812122020491.png" alt="image-20230812122020491"></p><h3 id="主逻辑"><a href="#主逻辑" class="headerlink" title="主逻辑"></a>主逻辑</h3><p>由参数名，来进行逆向，对点击数判断的地方下断点。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230819173629954.png" alt="函数名"></p><h4 id="加密函数"><a href="#加密函数" class="headerlink" title="加密函数"></a>加密函数</h4><p>第一个点击数判断，是一个加密函数，需要输入key，然后加密其给出的数据。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230819173853434.png"></p><p>encrypt函数先将fake_flag分为几组四个字的数组，进行SKIPJACK解密：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230819174136526.png"></p><p>具体加密逻辑，通过调试可知：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">enc</span>(<span class="params">f, k, d</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= i &lt; <span class="number">8</span> <span class="keyword">or</span> <span class="number">16</span> &lt;= i &lt; <span class="number">24</span>:</span><br><span class="line">            temp = [f[<span class="number">1</span>], f[<span class="number">0</span>]]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span> * i, <span class="number">4</span> * i + <span class="number">4</span>):</span><br><span class="line">                t = k[j % <span class="number">10</span>] ^ temp[j &amp; <span class="number">1</span>]</span><br><span class="line">                temp[(j + <span class="number">1</span>) &amp; <span class="number">1</span>] = temp[(j + <span class="number">1</span>) &amp; <span class="number">1</span>] ^ d[t]</span><br><span class="line">            f[<span class="number">7</span>] ^= (i + <span class="number">1</span>)</span><br><span class="line">            f = f[<span class="number">6</span>:<span class="number">8</span>] + f[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">            f[<span class="number">3</span>], f[<span class="number">2</span>] = temp[<span class="number">0</span>], temp[<span class="number">1</span>]</span><br><span class="line">            f[<span class="number">0</span>] ^= f[<span class="number">2</span>]</span><br><span class="line">            f[<span class="number">1</span>] ^= f[<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp = [f[<span class="number">1</span>], f[<span class="number">0</span>]]</span><br><span class="line">            tp = temp</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span> * i, <span class="number">4</span> * i + <span class="number">4</span>):</span><br><span class="line">                t = k[j % <span class="number">10</span>] ^ temp[j &amp; <span class="number">1</span>]</span><br><span class="line">                temp[(j + <span class="number">1</span>) &amp; <span class="number">1</span>] = temp[(j + <span class="number">1</span>) &amp; <span class="number">1</span>] ^ d[t]</span><br><span class="line">            f = f[<span class="number">6</span>:<span class="number">8</span>] + [temp[<span class="number">1</span>], temp[<span class="number">0</span>]] + [f[<span class="number">2</span>] ^ f[<span class="number">0</span>], f[<span class="number">3</span>] ^ f[<span class="number">1</span>] ^ (i + <span class="number">1</span>)] + f[<span class="number">4</span>:<span class="number">6</span>]</span><br><span class="line">    <span class="keyword">return</span> f</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    fake_flag = [<span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x4D</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x64</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x65</span>, <span class="number">0x63</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x6F</span>, <span class="number">0x6E</span>,</span><br><span class="line">                 <span class="number">0x3F</span>, <span class="number">0x4D</span>, <span class="number">0x79</span>, <span class="number">0x73</span>, <span class="number">0x74</span>, <span class="number">0x65</span>, <span class="number">0x72</span>, <span class="number">0x69</span>, <span class="number">0x6F</span>, <span class="number">0x75</span>, <span class="number">0x73</span>, <span class="number">0x4A</span>, <span class="number">0x61</span>, <span class="number">0x63</span>, <span class="number">0x6B</span>, <span class="number">0x3F</span>, <span class="number">0x46</span>,</span><br><span class="line">                 <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x4B</span>, <span class="number">0x45</span>, <span class="number">0x7D</span>]</span><br><span class="line">    key = [<span class="built_in">ord</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;1234567890&quot;</span>]</span><br><span class="line">    data = [<span class="number">0xA3</span>, <span class="number">0xD7</span>, <span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0xF8</span>, <span class="number">0x48</span>, <span class="number">0xF6</span>, <span class="number">0xF4</span>, <span class="number">0xB3</span> ...]</span><br><span class="line">    a = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(fake_flag) // <span class="number">8</span>):</span><br><span class="line">        a += enc(fake_flag[i * <span class="number">8</span>:i * <span class="number">8</span> + <span class="number">8</span>], key, data)</span><br><span class="line">    result = base64.b64encode(<span class="built_in">bytearray</span>(a))</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h4 id="提供了密文"><a href="#提供了密文" class="headerlink" title="提供了密文"></a>提供了密文</h4><p>第二个点击数判断，直接该判断即可获取密文：</p><p><code>[0, 210, 114, 206, 231, 30, 77, 164, 142, 14, 221, 165, 158, 132, 69, 180, 38, 41, 54, 87, 225, 45, 192, 204, 188, 253, 143, 85, 21, 169, 162, 191, 234, 150, 35, 74, 100, 173, 175, 176]</code></p><h4 id="画密钥"><a href="#画密钥" class="headerlink" title="画密钥"></a>画密钥</h4><p>第三个点击数判断，获取密钥。</p><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p>出题师傅说的，在<code>CreateWindowExA</code>下断点，更改其长和宽的参数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HWND <span class="title function_">CreateWindowExW</span><span class="params">(</span></span><br><span class="line"><span class="params">  [in]           DWORD     dwExStyle,</span></span><br><span class="line"><span class="params">  [in, optional] LPCWSTR   lpClassName,</span></span><br><span class="line"><span class="params">  [in, optional] LPCWSTR   lpWindowName,</span></span><br><span class="line"><span class="params">  [in]           DWORD     dwStyle,</span></span><br><span class="line"><span class="params">  [in]           <span class="type">int</span>       X,</span></span><br><span class="line"><span class="params">  [in]           <span class="type">int</span>       Y,</span></span><br><span class="line"><span class="params">  [in]           <span class="type">int</span>       nWidth,</span></span><br><span class="line"><span class="params">  [in]           <span class="type">int</span>       nHeight,</span></span><br><span class="line"><span class="params">  [in, optional] HWND      hWndParent,</span></span><br><span class="line"><span class="params">  [in, optional] HMENU     hMenu,</span></span><br><span class="line"><span class="params">  [in, optional] HINSTANCE hInstance,</span></span><br><span class="line"><span class="params">  [in, optional] LPVOID    lpParam</span></span><br><span class="line"><span class="params">)</span>;</span><br></pre></td></tr></table></figure><p><code>CreateWindowExA</code>一共被调用了四次，大概试一试，知道第四个是有关画密钥的窗口。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230819173105703.png" alt="密钥窗口X、Y的位置"></p><p>将其都改为0，即可。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230819171855885.png" alt="密钥"></p><h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><p>根据参数，自行画图：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230819173422763.png" alt="画图参数"></p><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dec</span>(<span class="params">f, k, d</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">31</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= i &lt; <span class="number">8</span> <span class="keyword">or</span> <span class="number">16</span> &lt;= i &lt; <span class="number">24</span>:</span><br><span class="line">            temp = [f[<span class="number">3</span>], f[<span class="number">2</span>]]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span> * i + <span class="number">3</span>, <span class="number">4</span> * i - <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                t = k[j % <span class="number">10</span>] ^ temp[j &amp; <span class="number">1</span>]</span><br><span class="line">                temp[(j + <span class="number">1</span>) &amp; <span class="number">1</span>] ^= d[t]</span><br><span class="line">            new_f = [temp[<span class="number">1</span>], temp[<span class="number">0</span>]] + f[<span class="number">4</span>:<span class="number">6</span>] + f[<span class="number">6</span>:<span class="number">8</span>] + [f[<span class="number">2</span>] ^ f[<span class="number">0</span>], f[<span class="number">3</span>] ^ f[<span class="number">1</span>] ^ (i + <span class="number">1</span>)]</span><br><span class="line">            f = new_f</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp = [f[<span class="number">3</span>], f[<span class="number">2</span>]]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span> * i + <span class="number">3</span>, <span class="number">4</span> * i - <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                t = k[j % <span class="number">10</span>] ^ temp[j &amp; <span class="number">1</span>]</span><br><span class="line">                temp[(j + <span class="number">1</span>) &amp; <span class="number">1</span>] ^= d[t]</span><br><span class="line">            new_f = [temp[<span class="number">1</span>], temp[<span class="number">0</span>]] + [f[<span class="number">4</span>] ^ temp[<span class="number">1</span>], f[<span class="number">5</span>] ^ temp[<span class="number">0</span>] ^ (i + <span class="number">1</span>)] + f[<span class="number">6</span>:<span class="number">8</span>] + f[<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">            f = new_f</span><br><span class="line">    <span class="keyword">return</span> f</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    data = [<span class="number">0xA3</span>, <span class="number">0xD7</span>, <span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0xF8</span>, <span class="number">0x48</span>, <span class="number">0xF6</span>, <span class="number">0xF4</span>, <span class="number">0xB3</span>, <span class="number">0x21</span>, <span class="number">0x15</span>, <span class="number">0x78</span>, <span class="number">0x99</span>, <span class="number">0xB1</span>, <span class="number">0xAF</span>, <span class="number">0xF9</span>, <span class="number">0xE7</span>, <span class="number">0x2D</span>,</span><br><span class="line">            <span class="number">0x4D</span>, <span class="number">0x8A</span>, <span class="number">0xCE</span>, <span class="number">0x4C</span>, <span class="number">0xCA</span>, <span class="number">0x2E</span>, <span class="number">0x52</span>, <span class="number">0x95</span>, <span class="number">0xD9</span>, <span class="number">0x1E</span>, <span class="number">0x4E</span>, <span class="number">0x38</span>, <span class="number">0x44</span>, <span class="number">0x28</span>, <span class="number">0x0A</span>, <span class="number">0xDF</span>, <span class="number">0x02</span>, <span class="number">0xA0</span>,</span><br><span class="line">            <span class="number">0x17</span>, <span class="number">0xF1</span>, <span class="number">0x60</span>, <span class="number">0x68</span>, <span class="number">0x12</span>, <span class="number">0xB7</span>, <span class="number">0x7A</span>, <span class="number">0xC3</span>, <span class="number">0xE9</span>, <span class="number">0xFA</span>, <span class="number">0x3D</span>, <span class="number">0x53</span>, <span class="number">0x96</span>, <span class="number">0x84</span>, <span class="number">0x6B</span>, <span class="number">0xBA</span>, <span class="number">0xF2</span>, <span class="number">0x63</span>,</span><br><span class="line">            <span class="number">0x9A</span>, <span class="number">0x19</span>, <span class="number">0x7C</span>, <span class="number">0xAE</span>, <span class="number">0xE5</span>, <span class="number">0xF5</span>, <span class="number">0xF7</span>, <span class="number">0x16</span>, <span class="number">0x6A</span>, <span class="number">0xA2</span>, <span class="number">0x39</span>, <span class="number">0xB6</span>, <span class="number">0x7B</span>, <span class="number">0x0F</span>, <span class="number">0xC1</span>, <span class="number">0x93</span>, <span class="number">0x81</span>, <span class="number">0x1B</span>,</span><br><span class="line">            <span class="number">0xEE</span>, <span class="number">0xB4</span>, <span class="number">0x1A</span>, <span class="number">0xEA</span>, <span class="number">0xD0</span>, <span class="number">0x91</span>, <span class="number">0x2F</span>, <span class="number">0xB8</span>, <span class="number">0x55</span>, <span class="number">0xB9</span>, <span class="number">0xDA</span>, <span class="number">0x85</span>, <span class="number">0x3F</span>, <span class="number">0x41</span>, <span class="number">0xBF</span>, <span class="number">0xE0</span>, <span class="number">0x5A</span>, <span class="number">0x58</span>,</span><br><span class="line">            <span class="number">0x80</span>, <span class="number">0x5F</span>, <span class="number">0x66</span>, <span class="number">0x0B</span>, <span class="number">0xD8</span>, <span class="number">0x90</span>, <span class="number">0x35</span>, <span class="number">0xD5</span>, <span class="number">0xC0</span>, <span class="number">0xA7</span>, <span class="number">0x33</span>, <span class="number">0x06</span>, <span class="number">0x65</span>, <span class="number">0x69</span>, <span class="number">0x45</span>, <span class="number">0x00</span>, <span class="number">0x94</span>, <span class="number">0x56</span>,</span><br><span class="line">            <span class="number">0x6D</span>, <span class="number">0x98</span>, <span class="number">0x9B</span>, <span class="number">0x76</span>, <span class="number">0x97</span>, <span class="number">0xFC</span>, <span class="number">0xB2</span>, <span class="number">0xC2</span>, <span class="number">0xB0</span>, <span class="number">0xFE</span>, <span class="number">0xDB</span>, <span class="number">0x20</span>, <span class="number">0xE1</span>, <span class="number">0xEB</span>, <span class="number">0xD6</span>, <span class="number">0xE4</span>, <span class="number">0xDD</span>, <span class="number">0x47</span>,</span><br><span class="line">            <span class="number">0x4A</span>, <span class="number">0x1D</span>, <span class="number">0x42</span>, <span class="number">0xED</span>, <span class="number">0x9E</span>, <span class="number">0x6E</span>, <span class="number">0x49</span>, <span class="number">0x3C</span>, <span class="number">0xCD</span>, <span class="number">0x43</span>, <span class="number">0x27</span>, <span class="number">0xD2</span>, <span class="number">0x07</span>, <span class="number">0xD4</span>, <span class="number">0xDE</span>, <span class="number">0xC7</span>, <span class="number">0x67</span>, <span class="number">0x18</span>,</span><br><span class="line">            <span class="number">0x89</span>, <span class="number">0xCB</span>, <span class="number">0x30</span>, <span class="number">0x1F</span>, <span class="number">0x8D</span>, <span class="number">0xC6</span>, <span class="number">0x8F</span>, <span class="number">0xAA</span>, <span class="number">0xC8</span>, <span class="number">0x74</span>, <span class="number">0xDC</span>, <span class="number">0xC9</span>, <span class="number">0x5D</span>, <span class="number">0x5C</span>, <span class="number">0x31</span>, <span class="number">0xA4</span>, <span class="number">0x70</span>, <span class="number">0x88</span>,</span><br><span class="line">            <span class="number">0x61</span>, <span class="number">0x2C</span>, <span class="number">0x9F</span>, <span class="number">0x0D</span>, <span class="number">0x2B</span>, <span class="number">0x87</span>, <span class="number">0x50</span>, <span class="number">0x82</span>, <span class="number">0x54</span>, <span class="number">0x64</span>, <span class="number">0x26</span>, <span class="number">0x7D</span>, <span class="number">0x03</span>, <span class="number">0x40</span>, <span class="number">0x34</span>, <span class="number">0x4B</span>, <span class="number">0x1C</span>, <span class="number">0x73</span>,</span><br><span class="line">            <span class="number">0xD1</span>, <span class="number">0xC4</span>, <span class="number">0xFD</span>, <span class="number">0x3B</span>, <span class="number">0xCC</span>, <span class="number">0xFB</span>, <span class="number">0x7F</span>, <span class="number">0xAB</span>, <span class="number">0xE6</span>, <span class="number">0x3E</span>, <span class="number">0x5B</span>, <span class="number">0xA5</span>, <span class="number">0xAD</span>, <span class="number">0x04</span>, <span class="number">0x23</span>, <span class="number">0x9C</span>, <span class="number">0x14</span>, <span class="number">0x51</span>,</span><br><span class="line">            <span class="number">0x22</span>, <span class="number">0xF0</span>, <span class="number">0x29</span>, <span class="number">0x79</span>, <span class="number">0x71</span>, <span class="number">0x7E</span>, <span class="number">0xFF</span>, <span class="number">0x8C</span>, <span class="number">0x0E</span>, <span class="number">0xE2</span>, <span class="number">0x0C</span>, <span class="number">0xEF</span>, <span class="number">0xBC</span>, <span class="number">0x72</span>, <span class="number">0x75</span>, <span class="number">0x6F</span>, <span class="number">0x37</span>, <span class="number">0xA1</span>,</span><br><span class="line">            <span class="number">0xEC</span>, <span class="number">0xD3</span>, <span class="number">0x8E</span>, <span class="number">0x62</span>, <span class="number">0x8B</span>, <span class="number">0x86</span>, <span class="number">0x10</span>, <span class="number">0xE8</span>, <span class="number">0x08</span>, <span class="number">0x77</span>, <span class="number">0x11</span>, <span class="number">0xBE</span>, <span class="number">0x92</span>, <span class="number">0x4F</span>, <span class="number">0x24</span>, <span class="number">0xC5</span>, <span class="number">0x32</span>, <span class="number">0x36</span>,</span><br><span class="line">            <span class="number">0x9D</span>, <span class="number">0xCF</span>, <span class="number">0xF3</span>, <span class="number">0xA6</span>, <span class="number">0xBB</span>, <span class="number">0xAC</span>, <span class="number">0x5E</span>, <span class="number">0x6C</span>, <span class="number">0xA9</span>, <span class="number">0x13</span>, <span class="number">0x57</span>, <span class="number">0x25</span>, <span class="number">0xB5</span>, <span class="number">0xE3</span>, <span class="number">0xBD</span>, <span class="number">0xA8</span>, <span class="number">0x3A</span>, <span class="number">0x01</span>,</span><br><span class="line">            <span class="number">0x05</span>, <span class="number">0x59</span>, <span class="number">0x2A</span>, <span class="number">0x46</span>, <span class="number">0xAB</span>, <span class="number">0xAB</span>, <span class="number">0xAB</span>, <span class="number">0xAB</span>, <span class="number">0xAB</span>, <span class="number">0xAB</span>, <span class="number">0xAB</span>]</span><br><span class="line">    <span class="comment"># 解密</span></span><br><span class="line">    secret = <span class="string">&#x27;xmxO93Sn8YjfoWqaFS6poLf6n1q7bWrIyXbLAdcSjygWfs/jAVc4leFrTDZYdFoL&#x27;</span></span><br><span class="line">    secret = base64.b64decode(secret)</span><br><span class="line">    secret = <span class="built_in">list</span>(secret)</span><br><span class="line">    key = [<span class="built_in">ord</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;NITORI2413&quot;</span>]</span><br><span class="line">    flag = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(secret) // <span class="number">8</span>):</span><br><span class="line">        flag += dec(secret[i * <span class="number">8</span>:i * <span class="number">8</span> + <span class="number">8</span>], key, data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">bytearray</span>(flag))</span><br><span class="line">    <span class="comment"># NepCTF&#123;3456789TQKA2,Jack_was_skipped_by_EPL&#125;</span></span><br></pre></td></tr></table></figure><h2 id="九龙拉棺"><a href="#九龙拉棺" class="headerlink" title="九龙拉棺"></a>九龙拉棺</h2><p>跟着<a href="https://m1n9yu3.github.io/2023/08/14/NepCTF2023-%E4%B9%9D%E9%BE%99%E6%8B%89%E6%A3%BAwp">出题师傅的wp</a>走的。</p><p>UPX壳，直接脱壳。</p><h3 id="文件映射对象"><a href="#文件映射对象" class="headerlink" title="文件映射对象"></a>文件映射对象</h3><p>创建文件映射对象，存储输入的字符串，使之后创建的进程可以获取输入。</p><p>此操作先于main执行。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817113121855.png" alt="创建文件映射对象"></p><h3 id="反调试"><a href="#反调试" class="headerlink" title="反调试"></a>反调试</h3><ol><li><p>每个线程都或多或少执行了一个反调试的函数。</p></li><li><p>检测调式寄存器Dr7是否为正常值。</p></li></ol><p><img src="/2023/11/21/CTF-wp-1/image-20230817120021597.png" alt="反调试函数"></p><ol start="3"><li>子进程中也有反调试：<code>NtCurrentPeb()-&gt;BeingDebugged</code></li></ol><h3 id="八个线程"><a href="#八个线程" class="headerlink" title="八个线程"></a>八个线程</h3><p>main中启动了八个线程。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817113501023.png" alt="八个线程"></p><p>每个进程依靠全局变量<code>CriticalLevel</code>来控制执行顺序，<code>CriticalLevel</code>初始值为0。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817113631442.png" alt="以其中一个线程为例"></p><p>main中获取完输入，将其写入文件映射对象中，然后将<code>CriticalLevel</code>置为1，等待其他线程。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817114314606.png" alt="等待其他线程"></p><h4 id="第一个线程：Rc4解密"><a href="#第一个线程：Rc4解密" class="headerlink" title="第一个线程：Rc4解密"></a>第一个线程：Rc4解密</h4><p><img src="/2023/11/21/CTF-wp-1/image-20230817120347247.png" alt="Rc4"></p><h4 id="第二个线程：base32解析"><a href="#第二个线程：base32解析" class="headerlink" title="第二个线程：base32解析"></a>第二个线程：base32解析</h4><p>主要依靠base32表和字符串看出是base32，前面更新数据长度的部分也可以联想到base32（但有点疑惑为什么是除五乘八）。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817120514823.png" alt="base32——1"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230817120613443.png" alt="base32——2"></p><h4 id="第三个线程：base58"><a href="#第三个线程：base58" class="headerlink" title="第三个线程：base58"></a>第三个线程：base58</h4><p>主要转化式子可以辨认。</p><p>也可以依靠长度变化来辨别。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817123703036.png" alt="base58"></p><h4 id="第四个线程：base64"><a href="#第四个线程：base64" class="headerlink" title="第四个线程：base64"></a>第四个线程：base64</h4><p><img src="/2023/11/21/CTF-wp-1/image-20230817123811046.png" alt="base64"></p><h4 id="第五个线程：StartAddress"><a href="#第五个线程：StartAddress" class="headerlink" title="第五个线程：StartAddress"></a>第五个线程：StartAddress</h4><p>前面四个线程处理的数据得到的是一个可执行文件数据，本线程就是将其写入exe，并执行。</p><p>具体细节还得再搞搞。</p><h4 id="第六个线程：tea、compare"><a href="#第六个线程：tea、compare" class="headerlink" title="第六个线程：tea、compare"></a>第六个线程：tea、compare</h4><p>明显的tea和比较：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817124803097.png" alt="tea、compare"></p><p>这里解密tea可得到一部分的输入数据：NepCTF{c9cdnwdi3iu41m0pv3x7kllzu8pdq6mt9n2nwjdp6kat8ent4dhn5r158</p><h4 id="第七个线程：最终结果"><a href="#第七个线程：最终结果" class="headerlink" title="第七个线程：最终结果"></a>第七个线程：最终结果</h4><p><img src="/2023/11/21/CTF-wp-1/image-20230817130243540.png" alt="最后的比较"></p><p>注意到<code>MyshareMemory</code>的位置在主程序中一直只存放了输入，且输入的位置为<code>MyshareMemoroy+随机数的位置</code>，因此判断成功的条件在子程序中写入。</p><h4 id="第八个线程：反调试"><a href="#第八个线程：反调试" class="headerlink" title="第八个线程：反调试"></a>第八个线程：反调试</h4><blockquote><ul><li>1个线程用于反调试<ul><li>反调试动态读取.text(第一个段)并通过累加的方式，不断读取对比的方式，来实现反调试。如果程序一开始就存在断点，则该反调试无效，若在调试中突然增加int3断点，则该程序直接退出。</li></ul></li></ul></blockquote><h5 id="获取text段地址"><a href="#获取text段地址" class="headerlink" title="获取text段地址"></a>获取text段地址</h5><ul><li><p>ModuleHandle &#x3D; GetModuleHandleW(0)  获取exe基地址：0x100000</p></li><li><p>0x100000 + 0x3C：AddressOfNewExeHeader（0xF8）</p></li><li><p>0x100000 + AddressOfNewExeHeader：NtHeader</p></li><li><p>NtHeader + 0x14：SizeOfOptionalHeader（0xE0）</p></li><li><p>NtHeader + SizeOfOptionnalHeader + 0x28：SectionHeader[0]（即<code>.text</code>段）-&gt;Misc-&gt;SizeofRawData</p></li><li><p>ModuleHandleW + AddressOfNewHeader + SizeOfOptionnalHeader：DelayLoadImportDescriptors</p></li><li><p>ModuleHandleW + DelayLoadImportDescriptors + 0x24：VirtualAddress（0x101000）此时指向了.text&#96;段</p></li></ul><p><img src="/2023/11/21/CTF-wp-1/image-20230817155611561.png" alt="获取text段地址"></p><h5 id="压缩数据，形成一个整数（类似校验码）"><a href="#压缩数据，形成一个整数（类似校验码）" class="headerlink" title="压缩数据，形成一个整数（类似校验码）"></a>压缩数据，形成一个整数（类似校验码）</h5><p>对text段的数据生成校验码。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817155831982.png" alt="生成校验码"></p><h5 id="循环比对"><a href="#循环比对" class="headerlink" title="循环比对"></a>循环比对</h5><p>生成校验码后，线程进入死循环，不断重复生成校验码，并与之前的校验码进行比对。</p><p>如果不同，则意味着text段被修改了，可能是在程序中下了int3断点导致，就结束。</p><h3 id="子进程"><a href="#子进程" class="headerlink" title="子进程"></a>子进程</h3><p>看着wp里的变量命名大概看懂了。</p><h4 id="FindFunction"><a href="#FindFunction" class="headerlink" title="FindFunction"></a>FindFunction</h4><p><img src="/2023/11/21/CTF-wp-1/image-20230817163911477.png" alt="找寻函数地址"></p><h4 id="tea"><a href="#tea" class="headerlink" title="tea"></a>tea</h4><p>类似的一个tea解密函数，直接解密可得：iu41m0pv3x7kllzu8pdq6mt9n2nwjdp6kat8ent4dhn5r158iz2f0cmr0u7yxyq}，与之前的明文结合一下就是flag了。</p><h4 id="main"><a href="#main" class="headerlink" title="main"></a>main</h4><p>通过获取kernel32的地址，来获取所需函数的地址</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817164545707.png" alt="获取函数地址"></p><p>子进程通过文件映射对象获取<code>MyshareMemory</code>然后将其中的输入进去与tea函数解密比对，</p><p>最后，比对成功，将成功条件写入<code>MyshareMemory</code>中。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230817163753534.png" alt="找寻父进程的MyshareMemory，并写入成功条件"></p><h1 id="WMCTF2023"><a href="#WMCTF2023" class="headerlink" title="WMCTF2023"></a>WMCTF2023</h1><h2 id="RightBack"><a href="#RightBack" class="headerlink" title="RightBack"></a>RightBack</h2><h3 id="反编译pyc"><a href="#反编译pyc" class="headerlink" title="反编译pyc"></a>反编译pyc</h3><p>用pycdas看一下pyc字节码，主要是这里的字节码导致无法正确反编译：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230820220905451.png"></p><p>把所有这样的部分都patch掉（直接更改那部分代码的二进制数据）：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230820222158534.png"></p><p>获取字节码的二进制数据：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230820222120078.png"></p><p>用pycdc获取反编译：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230820221036623.png"></p><h3 id="分析逻辑"><a href="#分析逻辑" class="headerlink" title="分析逻辑"></a>分析逻辑</h3><ol><li>p1：RC4密钥初始化；</li><li>p3：RC4解密；</li><li>p2：类似AES的密钥初始化；</li><li>Have：获取输入；</li><li>执行虚拟机，验证。</li></ol><p>执行以下获取opcode、extendKey。</p><p>模拟执行一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">F1</span>(<span class="params">part1, part2</span>):</span><br><span class="line">    <span class="keyword">global</span> REG</span><br><span class="line">    REG = &#123;<span class="string">&#x27;EAX&#x27;</span>: part1, <span class="string">&#x27;EBX&#x27;</span>: part2, <span class="string">&#x27;ECX&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;EDX&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;R8&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;CNT&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;EIP&#x27;</span>: <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据v1的值来更改v2（值由v3决定）</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">F2</span>(<span class="params">v1, v2, v3</span>):</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> v1 == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> = extendKey[<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v3)]&#125;</span>]:<span class="subst">&#123;extendKey[REG[reg_table[<span class="built_in">str</span>(v3)]]]&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] = extendKey[REG[reg_table[<span class="built_in">str</span>(v3)]]]</span><br><span class="line">    <span class="keyword">elif</span> v1 == <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> = <span class="subst">&#123;reg_table[<span class="built_in">str</span>(v3)]&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] = REG[reg_table[<span class="built_in">str</span>(v3)]]</span><br><span class="line">    <span class="keyword">elif</span> v1 == <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> = <span class="subst">&#123;<span class="built_in">str</span>(v3)&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] = v3</span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据v1的值使 v2 加上 由v3决定的值</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">F3</span>(<span class="params">v1, v2, v3</span>):</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> v1 == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> += extendKey[<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v3)]&#125;</span>]:<span class="subst">&#123;extendKey[REG[reg_table[<span class="built_in">str</span>(v3)]]]&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] = REG[reg_table[<span class="built_in">str</span>(v2)]] + extendKey[REG[reg_table[<span class="built_in">str</span>(v3)]]] &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    <span class="keyword">elif</span> v1 == <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> += <span class="subst">&#123;reg_table[<span class="built_in">str</span>(v3)]&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] = REG[reg_table[<span class="built_in">str</span>(v2)]] + REG[reg_table[<span class="built_in">str</span>(v3)]] &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    <span class="keyword">elif</span> v1 == <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> += <span class="subst">&#123;<span class="built_in">str</span>(v3)&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] = REG[reg_table[<span class="built_in">str</span>(v2)]] + v3 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">F4</span>(<span class="params">v1, v2</span>):</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v1)]&#125;</span> ^= <span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span>:<span class="subst">&#123;REG[reg_table[<span class="built_in">str</span>(v2)]]&#125;</span>&#x27;</span>)</span><br><span class="line">    REG[reg_table[<span class="built_in">str</span>(v1)]] ^= REG[reg_table[<span class="built_in">str</span>(v2)]]</span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">F5</span>(<span class="params">v1, v2</span>):</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v1)]&#125;</span> &amp;= <span class="subst">&#123;v2&#125;</span>&#x27;</span>)</span><br><span class="line">    REG[reg_table[<span class="built_in">str</span>(v1)]] &amp;= v2</span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据v1的值使 v2 减去 由v3决定的值</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">F6</span>(<span class="params">v1, v2, v3</span>):</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> v1 == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> -= extendKey[<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v3)]&#125;</span>]:<span class="subst">&#123;extendKey[REG[reg_table[<span class="built_in">str</span>(v3)]]]&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] -= extendKey[v3]</span><br><span class="line">    <span class="keyword">elif</span> v1 == <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> -= <span class="subst">&#123;reg_table[<span class="built_in">str</span>(v3)]&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] -= REG[reg_table[<span class="built_in">str</span>(v3)]]</span><br><span class="line">    <span class="keyword">elif</span> v1 == <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> -= <span class="subst">&#123;<span class="built_in">str</span>(v3)&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] -= v3</span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">F7</span>(<span class="params">v1, v2</span>):</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v1)]&#125;</span> |= <span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span>&#x27;</span>)</span><br><span class="line">    REG[reg_table[<span class="built_in">str</span>(v1)]] |= REG[reg_table[<span class="built_in">str</span>(v2)]]</span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">F8</span>(<span class="params">v1, v2</span>):</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v1)]&#125;</span> &gt;&gt;= <span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span>&#x27;</span>)</span><br><span class="line">    REG[reg_table[<span class="built_in">str</span>(v1)]] = REG[reg_table[<span class="built_in">str</span>(v1)]] &gt;&gt; REG[reg_table[<span class="built_in">str</span>(v2)]] &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">F9</span>(<span class="params">v1, v2</span>):</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v1)]&#125;</span> &lt;&lt;= <span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span>&#x27;</span>)</span><br><span class="line">    REG[reg_table[<span class="built_in">str</span>(v1)]] = REG[reg_table[<span class="built_in">str</span>(v1)]] &lt;&lt; REG[reg_table[<span class="built_in">str</span>(v2)]] &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">FA</span>(<span class="params">v1, v2, v3</span>):</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> v1 == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> *= extendKey[<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v3)]&#125;</span>]:<span class="subst">&#123;extendKey[REG[reg_table[<span class="built_in">str</span>(v3)]]]&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] *= extendKey[v3]</span><br><span class="line">    <span class="keyword">elif</span> v1 == <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> *= <span class="subst">&#123;reg_table[<span class="built_in">str</span>(v3)]&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] *= REG[reg_table[<span class="built_in">str</span>(v3)]]</span><br><span class="line">    <span class="keyword">elif</span> v1 == <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;reg_table[<span class="built_in">str</span>(v2)]&#125;</span> *= <span class="subst">&#123;<span class="built_in">str</span>(v3)&#125;</span>&#x27;</span>)</span><br><span class="line">        REG[reg_table[<span class="built_in">str</span>(v2)]] *= v3</span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">FB</span>():</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(REG[<span class="string">&#x27;CNT&#x27;</span>], <span class="string">&#x27;test CNT&#x27;</span>)</span><br><span class="line">    REG[<span class="string">&#x27;R8&#x27;</span>] = REG[<span class="string">&#x27;CNT&#x27;</span>] == <span class="number">21</span></span><br><span class="line">    REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">WC</span>():</span><br><span class="line">    <span class="built_in">print</span>(opcode[REG[<span class="string">&#x27;EIP&#x27;</span>]], end=<span class="string">&#x27; : &#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> REG[<span class="string">&#x27;R8&#x27;</span>]:</span><br><span class="line">        REG[<span class="string">&#x27;EIP&#x27;</span>] = <span class="number">16</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;R8:&quot;</span>, REG[<span class="string">&#x27;R8&#x27;</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;eip = 16&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;R8:&quot;</span>, REG[<span class="string">&#x27;R8&#x27;</span>], <span class="string">&#x27;go&#x27;</span>)</span><br><span class="line">        REG[<span class="string">&#x27;EIP&#x27;</span>] += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">opcode = [</span><br><span class="line">    <span class="number">80</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">29</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="number">29</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,</span><br><span class="line">    <span class="number">29</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="number">113</span>, <span class="number">1</span>, <span class="number">2</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">2</span>,</span><br><span class="line">    <span class="number">114</span>, <span class="number">2</span>, <span class="number">31</span>,</span><br><span class="line">    <span class="number">41</span>, <span class="number">1</span>, <span class="number">2</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">32</span>,</span><br><span class="line">    <span class="number">150</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>,</span><br><span class="line">    <span class="number">116</span>, <span class="number">3</span>, <span class="number">4</span>,</span><br><span class="line">    <span class="number">87</span>, <span class="number">1</span>, <span class="number">3</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">6</span>,</span><br><span class="line">    <span class="number">220</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>,</span><br><span class="line">    <span class="number">29</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>,</span><br><span class="line">    <span class="number">113</span>, <span class="number">2</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="number">114</span>, <span class="number">4</span>, <span class="number">31</span>,</span><br><span class="line">    <span class="number">41</span>, <span class="number">2</span>, <span class="number">4</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">32</span>,</span><br><span class="line">    <span class="number">150</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">4</span>,</span><br><span class="line">    <span class="number">116</span>, <span class="number">3</span>, <span class="number">5</span>,</span><br><span class="line">    <span class="number">87</span>, <span class="number">2</span>, <span class="number">3</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>,</span><br><span class="line">    <span class="number">220</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>,</span><br><span class="line">    <span class="number">29</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="number">80</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>,</span><br><span class="line">    <span class="number">29</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>,</span><br><span class="line">    <span class="number">7</span>, <span class="number">153</span>, <span class="number">255</span>]</span><br><span class="line">EIP = <span class="number">0</span></span><br><span class="line">extendKey = [<span class="number">1835819331</span>, <span class="number">1853321028</span>, <span class="number">1768711490</span>, <span class="number">1432712805</span>, <span class="number">2177920767</span>, <span class="number">4020699579</span>, <span class="number">2261476601</span>, <span class="number">3551400604</span>, <span class="number">711874531</span>, <span class="number">3318306392</span>, <span class="number">1124217505</span>, <span class="number">2427199549</span>, <span class="number">3099853672</span>, <span class="number">2098025776</span>, <span class="number">1041196945</span>, <span class="number">2929936300</span>, <span class="number">246748610</span>, <span class="number">1941455090</span>, <span class="number">1303848803</span>, <span class="number">3809763535</span>, <span class="number">1395557789</span>, <span class="number">546751855</span>, <span class="number">1830937100</span>, <span class="number">2385871555</span>, <span class="number">2516030638</span>, <span class="number">3043054017</span>, <span class="number">3628118989</span>, <span class="number">1450520846</span>, <span class="number">1825094265</span>, <span class="number">3651791800</span>, <span class="number">32069749</span>, <span class="number">1469868411</span>, <span class="number">919887482</span>, <span class="number">4017993154</span>, <span class="number">4002737591</span>, <span class="number">3104343244</span>, <span class="number">4134211933</span>, <span class="number">420914335</span>, <span class="number">4152510760</span>, <span class="number">1317719524</span>, <span class="number">1990496755</span>, <span class="number">1873950060</span>, <span class="number">2553314372</span>, <span class="number">3602559392</span>]</span><br><span class="line">reg_table = &#123;</span><br><span class="line">        <span class="string">&#x27;1&#x27;</span>: <span class="string">&#x27;EAX&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;2&#x27;</span>: <span class="string">&#x27;EBX&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;3&#x27;</span>: <span class="string">&#x27;ECX&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;4&#x27;</span>: <span class="string">&#x27;EDX&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;5&#x27;</span>: <span class="string">&#x27;R8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;6&#x27;</span>: <span class="string">&#x27;CNT&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;7&#x27;</span>: <span class="string">&#x27;EIP&#x27;</span>&#125;</span><br><span class="line">REG = &#123;&#125;</span><br><span class="line"><span class="keyword">while</span> EIP &lt; <span class="built_in">len</span>(opcode):</span><br><span class="line">    F1(<span class="number">0x31323334</span>, <span class="number">0x35363738</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        EIP = REG[<span class="string">&#x27;EIP&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">80</span>:</span><br><span class="line">            <span class="comment"># 根据v1的值来更改v2（值由v3决定）</span></span><br><span class="line">            F2(opcode[EIP + <span class="number">1</span>], opcode[EIP + <span class="number">2</span>], opcode[EIP + <span class="number">3</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">29</span>:</span><br><span class="line">            <span class="comment"># 根据v1的值使 v2 加上 由v3决定的值</span></span><br><span class="line">            F3(opcode[EIP + <span class="number">1</span>], opcode[EIP + <span class="number">2</span>], opcode[EIP + <span class="number">3</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">113</span>:</span><br><span class="line">            <span class="comment"># 异或</span></span><br><span class="line">            F4(opcode[EIP + <span class="number">1</span>], opcode[EIP + <span class="number">2</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">114</span>:</span><br><span class="line">            <span class="comment"># 相与</span></span><br><span class="line">            F5(opcode[EIP + <span class="number">1</span>], opcode[EIP + <span class="number">2</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">150</span>:</span><br><span class="line">            <span class="comment"># 根据v1的值使 v2 减去 由v3决定的值</span></span><br><span class="line">            F6(opcode[EIP + <span class="number">1</span>], opcode[EIP + <span class="number">2</span>], opcode[EIP + <span class="number">3</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">87</span>:</span><br><span class="line">            <span class="comment"># 相或</span></span><br><span class="line">            F7(opcode[EIP + <span class="number">1</span>], opcode[EIP + <span class="number">2</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">116</span>:</span><br><span class="line">            <span class="comment"># 右移</span></span><br><span class="line">            F8(opcode[EIP + <span class="number">1</span>], opcode[EIP + <span class="number">2</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">41</span>:</span><br><span class="line">            <span class="comment"># 左移</span></span><br><span class="line">            F9(opcode[EIP + <span class="number">1</span>], opcode[EIP + <span class="number">2</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">220</span>:</span><br><span class="line">            <span class="comment"># 根据v1的值使 v2 乘上 由v3决定的值</span></span><br><span class="line">            FA(opcode[EIP + <span class="number">1</span>], opcode[EIP + <span class="number">2</span>], opcode[EIP + <span class="number">3</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">7</span>:</span><br><span class="line">            <span class="comment"># 检测CNt == 21，结果在R8</span></span><br><span class="line">            FB()</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> opcode[EIP] == <span class="number">153</span>:</span><br><span class="line">            <span class="comment"># 根据R8 判断是要跳去地址16</span></span><br><span class="line">            WC()</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>得到验证逻辑：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">eax = input[0] + extendKey[0]</span><br><span class="line">ebx = input[1] + extendKey[1]</span><br><span class="line">while CNT != 21 </span><br><span class="line">CNT += 1</span><br><span class="line">r8 = ebx</span><br><span class="line">temp = eax ^ ebx</span><br><span class="line"># 交换temp前后位</span><br><span class="line">ebx = ebx &amp; 31</span><br><span class="line">ebx = temp &lt;&lt; ebx | temp &gt;&gt; (32 - ebx)</span><br><span class="line">eax += extendKey[CNT * 2]</span><br><span class="line">ebx = r8</span><br><span class="line">temp = eax ^ ebx</span><br><span class="line">edx = eax &amp; 31</span><br><span class="line">ebx = temp &lt;&lt; edx | temp &gt;&gt; (32 - edx)</span><br><span class="line">ebx += extendKey[CNT * 2 + 1]</span><br></pre></td></tr></table></figure><h3 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line">result = [<span class="number">4</span>, <span class="number">58</span>, <span class="number">242</span>, <span class="number">54</span>, <span class="number">86</span>, <span class="number">177</span>, <span class="number">154</span>, <span class="number">252</span>, <span class="number">247</span>, <span class="number">30</span>, <span class="number">33</span>, <span class="number">220</span>, <span class="number">219</span>, <span class="number">143</span>, <span class="number">142</span>, <span class="number">148</span>, <span class="number">77</span>, <span class="number">52</span>, <span class="number">231</span>, <span class="number">157</span>, <span class="number">156</span>, <span class="number">82</span>, <span class="number">12</span>, <span class="number">110</span>, <span class="number">251</span>, <span class="number">250</span>, <span class="number">213</span>, <span class="number">253</span>, <span class="number">50</span>, <span class="number">249</span>, <span class="number">120</span>, <span class="number">44</span>, <span class="number">187</span>, <span class="number">190</span>, <span class="number">57</span>, <span class="number">193</span>, <span class="number">217</span>, <span class="number">133</span>, <span class="number">117</span>, <span class="number">182</span>, <span class="number">40</span>, <span class="number">248</span>, <span class="number">204</span>, <span class="number">120</span>, <span class="number">164</span>, <span class="number">228</span>, <span class="number">133</span>, <span class="number">146</span>, <span class="number">14</span>, <span class="number">189</span>, <span class="number">114</span>, <span class="number">197</span>, <span class="number">175</span>, <span class="number">135</span>, <span class="number">145</span>, <span class="number">42</span>, <span class="number">139</span>, <span class="number">241</span>, <span class="number">239</span>, <span class="number">150</span>, <span class="number">22</span>, <span class="number">96</span>, <span class="number">209</span>, <span class="number">18</span>]</span><br><span class="line">extendKey = [<span class="number">1835819331</span>, <span class="number">1853321028</span>, <span class="number">1768711490</span>, <span class="number">1432712805</span>, <span class="number">2177920767</span>, <span class="number">4020699579</span>, <span class="number">2261476601</span>, <span class="number">3551400604</span>, <span class="number">711874531</span>, <span class="number">3318306392</span>, <span class="number">1124217505</span>, <span class="number">2427199549</span>, <span class="number">3099853672</span>, <span class="number">2098025776</span>, <span class="number">1041196945</span>, <span class="number">2929936300</span>, <span class="number">246748610</span>, <span class="number">1941455090</span>, <span class="number">1303848803</span>, <span class="number">3809763535</span>, <span class="number">1395557789</span>, <span class="number">546751855</span>, <span class="number">1830937100</span>, <span class="number">2385871555</span>, <span class="number">2516030638</span>, <span class="number">3043054017</span>, <span class="number">3628118989</span>, <span class="number">1450520846</span>, <span class="number">1825094265</span>, <span class="number">3651791800</span>, <span class="number">32069749</span>, <span class="number">1469868411</span>, <span class="number">919887482</span>, <span class="number">4017993154</span>, <span class="number">4002737591</span>, <span class="number">3104343244</span>, <span class="number">4134211933</span>, <span class="number">420914335</span>, <span class="number">4152510760</span>, <span class="number">1317719524</span>, <span class="number">1990496755</span>, <span class="number">1873950060</span>, <span class="number">2553314372</span>, <span class="number">3602559392</span>]</span><br><span class="line">flag = <span class="built_in">bytes</span>()</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">64</span>, <span class="number">8</span>):</span><br><span class="line">    part1 = struct.unpack(<span class="string">&#x27;&gt;I&#x27;</span>, <span class="built_in">bytes</span>(result[j + <span class="number">0</span>:j + <span class="number">4</span>]))[<span class="number">0</span>]</span><br><span class="line">    part2 = struct.unpack(<span class="string">&#x27;&gt;I&#x27;</span>, <span class="built_in">bytes</span>(result[j + <span class="number">4</span>:j + <span class="number">8</span>]))[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">21</span>, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">        part2 = (part2 - extendKey[i * <span class="number">2</span> + <span class="number">1</span>]) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        num = part1 &amp; <span class="number">31</span></span><br><span class="line">        temp = ((part2 &gt;&gt; num) &amp; <span class="number">0xFFFFFFFF</span>) | ((part2 &lt;&lt; (<span class="number">32</span> - num)) &amp; <span class="number">0xFFFFFFFF</span>)</span><br><span class="line">        part2 = temp ^ part1</span><br><span class="line"></span><br><span class="line">        part1 = (part1 - extendKey[i * <span class="number">2</span>]) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        num = part2 &amp; <span class="number">31</span></span><br><span class="line">        temp = ((part1 &gt;&gt; num) &amp; <span class="number">0xFFFFFFFF</span>) | ((part1 &lt;&lt; (<span class="number">32</span> - num)) &amp; <span class="number">0xFFFFFFFF</span>)</span><br><span class="line">        part1 = temp ^ part2</span><br><span class="line">    part1 = (part1 - extendKey[<span class="number">0</span>]) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    part2 = (part2 - extendKey[<span class="number">1</span>]) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    <span class="keyword">if</span> j != <span class="number">0</span>:</span><br><span class="line">        part1 ^= struct.unpack(<span class="string">&#x27;&gt;I&#x27;</span>, <span class="built_in">bytes</span>(result[j - <span class="number">8</span>:j - <span class="number">4</span>]))[<span class="number">0</span>]</span><br><span class="line">        part2 ^= struct.unpack(<span class="string">&#x27;&gt;I&#x27;</span>, <span class="built_in">bytes</span>(result[j - <span class="number">4</span>:j]))[<span class="number">0</span>]</span><br><span class="line">    flag += struct.pack(<span class="string">&#x27;&gt;I&#x27;</span>, part1) + struct.pack(<span class="string">&#x27;&gt;I&#x27;</span>, part2)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># b&#x27;WMCTF&#123;G00dEv3ning!Y0uAreAwes0m3!!RightBackFromB1ackM1rr0r!WOW!!&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="其他师傅的patch脚本"><a href="#其他师傅的patch脚本" class="headerlink" title="其他师傅的patch脚本"></a>其他师傅的patch脚本</h3><p>PZ师傅是将花指令删除，并且更改了代码段中跳转指令的参数，使其逻辑正确。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sliceCode</span>(<span class="params">code</span>):</span><br><span class="line">    code_attribute = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(code)):</span><br><span class="line">        <span class="comment"># 检测到0x73开头的部分，即代码段部分</span></span><br><span class="line">        <span class="keyword">if</span> code[i] == <span class="number">0x73</span>:</span><br><span class="line">            <span class="comment"># 获取代码段长度</span></span><br><span class="line">            size = <span class="built_in">int</span>(struct.unpack(<span class="string">&quot;&lt;I&quot;</span>, <span class="built_in">bytes</span>(code[i + <span class="number">1</span>:i + <span class="number">5</span>]))[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                num = <span class="number">3</span> + i</span><br><span class="line">                <span class="comment"># 代码段一般以 53 00 结尾（即 RETURN_VALUE），此时检测是否倒数第二个位置为53</span></span><br><span class="line">                <span class="keyword">if</span> code[size + num] == <span class="number">0x53</span>:</span><br><span class="line">                    <span class="comment"># 添加代码段起始位置和长度</span></span><br><span class="line">                    code_attribute.append(&#123;</span><br><span class="line">                        <span class="string">&#x27;index&#x27;</span>: i + <span class="number">5</span>,</span><br><span class="line">                        <span class="string">&#x27;len&#x27;</span>: size</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">    code_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(code_attribute)):</span><br><span class="line">        <span class="comment"># 添加代码段数据</span></span><br><span class="line">        code_list.append(code[code_attribute[i][<span class="string">&#x27;index&#x27;</span>]: code_attribute[i][<span class="string">&#x27;index&#x27;</span>] + code_attribute[i][<span class="string">&#x27;len&#x27;</span>]])</span><br><span class="line">    <span class="keyword">return</span> code_attribute, code_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">repairJump</span>(<span class="params">code</span>):</span><br><span class="line">    flower_target = [<span class="number">0x6E</span>, <span class="number">0x0</span>]  <span class="comment"># 花指令开头的两个字节</span></span><br><span class="line">    relative_jump_list = [<span class="number">0x6E</span>, <span class="number">0x78</span>, <span class="number">0x5D</span>]  <span class="comment"># 相对跳转指令 字节码</span></span><br><span class="line">    <span class="comment"># JUMP_FORWARD 0x6e</span></span><br><span class="line">    absolute_jump_list = [<span class="number">0x6F</span>, <span class="number">0x70</span>, <span class="number">0x71</span>, <span class="number">0x72</span>, <span class="number">0x73</span>, <span class="number">0x77</span>]  <span class="comment"># 绝对跳转指令 字节码</span></span><br><span class="line">    <span class="comment"># JUMP_IF_FALSE_OR_POP 0x6f</span></span><br><span class="line">    <span class="comment"># JUMP_IF_TRUE_OR_POP 0x70</span></span><br><span class="line">    <span class="comment"># JUMP_ABSOLUTE 0x71</span></span><br><span class="line">    <span class="comment"># POP_JUMP_IF_FALSE 0x72</span></span><br><span class="line">    <span class="comment"># POP_JUMP_IF_TRUE 0x73</span></span><br><span class="line">    <span class="comment"># RERAISE 0x77</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(code)):</span><br><span class="line">        <span class="keyword">if</span> code[i] <span class="keyword">in</span> relative_jump_list:</span><br><span class="line">            cnt = <span class="number">0</span></span><br><span class="line">            <span class="comment"># 跳转位置</span></span><br><span class="line">            jmp_range = code[i + <span class="number">1</span>] + i + <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> jmp_range &gt; <span class="built_in">len</span>(code):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">2</span>, jmp_range):</span><br><span class="line">                <span class="comment"># 检测是否是无效的跳转指令</span></span><br><span class="line">                <span class="keyword">if</span> code[j] == flower_target[<span class="number">0</span>] <span class="keyword">and</span> code[j + <span class="number">1</span>] == flower_target[<span class="number">1</span>] <span class="keyword">and</span> j % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                    cnt += <span class="number">1</span></span><br><span class="line">            <span class="comment"># 由于本题的花指令为12个字节，因此需要消除后并减去12</span></span><br><span class="line">            code[i + <span class="number">1</span>] -= cnt * <span class="number">12</span></span><br><span class="line">        <span class="keyword">elif</span> code[i] <span class="keyword">in</span> absolute_jump_list:</span><br><span class="line">            cnt = <span class="number">0</span></span><br><span class="line">            <span class="comment"># 跳转位置</span></span><br><span class="line">            jmp_range = code[i + <span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> jmp_range &gt; <span class="built_in">len</span>(code):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(jmp_range):</span><br><span class="line">                <span class="comment"># 检测是否是无效的跳转指令</span></span><br><span class="line">                <span class="keyword">if</span> code[j] == flower_target[<span class="number">0</span>] <span class="keyword">and</span> code[j + <span class="number">1</span>] == flower_target[<span class="number">1</span>] <span class="keyword">and</span> j % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                    cnt += <span class="number">1</span></span><br><span class="line">            code[i + <span class="number">1</span>] -= cnt * <span class="number">12</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">removeFlower</span>(<span class="params">code</span>):</span><br><span class="line">    org_code = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">    flowerTarget = [<span class="number">0x6E</span>, <span class="number">0x0</span>]</span><br><span class="line">    flower_index = []</span><br><span class="line">    <span class="comment"># 检测无用跳转位置</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(code)):</span><br><span class="line">        <span class="keyword">if</span> code[i] == flowerTarget[<span class="number">0</span>] <span class="keyword">and</span> code[i + <span class="number">1</span>] == flowerTarget[<span class="number">1</span>] <span class="keyword">and</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            flower_index.append(i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 去掉花指令，并拼接正确指令</span></span><br><span class="line">        org_code += <span class="built_in">bytes</span>(code[:flower_index[<span class="number">0</span>]])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(flower_index)):</span><br><span class="line">            org_code += <span class="built_in">bytes</span>(code[flower_index[i - <span class="number">1</span>] + <span class="number">12</span>:flower_index[i]])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            org_code += <span class="built_in">bytes</span>(code[flower_index[i] + <span class="number">12</span>:])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        org_code = <span class="built_in">bytes</span>(code)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> org_code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    filename = <span class="string">&quot;obf_RightBack.pyc&quot;</span></span><br><span class="line">    f = <span class="built_in">list</span>(<span class="built_in">open</span>(filename, <span class="string">&quot;rb&quot;</span>).read())</span><br><span class="line"></span><br><span class="line">    code_attribute, code_list = sliceCode(f)</span><br><span class="line">    file = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(code_attribute)):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(code_list[i]) &lt;= <span class="number">0x100</span>:</span><br><span class="line">            code_list[i] = repairJump(code_list[i])</span><br><span class="line">            code_list[i] = removeFlower(code_list[i])</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 拼接更改后的代码段：前面的数据 + 更改后的代码段长度 + 更改后的代码段</span></span><br><span class="line">            file += <span class="built_in">bytes</span>(f[:code_attribute[i][<span class="string">&#x27;index&#x27;</span>] - <span class="number">4</span>]) + struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, <span class="built_in">len</span>(code_list[i])) + <span class="built_in">bytes</span>(</span><br><span class="line">                code_list[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            file += <span class="built_in">bytes</span>(</span><br><span class="line">                f[code_attribute[i - <span class="number">1</span>][<span class="string">&#x27;index&#x27;</span>] + code_attribute[i - <span class="number">1</span>][<span class="string">&#x27;len&#x27;</span>]:code_attribute[i][<span class="string">&#x27;index&#x27;</span>] - <span class="number">4</span>]</span><br><span class="line">            ) + struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, <span class="built_in">len</span>(code_list[i])) + <span class="built_in">bytes</span>(code_list[i])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        file += <span class="built_in">bytes</span>(f[code_attribute[i][<span class="string">&#x27;index&#x27;</span>] + code_attribute[i][<span class="string">&#x27;len&#x27;</span>]:])</span><br><span class="line"></span><br><span class="line">    filename = <span class="string">&#x27;rev_&#x27;</span> + filename</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(file)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;OK!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="ezAndroid"><a href="#ezAndroid" class="headerlink" title="ezAndroid"></a>ezAndroid</h2><h3 id="apk逻辑"><a href="#apk逻辑" class="headerlink" title="apk逻辑"></a>apk逻辑</h3><p>apk逻辑很简单，主要看两个so的函数：<code>check2、ChechUsername</code></p><p><img src="/2023/11/21/CTF-wp-1/image-20230901200148197.png"></p><p>ida查看so没有看见这两个函数，wp说是JNI动态注册，可以使用frida将其hook。</p><h3 id="反frida"><a href="#反frida" class="headerlink" title="反frida"></a>反frida</h3><h4 id="大致逻辑"><a href="#大致逻辑" class="headerlink" title="大致逻辑"></a>大致逻辑</h4><p>在<code>.init_array</code>中有一个函数为反frida。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">a1 = [<span class="number">0xCF</span>, <span class="number">0xC3</span>, <span class="number">0xAD</span>, <span class="number">0xA8</span>, <span class="number">0x7A</span>, <span class="number">0x41</span>, <span class="number">0x6E</span>, <span class="number">0x9E</span>, <span class="number">0x61</span>, <span class="number">0x0F</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x55</span>, <span class="number">0xB5</span>, <span class="number">0x2D</span>, <span class="number">0x26</span>, <span class="number">0x60</span>, <span class="number">0x7F</span>, <span class="number">0xA4</span>,</span><br><span class="line">      <span class="number">0xFC</span>, <span class="number">0xCF</span>, <span class="number">0xB7</span>, <span class="number">0x5F</span>, <span class="number">0x33</span>, <span class="number">0xFF</span>, <span class="number">0x65</span>, <span class="number">0x02</span>, <span class="number">0x17</span>, <span class="number">0xBF</span>, <span class="number">0x95</span>, <span class="number">0x47</span>, <span class="number">0x6D</span>, <span class="number">0xC4</span>, <span class="number">0xAE</span>, <span class="number">0x5E</span>, <span class="number">0xC8</span>, <span class="number">0x4D</span>, <span class="number">0x54</span>,</span><br><span class="line">      <span class="number">0xD4</span>, <span class="number">0x69</span>, <span class="number">0xD8</span>, <span class="number">0xEE</span>, <span class="number">0x70</span>, <span class="number">0x43</span>, <span class="number">0x8D</span>, <span class="number">0x0A</span>, <span class="number">0x61</span>, <span class="number">0x38</span>, <span class="number">0xCC</span>, <span class="number">0xF0</span>, <span class="number">0x2B</span>, <span class="number">0x0B</span>, <span class="number">0xEB</span>, <span class="number">0xC3</span>, <span class="number">0x3F</span>, <span class="number">0xB8</span>, <span class="number">0x3E</span>,</span><br><span class="line">      <span class="number">0x54</span>, <span class="number">0xDA</span>, <span class="number">0xEF</span>, <span class="number">0xB3</span>, <span class="number">0x4A</span>, <span class="number">0x1F</span>, <span class="number">0x00</span>, <span class="number">0x6B</span>, <span class="number">0x5D</span>, <span class="number">0xA0</span>, <span class="number">0xB5</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xBA</span>, <span class="number">0xB0</span>, <span class="number">0x1F</span>, <span class="number">0x6D</span>, <span class="number">0xE4</span>, <span class="number">0x23</span>,</span><br><span class="line">      <span class="number">0x1E</span>, <span class="number">0xCC</span>, <span class="number">0x83</span>, <span class="number">0xFE</span>, <span class="number">0xA3</span>, <span class="number">0x86</span>, <span class="number">0xF0</span>, <span class="number">0xB0</span>, <span class="number">0xDA</span>, <span class="number">0x8A</span>, <span class="number">0xBF</span>, <span class="number">0xB1</span>, <span class="number">0x43</span>, <span class="number">0x2C</span>, <span class="number">0xF6</span>, <span class="number">0x50</span>, <span class="number">0x5F</span>, <span class="number">0xBB</span>, <span class="number">0x0C</span>,</span><br><span class="line">      <span class="number">0xA8</span>, <span class="number">0x69</span>, <span class="number">0x29</span>, <span class="number">0x3A</span>, <span class="number">0x08</span>, <span class="number">0xE4</span>, <span class="number">0x1B</span>, <span class="number">0xFE</span>, <span class="number">0x8B</span>, <span class="number">0x08</span>, <span class="number">0x2F</span>, <span class="number">0x86</span>, <span class="number">0x06</span>, <span class="number">0x5E</span>, <span class="number">0x1E</span>, <span class="number">0xFA</span>, <span class="number">0xC2</span>, <span class="number">0xDA</span>, <span class="number">0x93</span>,</span><br><span class="line">      <span class="number">0xE5</span>, <span class="number">0xDD</span>, <span class="number">0x45</span>, <span class="number">0x4E</span>, <span class="number">0x4A</span>, <span class="number">0x31</span>, <span class="number">0xB5</span>, <span class="number">0x5D</span>, <span class="number">0x94</span>, <span class="number">0x33</span>, <span class="number">0x38</span>, <span class="number">0x3F</span>, <span class="number">0x42</span>, <span class="number">0xFF</span>, <span class="number">0x27</span>, <span class="number">0x3D</span>, <span class="number">0x7F</span>, <span class="number">0x74</span>, <span class="number">0x3B</span>,</span><br><span class="line">      <span class="number">0xF4</span>, <span class="number">0x8A</span>, <span class="number">0x61</span>, <span class="number">0xF4</span>, <span class="number">0xBF</span>, <span class="number">0x8C</span>, <span class="number">0xD6</span>, <span class="number">0x6C</span>, <span class="number">0x81</span>, <span class="number">0x2D</span>, <span class="number">0xE2</span>, <span class="number">0x42</span>, <span class="number">0x09</span>, <span class="number">0xCD</span>, <span class="number">0xC6</span>, <span class="number">0xF2</span>, <span class="number">0x12</span>, <span class="number">0x49</span>, <span class="number">0x9D</span>,</span><br><span class="line">      <span class="number">0xEE</span>, <span class="number">0x00</span>, <span class="number">0xf4</span>]</span><br><span class="line">a2 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    a2.append(a1[<span class="number">22</span> + i % <span class="number">0x14</span>] ^ a1[<span class="number">22</span> + <span class="number">20</span> + i])</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytearray</span>(a2))</span><br><span class="line">a3 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">    a3.append((a1[<span class="number">83</span> + i % <span class="number">0x1C</span>] ^ a1[<span class="number">83</span> + <span class="number">28</span> + i]))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytearray</span>(a3))</span><br><span class="line">a4 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    a4.append((a1[<span class="number">0x83</span> + i % <span class="number">0x12</span>] ^ a1[<span class="number">0x83</span> + <span class="number">18</span> + i]))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytearray</span>(a4))</span><br><span class="line"><span class="comment"># bytearray(b&#x27;/proc/self/maps\x00&#x27;)</span></span><br><span class="line"><span class="comment"># bytearray(b&#x27;r\x00&#x27;)</span></span><br><span class="line"><span class="comment"># bytearray(b&#x27;frida\x00&#x27;)</span></span><br></pre></td></tr></table></figure><p><img src="/2023/11/21/CTF-wp-1/image-20230901195349881.png"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230901172412129.png"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230901172428191.png"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230901195137311.png"></p><p>i与v3有关，因此当判断出maps含有frida则程序退出。</p><h4 id="frida-hook"><a href="#frida-hook" class="headerlink" title="frida hook"></a>frida hook</h4><p>frida hook掉pthread_create函数。</p><p>逻辑为：当第四个参数为0时，将第三个参数替换为自定义的函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># frida -U -f com.<span class="property">wmctf</span>.<span class="property">ezandroid</span> -l .\frida.<span class="property">js</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hook_AntiFrida_func</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> pthread_create_addr = <span class="title class_">Module</span>.<span class="title function_">findExportByName</span>(<span class="string">&quot;libc.so&quot;</span>, <span class="string">&quot;pthread_create&quot;</span>);</span><br><span class="line">    <span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(pthread_create_addr, &#123;</span><br><span class="line">        <span class="title function_">onEnter</span>(<span class="params">args</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> func_addr = args[<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">if</span> (args[<span class="number">3</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="title class_">Interceptor</span>.<span class="title function_">replace</span>(func_addr, <span class="keyword">new</span> <span class="title class_">NativeCallback</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[*] Replace antiFrida success!&quot;</span>);</span><br><span class="line">                &#125;, <span class="string">&#x27;void&#x27;</span>, []))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="native函数"><a href="#native函数" class="headerlink" title="native函数"></a>native函数</h3><p>frida hook脚本：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook_RegisterNatives</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> symbols = <span class="title class_">Process</span>.<span class="title function_">getModuleByName</span>(<span class="string">&#x27;libart.so&#x27;</span>).<span class="title function_">enumerateSymbols</span>();</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">RegisterNatives</span>_addr = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; symbols.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> symbol = symbols[i];</span><br><span class="line">        <span class="keyword">if</span> (symbol.<span class="property">name</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;RegisterNatives&quot;</span>) != -<span class="number">1</span> &amp;&amp; symbol.<span class="property">name</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;CheckJNI&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="title class_">RegisterNatives</span>_addr = symbol.<span class="property">address</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;RegisterNatives_addr: &quot;</span>, <span class="title class_">RegisterNatives</span>_addr);</span><br><span class="line">    <span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(<span class="title class_">RegisterNatives</span>_addr, &#123;</span><br><span class="line">        <span class="attr">onEnter</span>: <span class="keyword">function</span> (<span class="params">args</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> env = <span class="title class_">Java</span>.<span class="property">vm</span>.<span class="title function_">tryGetEnv</span>();</span><br><span class="line">            <span class="keyword">var</span> className = env.<span class="title function_">getClassName</span>(args[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">var</span> methodCount = args[<span class="number">3</span>].<span class="title function_">toInt32</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; methodCount; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> methodName = args[<span class="number">2</span>].<span class="title function_">add</span>(<span class="title class_">Process</span>.<span class="property">pointerSize</span> * <span class="number">3</span> * i).<span class="title function_">add</span>(<span class="title class_">Process</span>.<span class="property">pointerSize</span> * <span class="number">0</span>).<span class="title function_">readPointer</span>().<span class="title function_">readCString</span>();</span><br><span class="line">                <span class="keyword">var</span> signature = args[<span class="number">2</span>].<span class="title function_">add</span>(<span class="title class_">Process</span>.<span class="property">pointerSize</span> * <span class="number">3</span> * i).<span class="title function_">add</span>(<span class="title class_">Process</span>.<span class="property">pointerSize</span> * <span class="number">1</span>).<span class="title function_">readPointer</span>().<span class="title function_">readCString</span>();</span><br><span class="line">                <span class="keyword">var</span> fnPtr =</span><br><span class="line">                    args[<span class="number">2</span>].<span class="title function_">add</span>(<span class="title class_">Process</span>.<span class="property">pointerSize</span> * <span class="number">3</span> * i).<span class="title function_">add</span>(<span class="title class_">Process</span>.<span class="property">pointerSize</span> * <span class="number">2</span>).<span class="title function_">readPointer</span>();</span><br><span class="line">                <span class="keyword">var</span> <span class="variable language_">module</span> = <span class="title class_">Process</span>.<span class="title function_">findModuleByAddress</span>(fnPtr);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(className, methodName, signature, fnPtr, <span class="variable language_">module</span>.<span class="property">name</span>, fnPtr.<span class="title function_">sub</span>(<span class="variable language_">module</span>.<span class="property">base</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;, <span class="attr">onLeave</span>: <span class="keyword">function</span> (<span class="params">retval</span>) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到结果：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230901201747035.png"></p><p><code>CheckUsername: 0x2b90</code></p><p><code>check2: 0x32f0</code></p><h3 id="SO函数"><a href="#SO函数" class="headerlink" title="SO函数"></a>SO函数</h3><h4 id="CheckUsername"><a href="#CheckUsername" class="headerlink" title="CheckUsername"></a>CheckUsername</h4><p>被混淆了，主要逻辑在这里：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230908143302176.png"></p><p>sub_57D0可以明显看出是RC4。</p><p>手动分析后，逻辑如下：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230901222832700.png"></p><p>RC4初始化一：1-3 -&gt; 1-2 -&gt; 2 -&gt; 1-3</p><p>RC4初始化二：7 -&gt; 4 -&gt; 3 -&gt; 7</p><p>RC4解密：5 -&gt; 1-1 -&gt; 5</p><h5 id="还原代码"><a href="#还原代码" class="headerlink" title="还原代码"></a>还原代码</h5><p>知道逻辑就可以了，但这里尝试手动patch还原一下代码。</p><p>主要有两类代码需要patch，先展示结果：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230901224013705.png"></p><h6 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h6><p>将两段代码之间添加了一条jmp语句，使其去往分发器。</p><p>直接去掉jmp语句即可。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230901223138224.png"></p><h6 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h6><p>这就是判断index是否大于256。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230901223601498.png" alt="image-20230901223601498"></p><p>看看block7的地址，就在判断的下面：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230901223747194.png"></p><p>因此直接将汇编：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mov     eax, [rbp+index]</span><br><span class="line">mov     ecx, [rbp+var_214]</span><br><span class="line">sub     ecx, 6DD586C3h</span><br><span class="line">mov     edx, [rbp+var_214]</span><br><span class="line">sub     edx, 15E1168Ah</span><br><span class="line">cmp     eax, 100h</span><br><span class="line">cmovl   edx, ecx</span><br><span class="line">loc_5B0F:</span><br><span class="line">mov     [rbp+var_250], edx</span><br><span class="line">jmp     loc_5D49</span><br></pre></td></tr></table></figure><p>改成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mov     eax, [rbp+index]</span><br><span class="line">cmp     eax, 100h</span><br><span class="line">jge loc_5BC0</span><br></pre></td></tr></table></figure><h5 id="frida-hook-RC4函数的参数"><a href="#frida-hook-RC4函数的参数" class="headerlink" title="frida hook RC4函数的参数"></a>frida hook RC4函数的参数</h5><p>脚本：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook_sub_57D0</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> soAddr = <span class="title class_">Module</span>.<span class="title function_">findBaseAddress</span>(<span class="string">&quot;libezandroid.so&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> sub_57D0 = soAddr.<span class="title function_">add</span>(<span class="number">0x57D0</span>);</span><br><span class="line">    <span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(sub_57D0, &#123;</span><br><span class="line">        <span class="attr">onEnter</span>: <span class="keyword">function</span> (<span class="params">args</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[*] sub_57D0 called!&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arg0: &quot;</span> + args[<span class="number">0</span>].<span class="title function_">readCString</span>());</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arg1: &quot;</span> + args[<span class="number">1</span>].<span class="title function_">readCString</span>());</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arg2: &quot;</span> + args[<span class="number">2</span>]);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arg3: &quot;</span> + args[<span class="number">3</span>].<span class="title function_">readCString</span>());</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arg4: &quot;</span> + args[<span class="number">4</span>]);</span><br><span class="line">        &#125;, <span class="attr">onLeave</span>: <span class="keyword">function</span> (<span class="params">retval</span>) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230908143625931.png"></p><p>可见密钥是：<code>12345678</code></p><p>注意到加密的时候还异或了index：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230908143742256.png"></p><p>因此解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ARC4</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rc4_decrypt</span>(<span class="params">key, ciphertext</span>):</span><br><span class="line">    cipher = ARC4.new(key.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    plaintext = cipher.decrypt(ciphertext)</span><br><span class="line">    <span class="keyword">return</span> plaintext</span><br><span class="line">key = <span class="string">&quot;12345678&quot;</span></span><br><span class="line">ciphertext = <span class="built_in">bytearray</span>([<span class="number">0xE9</span>, <span class="number">0x97</span>, <span class="number">0x64</span>, <span class="number">0xE6</span>, <span class="number">0x7E</span>, <span class="number">0xEB</span>, <span class="number">0xBD</span>, <span class="number">0xC1</span>, <span class="number">0xAB</span>, <span class="number">0x43</span>])</span><br><span class="line">plaintext = <span class="built_in">list</span>(rc4_decrypt(key, ciphertext))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(plaintext)):</span><br><span class="line">    plaintext[i] ^= i</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytearray</span>(plaintext))</span><br><span class="line"><span class="comment"># Re_1s_eaSy</span></span><br></pre></td></tr></table></figure><h4 id="check2"><a href="#check2" class="headerlink" title="check2"></a>check2</h4><p>同样是被混淆了，主题逻辑在这：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230908150458516.png" alt="image-20230908150458516"></p><blockquote><ol><li><code>movups xmm0, xmmword ptr [rcx]</code>: 将<code>rcx</code>寄存器指向的内存中的128位数据加载到<code>xmm0</code>寄存器中。</li><li><code>movups xmm1, xmmword ptr [rax]</code>: 将<code>rax</code>寄存器指向的内存中的128位数据加载到<code>xmm1</code>寄存器中。</li><li><code>pcmpeqb xmm1, xmm0</code>: 执行128位数据的比较操作，将比较结果保存在<code>xmm1</code>寄存器中。这里的<code>pcmpeqb</code>指令是用于比较两个XMM寄存器中的数据是否相等，结果是每个字节的比较结果（相等为0xFF，不等为0x00）。</li><li><code>pmovmskb esi, xmm1</code>: 将<code>xmm1</code>寄存器中的比较结果按位转换成一个32位整数，并将结果保存在<code>esi</code>寄存器中。这个操作通常用于提取比较结果的掩码，其中每个位表示一个字节是否相等。</li></ol></blockquote><p>因此，也是一个加密，比对的过程。</p><h5 id="分析加密过程"><a href="#分析加密过程" class="headerlink" title="分析加密过程"></a>分析加密过程</h5><p>由findcrypt找到AES特征，交叉引用看一下各个函数：</p><p>字节代换：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230908151420162.png"></p><p>轮密钥生成的T函数：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230908152205220.png"></p><p>大概猜测其为AES。</p><p>注意到AES的Sbox盒在看交叉引用时有被赋值的操作，且<code>sub_2690</code>在<code>.init_array</code>中，表明SBOX表被更换了：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230908153726756.png"></p><p>这里同样使用frida获取其参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook_sub_B30</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> soAddr = <span class="title class_">Module</span>.<span class="title function_">findBaseAddress</span>(<span class="string">&quot;libezandroid.so&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> sub_B30 = soAddr.<span class="title function_">add</span>(<span class="number">0xB30</span>);</span><br><span class="line">    <span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(sub_B30, &#123;</span><br><span class="line">        <span class="attr">onEnter</span>: <span class="keyword">function</span> (<span class="params">args</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[*] sub_AFC called!&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arg0: &quot;</span> + args[<span class="number">0</span>].<span class="title function_">readCString</span>());</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arg1: &quot;</span> + args[<span class="number">1</span>]);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arg2: &quot;</span> + args[<span class="number">2</span>].<span class="title function_">readCString</span>());</span><br><span class="line">        &#125;, <span class="attr">onLeave</span>:<span class="keyword">function</span> (<span class="params">retval</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230908153433276.png"></p><p>故解密：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Nb 4  <span class="comment">// 数据块行数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Nk 4  <span class="comment">// 密码块行数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Nr 10 <span class="comment">// 轮加密次数</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> RoundKey[<span class="number">4</span> * Nb * (Nr + <span class="number">1</span>)]; <span class="comment">// 轮密钥</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Key[<span class="number">17</span>];                     <span class="comment">// 密钥</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> state[<span class="number">4</span>][<span class="number">4</span>];                 <span class="comment">// 明文加密状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实际上只需要用Rocn[1-10] </span></span><br><span class="line"><span class="comment">// 轮常量</span></span><br><span class="line"><span class="type">int</span> Rcon[<span class="number">255</span>] = &#123;</span><br><span class="line">    <span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>,</span><br><span class="line">    <span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>, <span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>, <span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>, <span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>,</span><br><span class="line">    <span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>, <span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>, <span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>, <span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>, <span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>,</span><br><span class="line">    <span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>, <span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>,</span><br><span class="line">    <span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>, <span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>, <span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>, <span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>,</span><br><span class="line">    <span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>, <span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>, <span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>, <span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>, <span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>,</span><br><span class="line">    <span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>, <span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>, <span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>,</span><br><span class="line">    <span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>, <span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>, <span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>, <span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>,</span><br><span class="line">    <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>, <span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>, <span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>, <span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>, <span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>,</span><br><span class="line">    <span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>, <span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>, <span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>, <span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>,</span><br><span class="line">    <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>, <span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>, <span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>,</span><br><span class="line">    <span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>, <span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>, <span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>, <span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>,</span><br><span class="line">    <span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>, <span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>, <span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>, <span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>, <span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>,</span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>, <span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>,</span><br><span class="line">    <span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>, <span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>, <span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>, <span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>,</span><br><span class="line">    <span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>, <span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>, <span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>, <span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>, <span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// s盒</span></span><br><span class="line"><span class="type">int</span> SBOX[<span class="number">256</span>] = &#123;</span><br><span class="line">    <span class="comment">// 0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F</span></span><br><span class="line">    <span class="number">0x29</span>, <span class="number">0x40</span>, <span class="number">0x57</span>, <span class="number">0x6E</span>, <span class="number">0x85</span>, <span class="number">0x9C</span>, <span class="number">0xB3</span>, <span class="number">0xCA</span>, <span class="number">0xE1</span>, <span class="number">0xF8</span>, <span class="number">0x0F</span>, <span class="number">0x26</span>, <span class="number">0x3D</span>, <span class="number">0x54</span>, <span class="number">0x6B</span>, <span class="number">0x82</span>,</span><br><span class="line">    <span class="number">0x99</span>, <span class="number">0xB0</span>, <span class="number">0xC7</span>, <span class="number">0xDE</span>, <span class="number">0xF5</span>, <span class="number">0x0C</span>, <span class="number">0x23</span>, <span class="number">0x3A</span>, <span class="number">0x51</span>, <span class="number">0x68</span>, <span class="number">0x7F</span>, <span class="number">0x96</span>, <span class="number">0xAD</span>, <span class="number">0xC4</span>, <span class="number">0xDB</span>, <span class="number">0xF2</span>,</span><br><span class="line">    <span class="number">0x09</span>, <span class="number">0x20</span>, <span class="number">0x37</span>, <span class="number">0x4E</span>, <span class="number">0x65</span>, <span class="number">0x7C</span>, <span class="number">0x93</span>, <span class="number">0xAA</span>, <span class="number">0xC1</span>, <span class="number">0xD8</span>, <span class="number">0xEF</span>, <span class="number">0x06</span>, <span class="number">0x1D</span>, <span class="number">0x34</span>, <span class="number">0x4B</span>, <span class="number">0x62</span>,</span><br><span class="line">    <span class="number">0x79</span>, <span class="number">0x90</span>, <span class="number">0xA7</span>, <span class="number">0xBE</span>, <span class="number">0xD5</span>, <span class="number">0xEC</span>, <span class="number">0x03</span>, <span class="number">0x1A</span>, <span class="number">0x31</span>, <span class="number">0x48</span>, <span class="number">0x5F</span>, <span class="number">0x76</span>, <span class="number">0x8D</span>, <span class="number">0xA4</span>, <span class="number">0xBB</span>, <span class="number">0xD2</span>,</span><br><span class="line">    <span class="number">0xE9</span>, <span class="number">0x00</span>, <span class="number">0x17</span>, <span class="number">0x2E</span>, <span class="number">0x45</span>, <span class="number">0x5C</span>, <span class="number">0x73</span>, <span class="number">0x8A</span>, <span class="number">0xA1</span>, <span class="number">0xB8</span>, <span class="number">0xCF</span>, <span class="number">0xE6</span>, <span class="number">0xFD</span>, <span class="number">0x14</span>, <span class="number">0x2B</span>, <span class="number">0x42</span>,</span><br><span class="line">    <span class="number">0x59</span>, <span class="number">0x70</span>, <span class="number">0x87</span>, <span class="number">0x9E</span>, <span class="number">0xB5</span>, <span class="number">0xCC</span>, <span class="number">0xE3</span>, <span class="number">0xFA</span>, <span class="number">0x11</span>, <span class="number">0x28</span>, <span class="number">0x3F</span>, <span class="number">0x56</span>, <span class="number">0x6D</span>, <span class="number">0x84</span>, <span class="number">0x9B</span>, <span class="number">0xB2</span>,</span><br><span class="line">    <span class="number">0xC9</span>, <span class="number">0xE0</span>, <span class="number">0xF7</span>, <span class="number">0x0E</span>, <span class="number">0x25</span>, <span class="number">0x3C</span>, <span class="number">0x53</span>, <span class="number">0x6A</span>, <span class="number">0x81</span>, <span class="number">0x98</span>, <span class="number">0xAF</span>, <span class="number">0xC6</span>, <span class="number">0xDD</span>, <span class="number">0xF4</span>, <span class="number">0x0B</span>, <span class="number">0x22</span>,</span><br><span class="line">    <span class="number">0x39</span>, <span class="number">0x50</span>, <span class="number">0x67</span>, <span class="number">0x7E</span>, <span class="number">0x95</span>, <span class="number">0xAC</span>, <span class="number">0xC3</span>, <span class="number">0xDA</span>, <span class="number">0xF1</span>, <span class="number">0x08</span>, <span class="number">0x1F</span>, <span class="number">0x36</span>, <span class="number">0x4D</span>, <span class="number">0x64</span>, <span class="number">0x7B</span>, <span class="number">0x92</span>,</span><br><span class="line">    <span class="number">0xA9</span>, <span class="number">0xC0</span>, <span class="number">0xD7</span>, <span class="number">0xEE</span>, <span class="number">0x05</span>, <span class="number">0x1C</span>, <span class="number">0x33</span>, <span class="number">0x4A</span>, <span class="number">0x61</span>, <span class="number">0x78</span>, <span class="number">0x8F</span>, <span class="number">0xA6</span>, <span class="number">0xBD</span>, <span class="number">0xD4</span>, <span class="number">0xEB</span>, <span class="number">0x02</span>,</span><br><span class="line">    <span class="number">0x19</span>, <span class="number">0x30</span>, <span class="number">0x47</span>, <span class="number">0x5E</span>, <span class="number">0x75</span>, <span class="number">0x8C</span>, <span class="number">0xA3</span>, <span class="number">0xBA</span>, <span class="number">0xD1</span>, <span class="number">0xE8</span>, <span class="number">0xFF</span>, <span class="number">0x16</span>, <span class="number">0x2D</span>, <span class="number">0x44</span>, <span class="number">0x5B</span>, <span class="number">0x72</span>,</span><br><span class="line">    <span class="number">0x89</span>, <span class="number">0xA0</span>, <span class="number">0xB7</span>, <span class="number">0xCE</span>, <span class="number">0xE5</span>, <span class="number">0xFC</span>, <span class="number">0x13</span>, <span class="number">0x2A</span>, <span class="number">0x41</span>, <span class="number">0x58</span>, <span class="number">0x6F</span>, <span class="number">0x86</span>, <span class="number">0x9D</span>, <span class="number">0xB4</span>, <span class="number">0xCB</span>, <span class="number">0xE2</span>,</span><br><span class="line">    <span class="number">0xF9</span>, <span class="number">0x10</span>, <span class="number">0x27</span>, <span class="number">0x3E</span>, <span class="number">0x55</span>, <span class="number">0x6C</span>, <span class="number">0x83</span>, <span class="number">0x9A</span>, <span class="number">0xB1</span>, <span class="number">0xC8</span>, <span class="number">0xDF</span>, <span class="number">0xF6</span>, <span class="number">0x0D</span>, <span class="number">0x24</span>, <span class="number">0x3B</span>, <span class="number">0x52</span>,</span><br><span class="line">    <span class="number">0x69</span>, <span class="number">0x80</span>, <span class="number">0x97</span>, <span class="number">0xAE</span>, <span class="number">0xC5</span>, <span class="number">0xDC</span>, <span class="number">0xF3</span>, <span class="number">0x0A</span>, <span class="number">0x21</span>, <span class="number">0x38</span>, <span class="number">0x4F</span>, <span class="number">0x66</span>, <span class="number">0x7D</span>, <span class="number">0x94</span>, <span class="number">0xAB</span>, <span class="number">0xC2</span>,</span><br><span class="line">    <span class="number">0xD9</span>, <span class="number">0xF0</span>, <span class="number">0x07</span>, <span class="number">0x1E</span>, <span class="number">0x35</span>, <span class="number">0x4C</span>, <span class="number">0x63</span>, <span class="number">0x7A</span>, <span class="number">0x91</span>, <span class="number">0xA8</span>, <span class="number">0xBF</span>, <span class="number">0xD6</span>, <span class="number">0xED</span>, <span class="number">0x04</span>, <span class="number">0x1B</span>, <span class="number">0x32</span>,</span><br><span class="line">    <span class="number">0x49</span>, <span class="number">0x60</span>, <span class="number">0x77</span>, <span class="number">0x8E</span>, <span class="number">0xA5</span>, <span class="number">0xBC</span>, <span class="number">0xD3</span>, <span class="number">0xEA</span>, <span class="number">0x01</span>, <span class="number">0x18</span>, <span class="number">0x2F</span>, <span class="number">0x46</span>, <span class="number">0x5D</span>, <span class="number">0x74</span>, <span class="number">0x8B</span>, <span class="number">0xA2</span>,</span><br><span class="line">    <span class="number">0xB9</span>, <span class="number">0xD0</span>, <span class="number">0xE7</span>, <span class="number">0xFE</span>, <span class="number">0x15</span>, <span class="number">0x2C</span>, <span class="number">0x43</span>, <span class="number">0x5A</span>, <span class="number">0x71</span>, <span class="number">0x88</span>, <span class="number">0x9F</span>, <span class="number">0xB6</span>, <span class="number">0xCD</span>, <span class="number">0xE4</span>, <span class="number">0xFB</span>, <span class="number">0x12</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逆s盒</span></span><br><span class="line"><span class="type">int</span> R_SBOX[<span class="number">256</span>] = &#123;</span><br><span class="line">    <span class="number">0x41</span>, <span class="number">0xe8</span>, <span class="number">0x8f</span>, <span class="number">0x36</span>, <span class="number">0xdd</span>, <span class="number">0x84</span>, <span class="number">0x2b</span>, <span class="number">0xd2</span>, <span class="number">0x79</span>, <span class="number">0x20</span>, <span class="number">0xc7</span>, <span class="number">0x6e</span>, <span class="number">0x15</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>, <span class="number">0xa</span>, <span class="number">0xb1</span>, <span class="number">0x58</span>, <span class="number">0xff</span>, <span class="number">0xa6</span>, <span class="number">0x4d</span>, <span class="number">0xf4</span>, <span class="number">0x9b</span>, <span class="number">0x42</span>, <span class="number">0xe9</span>, <span class="number">0x90</span>, <span class="number">0x37</span>, <span class="number">0xde</span>, <span class="number">0x85</span>, <span class="number">0x2c</span>, <span class="number">0xd3</span>, <span class="number">0x7a</span>, <span class="number">0x21</span>, <span class="number">0xc8</span>, <span class="number">0x6f</span>, <span class="number">0x16</span>, <span class="number">0xbd</span>, <span class="number">0x64</span>, <span class="number">0xb</span>, <span class="number">0xb2</span>, <span class="number">0x59</span>, <span class="number">0x0</span>, <span class="number">0xa7</span>, <span class="number">0x4e</span>, <span class="number">0xf5</span>, <span class="number">0x9c</span>, <span class="number">0x43</span>, <span class="number">0xea</span>, <span class="number">0x91</span>, <span class="number">0x38</span>, <span class="number">0xdf</span>, <span class="number">0x86</span>, <span class="number">0x2d</span>, <span class="number">0xd4</span>, <span class="number">0x7b</span>, <span class="number">0x22</span>, <span class="number">0xc9</span>, <span class="number">0x70</span>, <span class="number">0x17</span>, <span class="number">0xbe</span>, <span class="number">0x65</span>, <span class="number">0xc</span>, <span class="number">0xb3</span>, <span class="number">0x5a</span>, <span class="number">0x1</span>, <span class="number">0xa8</span>, <span class="number">0x4f</span>, <span class="number">0xf6</span>, <span class="number">0x9d</span>, <span class="number">0x44</span>, <span class="number">0xeb</span>, <span class="number">0x92</span>, <span class="number">0x39</span>, <span class="number">0xe0</span>, <span class="number">0x87</span>, <span class="number">0x2e</span>, <span class="number">0xd5</span>, <span class="number">0x7c</span>, <span class="number">0x23</span>, <span class="number">0xca</span>, <span class="number">0x71</span>, <span class="number">0x18</span>, <span class="number">0xbf</span>, <span class="number">0x66</span>, <span class="number">0xd</span>, <span class="number">0xb4</span>, <span class="number">0x5b</span>, <span class="number">0x2</span>, <span class="number">0xa9</span>, <span class="number">0x50</span>, <span class="number">0xf7</span>, <span class="number">0x9e</span>, <span class="number">0x45</span>, <span class="number">0xec</span>, <span class="number">0x93</span>, <span class="number">0x3a</span>, <span class="number">0xe1</span>, <span class="number">0x88</span>, <span class="number">0x2f</span>, <span class="number">0xd6</span>, <span class="number">0x7d</span>, <span class="number">0x24</span>, <span class="number">0xcb</span>, <span class="number">0x72</span>, <span class="number">0x19</span>, <span class="number">0xc0</span>, <span class="number">0x67</span>, <span class="number">0xe</span>, <span class="number">0xb5</span>, <span class="number">0x5c</span>, <span class="number">0x3</span>, <span class="number">0xaa</span>, <span class="number">0x51</span>, <span class="number">0xf8</span>, <span class="number">0x9f</span>, <span class="number">0x46</span>, <span class="number">0xed</span>, <span class="number">0x94</span>, <span class="number">0x3b</span>, <span class="number">0xe2</span>, <span class="number">0x89</span>, <span class="number">0x30</span>, <span class="number">0xd7</span>, <span class="number">0x7e</span>, <span class="number">0x25</span>, <span class="number">0xcc</span>, <span class="number">0x73</span>, <span class="number">0x1a</span>, <span class="number">0xc1</span>, <span class="number">0x68</span>, <span class="number">0xf</span>, <span class="number">0xb6</span>, <span class="number">0x5d</span>, <span class="number">0x4</span>, <span class="number">0xab</span>, <span class="number">0x52</span>, <span class="number">0xf9</span>, <span class="number">0xa0</span>, <span class="number">0x47</span>, <span class="number">0xee</span>, <span class="number">0x95</span>, <span class="number">0x3c</span>, <span class="number">0xe3</span>, <span class="number">0x8a</span>, <span class="number">0x31</span>, <span class="number">0xd8</span>, <span class="number">0x7f</span>, <span class="number">0x26</span>, <span class="number">0xcd</span>, <span class="number">0x74</span>, <span class="number">0x1b</span>, <span class="number">0xc2</span>, <span class="number">0x69</span>, <span class="number">0x10</span>, <span class="number">0xb7</span>, <span class="number">0x5e</span>, <span class="number">0x5</span>, <span class="number">0xac</span>, <span class="number">0x53</span>, <span class="number">0xfa</span>, <span class="number">0xa1</span>, <span class="number">0x48</span>, <span class="number">0xef</span>, <span class="number">0x96</span>, <span class="number">0x3d</span>, <span class="number">0xe4</span>, <span class="number">0x8b</span>, <span class="number">0x32</span>, <span class="number">0xd9</span>, <span class="number">0x80</span>, <span class="number">0x27</span>, <span class="number">0xce</span>, <span class="number">0x75</span>, <span class="number">0x1c</span>, <span class="number">0xc3</span>, <span class="number">0x6a</span>, <span class="number">0x11</span>, <span class="number">0xb8</span>, <span class="number">0x5f</span>, <span class="number">0x6</span>, <span class="number">0xad</span>, <span class="number">0x54</span>, <span class="number">0xfb</span>, <span class="number">0xa2</span>, <span class="number">0x49</span>, <span class="number">0xf0</span>, <span class="number">0x97</span>, <span class="number">0x3e</span>, <span class="number">0xe5</span>, <span class="number">0x8c</span>, <span class="number">0x33</span>, <span class="number">0xda</span>, <span class="number">0x81</span>, <span class="number">0x28</span>, <span class="number">0xcf</span>, <span class="number">0x76</span>, <span class="number">0x1d</span>, <span class="number">0xc4</span>, <span class="number">0x6b</span>, <span class="number">0x12</span>, <span class="number">0xb9</span>, <span class="number">0x60</span>, <span class="number">0x7</span>, <span class="number">0xae</span>, <span class="number">0x55</span>, <span class="number">0xfc</span>, <span class="number">0xa3</span>, <span class="number">0x4a</span>, <span class="number">0xf1</span>, <span class="number">0x98</span>, <span class="number">0x3f</span>, <span class="number">0xe6</span>, <span class="number">0x8d</span>, <span class="number">0x34</span>, <span class="number">0xdb</span>, <span class="number">0x82</span>, <span class="number">0x29</span>, <span class="number">0xd0</span>, <span class="number">0x77</span>, <span class="number">0x1e</span>, <span class="number">0xc5</span>, <span class="number">0x6c</span>, <span class="number">0x13</span>, <span class="number">0xba</span>, <span class="number">0x61</span>, <span class="number">0x8</span>, <span class="number">0xaf</span>, <span class="number">0x56</span>, <span class="number">0xfd</span>, <span class="number">0xa4</span>, <span class="number">0x4b</span>, <span class="number">0xf2</span>, <span class="number">0x99</span>, <span class="number">0x40</span>, <span class="number">0xe7</span>, <span class="number">0x8e</span>, <span class="number">0x35</span>, <span class="number">0xdc</span>, <span class="number">0x83</span>, <span class="number">0x2a</span>, <span class="number">0xd1</span>, <span class="number">0x78</span>, <span class="number">0x1f</span>, <span class="number">0xc6</span>, <span class="number">0x6d</span>, <span class="number">0x14</span>, <span class="number">0xbb</span>, <span class="number">0x62</span>, <span class="number">0x9</span>, <span class="number">0xb0</span>, <span class="number">0x57</span>, <span class="number">0xfe</span>, <span class="number">0xa5</span>, <span class="number">0x4c</span>, <span class="number">0xf3</span>, <span class="number">0x9a</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在一行上进位移</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">rotWord</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> temp[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, k = temp[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        temp[i - <span class="number">1</span>] = temp[i];</span><br><span class="line">    temp[<span class="number">3</span>] = k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在一行上进行s盒替换</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">subWord</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> temp[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        temp[i] = SBOX[temp[i]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 密钥扩展，最终得到Nr+1个轮密钥，用于轮次加密</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">keyExpansion</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> temp[<span class="number">5</span>];</span><br><span class="line">    <span class="built_in">memset</span>(RoundKey, <span class="number">0</span>, <span class="keyword">sizeof</span>(RoundKey));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Nk; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            RoundKey[i * <span class="number">4</span> + j] = Key[i * <span class="number">4</span> + j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt; (Nb * (Nr + <span class="number">1</span>)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp[j] = RoundKey[(i - <span class="number">1</span>) * <span class="number">4</span> + j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i % Nk == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            rotWord(temp);</span><br><span class="line">            subWord(temp);</span><br><span class="line">            temp[<span class="number">0</span>] ^= Rcon[i / Nk];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">            RoundKey[i * <span class="number">4</span> + j] = RoundKey[(i - Nk) * <span class="number">4</span> + j] ^ temp[j];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 轮密钥加函数，将明文加密状态与轮密钥简单异或</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">addRoundKey</span><span class="params">(<span class="type">int</span> round)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            state[i][j] ^= RoundKey[round * Nb * <span class="number">4</span> + i * Nb + j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// s盒替换函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">subBytes</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            state[i][j] = SBOX[state[i][j]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逆s盒替换函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">invSubBytes</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            state[i][j] = R_SBOX[state[i][j]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 行位移函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">shiftRows</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="type">int</span> shiftnum = <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> tmp;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; shiftnum; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = state[<span class="number">0</span>][j];</span><br><span class="line">            <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++)</span><br><span class="line">                state[k][j] = state[k + <span class="number">1</span>][j];</span><br><span class="line">            state[<span class="number">3</span>][j] = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        shiftnum++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逆行位移函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">invShiftRows</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="type">int</span> shiftnum = <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> tmp;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; shiftnum; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = state[<span class="number">3</span>][j];</span><br><span class="line">            <span class="keyword">for</span> (k = <span class="number">3</span>; k &gt; <span class="number">0</span>; k--)</span><br><span class="line">                state[k][j] = state[k - <span class="number">1</span>][j];</span><br><span class="line">            state[<span class="number">0</span>][j] = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        shiftnum++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 列混淆函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> xtime(x) ((x <span class="string">&lt;&lt; 1) ^ (((x &gt;</span>&gt; 7) &amp; 1) * 0x1b))</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">mixColumns</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> tmp, t, p;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p = state[i][<span class="number">0</span>];</span><br><span class="line">        tmp = state[i][<span class="number">0</span>] ^ state[i][<span class="number">1</span>] ^ state[i][<span class="number">2</span>] ^ state[i][<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            t = state[i][j] ^ state[i][j + <span class="number">1</span>];</span><br><span class="line">            t = xtime(t);</span><br><span class="line">            state[i][j] ^= t ^ tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        t = state[i][<span class="number">3</span>] ^ p;</span><br><span class="line">        t = xtime(t);</span><br><span class="line">        state[i][<span class="number">3</span>] ^= t ^ tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逆列混淆函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Multiply(x, y) (((y &amp; 1) * x) ^ ((y &gt;&gt; 1 &amp; 1) * xtime(x)) ^ ((y &gt;&gt; 2 &amp; 1) * xtime(xtime(x))) ^ ((y &gt;&gt; 3 &amp; 1) * xtime(xtime(xtime(x)))) ^ ((y &gt;&gt; 4 &amp; 1) * xtime(xtime(xtime(xtime(x))))))</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">invMixColumns</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> a, b, c, d;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a = state[i][<span class="number">0</span>];</span><br><span class="line">        b = state[i][<span class="number">1</span>];</span><br><span class="line">        c = state[i][<span class="number">2</span>];</span><br><span class="line">        d = state[i][<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        state[i][<span class="number">0</span>] = Multiply(a, <span class="number">0x0e</span>) ^ Multiply(b, <span class="number">0x0b</span>) ^ Multiply(c, <span class="number">0x0d</span>) ^ Multiply(d, <span class="number">0x09</span>);</span><br><span class="line">        state[i][<span class="number">1</span>] = Multiply(a, <span class="number">0x09</span>) ^ Multiply(b, <span class="number">0x0e</span>) ^ Multiply(c, <span class="number">0x0b</span>) ^ Multiply(d, <span class="number">0x0d</span>);</span><br><span class="line">        state[i][<span class="number">2</span>] = Multiply(a, <span class="number">0x0d</span>) ^ Multiply(b, <span class="number">0x09</span>) ^ Multiply(c, <span class="number">0x0e</span>) ^ Multiply(d, <span class="number">0x0b</span>);</span><br><span class="line">        state[i][<span class="number">3</span>] = Multiply(a, <span class="number">0x0b</span>) ^ Multiply(b, <span class="number">0x0d</span>) ^ Multiply(c, <span class="number">0x09</span>) ^ Multiply(d, <span class="number">0x0e</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// aes加密函数，key为密钥，input为需要加密的128位明文，output为输出128位密文</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">aes_enc</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *key, <span class="type">unsigned</span> <span class="type">char</span> *input, <span class="type">unsigned</span> <span class="type">char</span> *output)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, round = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(Key, <span class="number">0</span>, <span class="keyword">sizeof</span>(Key));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Nk * <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Key[i] = key[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    keyExpansion();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(state, <span class="number">0</span>, <span class="keyword">sizeof</span>(state));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">            state[i][j] = input[i * <span class="number">4</span> + j];</span><br><span class="line">    &#125;</span><br><span class="line">    addRoundKey(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (round = <span class="number">1</span>; round &lt; Nr; round++)</span><br><span class="line">    &#123;</span><br><span class="line">        subBytes();</span><br><span class="line">        shiftRows();</span><br><span class="line">        mixColumns();</span><br><span class="line">        addRoundKey(round);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    subBytes();</span><br><span class="line">    shiftRows();</span><br><span class="line">    addRoundKey(Nr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">            output[i * <span class="number">4</span> + j] = state[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// aes解密函数，key为密钥，input为需要解密的128位密文，output为输出128位明文</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">aes_dec</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *key, <span class="type">unsigned</span> <span class="type">char</span> *input, <span class="type">unsigned</span> <span class="type">char</span> *output)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, round = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(Key, <span class="number">0</span>, <span class="keyword">sizeof</span>(Key));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Nk * <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Key[i] = key[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    keyExpansion();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(state, <span class="number">0</span>, <span class="keyword">sizeof</span>(state));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">            state[i][j] = input[i * <span class="number">4</span> + j];</span><br><span class="line">    &#125;</span><br><span class="line">    addRoundKey(Nr);</span><br><span class="line">    <span class="keyword">for</span> (round = Nr - <span class="number">1</span>; round &gt; <span class="number">0</span>; round--)</span><br><span class="line">    &#123;</span><br><span class="line">        invSubBytes();</span><br><span class="line">        invShiftRows();</span><br><span class="line">        addRoundKey(round);</span><br><span class="line">        invMixColumns();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    invSubBytes();</span><br><span class="line">    invShiftRows();</span><br><span class="line">    addRoundKey(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">            output[i * <span class="number">4</span> + j] = state[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">gets_t</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *str)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> fin_input;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%66s&quot;</span>, str);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        fin_input = getchar();</span><br><span class="line">    <span class="keyword">while</span> (fin_input != <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="comment">// Re_1s_eaSy123456</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> key[<span class="number">17</span>] = &#123;<span class="number">82</span>, <span class="number">101</span>, <span class="number">95</span>, <span class="number">49</span>, <span class="number">115</span>, <span class="number">95</span>, <span class="number">101</span>, <span class="number">97</span>, <span class="number">83</span>, <span class="number">121</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>&#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> input[<span class="number">17</span>] = <span class="string">&quot;1111222233334444&quot;</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> enc[<span class="number">17</span>] = &#123;</span><br><span class="line">        <span class="number">43</span>,</span><br><span class="line">        <span class="number">200</span>,</span><br><span class="line">        <span class="number">32</span>,</span><br><span class="line">        <span class="number">139</span>,</span><br><span class="line">        <span class="number">92</span>,</span><br><span class="line">        <span class="number">13</span>,</span><br><span class="line">        <span class="number">167</span>,</span><br><span class="line">        <span class="number">155</span>,</span><br><span class="line">        <span class="number">42</span>,</span><br><span class="line">        <span class="number">81</span>,</span><br><span class="line">        <span class="number">58</span>,</span><br><span class="line">        <span class="number">210</span>,</span><br><span class="line">        <span class="number">113</span>,</span><br><span class="line">        <span class="number">113</span>,</span><br><span class="line">        <span class="number">202</span>,</span><br><span class="line">        <span class="number">80</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> dec[<span class="number">17</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;dec-----\n&quot;</span>);</span><br><span class="line">    aes_dec(key, enc, dec);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, dec[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BabyAnti-2-0"><a href="#BabyAnti-2-0" class="headerlink" title="BabyAnti-2.0"></a>BabyAnti-2.0</h2><p><a href="https://mp.weixin.qq.com/s/hpLSfXtc1pYPtvz3734iLA">2023 WMCTF writeup by W4ntY0u (qq.com)</a></p><p><a href="https://pmxq1w80w6.feishu.cn/docx/RxBpdtPkHopGnLxXVNQcUrl5nhd">WMCTF 2023 wp - LaoGong - 飞书云文档 (feishu.cn)</a></p><p><a href="https://blog.csdn.net/m0_68757308/article/details/132794842">WMCTF2023-REVERSE_Blu3e的博客-CSDN博客</a></p><h3 id="patch-libanticheat-so"><a href="#patch-libanticheat-so" class="headerlink" title="patch libanticheat.so"></a>patch libanticheat.so</h3><p><img src="/2023/11/21/CTF-wp-1/image-20230919155308483.png" alt="1 patch 为 0"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230919155344856.png" alt="1 patch 为 0"></p><p><img src="/2023/11/21/CTF-wp-1/image-20230919155427016.png" alt="is_device_rooted -&gt; sub_62FA0: patch 为 0"></p><h3 id="方法一-——-patch-libapp-so"><a href="#方法一-——-patch-libapp-so" class="headerlink" title="方法一 —— patch libapp.so"></a>方法一 —— patch libapp.so</h3><p>直接搜索5000（0x1388），将两个cmp改为个位数：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230919155653863.png"></p><p>随便玩玩就有flag。</p><h3 id="方法二-——-patch-smali代码后用CE"><a href="#方法二-——-patch-smali代码后用CE" class="headerlink" title="方法二 —— patch smali代码后用CE"></a>方法二 —— patch smali代码后用CE</h3><p>由于apk中也有检测是否更改的分的方法，也需要更改：</p><blockquote><p><code>const/4 p1, 0</code>：这行代码将值 0 存储到参数寄存器 p1 中</p></blockquote><p><img src="/2023/11/21/CTF-wp-1/image-20230919155830653.png" alt="改为1"></p><p>然后CE（进程为Ld9BoxHeadless.exe）搜索，得分改为5000。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230919160009753.png"></p><h1 id="羊城杯"><a href="#羊城杯" class="headerlink" title="羊城杯"></a>羊城杯</h1><h2 id="babyobfu"><a href="#babyobfu" class="headerlink" title="babyobfu"></a>babyobfu</h2><h3 id="去混淆"><a href="#去混淆" class="headerlink" title="去混淆"></a>去混淆</h3><p>动调可以看出大概逻辑，主要靠一个函数修复代码段，之后还会还原。</p><p>设置条件断点进行patch：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">repair_code</span>(<span class="params">start, l, num</span>):</span><br><span class="line">s = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">s.append((num &gt;&gt; (<span class="number">8</span> * i)) &amp; <span class="number">0xFF</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">data = Byte(start + i)</span><br><span class="line">PatchByte(start + i, data ^ ((i + <span class="number">0xCE</span>) &amp; <span class="number">0xFF</span>) ^ s[i % <span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rsp = GetRegValue(<span class="string">&quot;rsp&quot;</span>)</span><br><span class="line">retrun_addr = Qword(GetRegValue(<span class="string">&quot;rsp&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> retrun_addr == <span class="number">0x403783</span>:</span><br><span class="line">retrun_addr = Qword(rsp + <span class="number">0x30</span>)</span><br><span class="line">FunAddr = retrun_addr - <span class="number">0x5</span></span><br><span class="line">CodeAddress = GetRegValue(<span class="string">&quot;rdi&quot;</span>)</span><br><span class="line">Length = GetRegValue(<span class="string">&quot;rsi&quot;</span>)</span><br><span class="line">XorNum = GetRegValue(<span class="string">&quot;edx&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> retrun_addr == CodeAddress:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">PatchByte(FunAddr + j, <span class="number">0x90</span>)</span><br><span class="line">repair_code(CodeAddress, Length, XorNum)</span><br><span class="line">SetRegValue(<span class="number">0x40375F</span>, <span class="string">&quot;EIP&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">PatchByte(FunAddr + j, <span class="number">0x90</span>)</span><br><span class="line">SetRegValue(<span class="number">0x40375F</span>, <span class="string">&quot;EIP&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Repair Date from <span class="subst">&#123;<span class="built_in">hex</span>(FunAddr) = &#125;</span>:<span class="subst">&#123;<span class="built_in">hex</span>(CodeAddress) = &#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>多输入，执行几次，main函数就可以反编译了。</p><p>对于这样子的剩余混淆，分析的时候手动patch一下就好，很好辨认。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230903100528828.png"></p><h3 id="逻辑分析"><a href="#逻辑分析" class="headerlink" title="逻辑分析"></a>逻辑分析</h3><p>检测输入长度以及格式为0-9，a-f。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904151634478.png"></p><p>sub_401980是将输入进行更改，后面的循环为更改的输入两个Byte拼接为一个Byte。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904152227987.png"></p><p>sub_401980：其中的数据可以动态获取</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904152524974.png"></p><p>加密过程：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904152625928.png"></p><p>最后比较：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904152702221.png"></p><h3 id="exp-4"><a href="#exp-4" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= num &lt;= <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">return</span> num + <span class="number">0x30</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="number">10</span> &lt;= num &lt;= <span class="number">15</span>:</span><br><span class="line">        <span class="keyword">return</span> num + <span class="number">97</span> - <span class="number">10</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> a + b &gt;= <span class="number">0x256</span>:</span><br><span class="line">        <span class="keyword">return</span> (a + b - <span class="number">1</span>) &amp; <span class="number">0xFF</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (a + b) &amp; <span class="number">0xFF</span></span><br><span class="line"></span><br><span class="line">data = [</span><br><span class="line">    <span class="number">0xd4</span>, <span class="number">0xfd</span>, <span class="number">0x80</span>, <span class="number">0xc4</span>, <span class="number">0x50</span>, <span class="number">0x10</span>, <span class="number">0xde</span>, <span class="number">0x6d</span>, <span class="number">0xe8</span>, <span class="number">0xf0</span>, <span class="number">0xc</span>, <span class="number">0x52</span>, <span class="number">0x9</span>, <span class="number">0x40</span>, <span class="number">0x24</span>, <span class="number">0x97</span>, <span class="number">0xde</span>, <span class="number">0x77</span>, <span class="number">0x14</span>,</span><br><span class="line">    <span class="number">0x5f</span>, <span class="number">0x69</span>, <span class="number">0xf6</span>, <span class="number">0xc0</span>, <span class="number">0x74</span>, <span class="number">0x8e</span>, <span class="number">0x6d</span>, <span class="number">0x80</span>, <span class="number">0xce</span>, <span class="number">0xcc</span>, <span class="number">0x7</span>, <span class="number">0xc0</span>, <span class="number">0xf4</span>, <span class="number">0xa0</span>, <span class="number">0x4</span>, <span class="number">0xf0</span>, <span class="number">0x1c</span>, <span class="number">0xc6</span>, <span class="number">0x0</span>, <span class="number">0xa2</span>,</span><br><span class="line">    <span class="number">0x58</span>, <span class="number">0xf4</span>, <span class="number">0x34</span>, <span class="number">0x40</span>, <span class="number">0xb0</span>, <span class="number">0x4c</span>, <span class="number">0xa0</span>, <span class="number">0xa8</span>, <span class="number">0x56</span>, <span class="number">0x59</span>, <span class="number">0xe9</span>, <span class="number">0x38</span>, <span class="number">0x28</span>, <span class="number">0xd0</span>, <span class="number">0x68</span>, <span class="number">0x40</span>, <span class="number">0x66</span>, <span class="number">0x96</span>, <span class="number">0x45</span>,</span><br><span class="line">    <span class="number">0xd2</span>, <span class="number">0x67</span>, <span class="number">0x40</span>, <span class="number">0xd0</span>, <span class="number">0x24</span>, <span class="number">0x0</span>, <span class="number">0x13</span>, <span class="number">0x4c</span>, <span class="number">0xca</span>, <span class="number">0x78</span>, <span class="number">0x4c</span>, <span class="number">0xbc</span>, <span class="number">0xc0</span>, <span class="number">0x42</span>, <span class="number">0x0</span>, <span class="number">0x10</span>, <span class="number">0x6d</span>, <span class="number">0xc0</span>, <span class="number">0x0</span>, <span class="number">0x38</span>,</span><br><span class="line">    <span class="number">0xb0</span>, <span class="number">0x4</span>, <span class="number">0xc4</span>, <span class="number">0x48</span>, <span class="number">0x80</span>, <span class="number">0xe8</span>, <span class="number">0x71</span>, <span class="number">0xff</span>, <span class="number">0x40</span>, <span class="number">0x84</span>, <span class="number">0x46</span>, <span class="number">0x54</span>, <span class="number">0x25</span>, <span class="number">0x7a</span>, <span class="number">0x38</span>, <span class="number">0x20</span>, <span class="number">0xf8</span>, <span class="number">0xc0</span>, <span class="number">0x38</span>,</span><br><span class="line">    <span class="number">0x94</span>, <span class="number">0xf9</span>, <span class="number">0x70</span>, <span class="number">0xe4</span>, <span class="number">0xfa</span>, <span class="number">0x70</span>, <span class="number">0x8</span>, <span class="number">0x40</span>, <span class="number">0x33</span>, <span class="number">0xe7</span>, <span class="number">0x68</span>, <span class="number">0xb0</span>, <span class="number">0xd6</span>, <span class="number">0x20</span>, <span class="number">0xfb</span>, <span class="number">0x81</span>, <span class="number">0x4c</span>, <span class="number">0x2e</span>, <span class="number">0x8a</span>,</span><br><span class="line">    <span class="number">0x1b</span>, <span class="number">0x3a</span>, <span class="number">0x92</span>, <span class="number">0x78</span>, <span class="number">0xe8</span>, <span class="number">0x24</span>, <span class="number">0x22</span>, <span class="number">0x27</span>, <span class="number">0x5c</span>, <span class="number">0xd2</span>, <span class="number">0x14</span>, <span class="number">0x8a</span>, <span class="number">0xb0</span>, <span class="number">0x60</span>, <span class="number">0x64</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0xe5</span>, <span class="number">0xd1</span>,</span><br><span class="line">    <span class="number">0x5c</span>, <span class="number">0xe9</span>, <span class="number">0x79</span>, <span class="number">0x52</span>, <span class="number">0x34</span>, <span class="number">0x67</span>, <span class="number">0x80</span>, <span class="number">0x4c</span>, <span class="number">0xe2</span>, <span class="number">0x20</span>, <span class="number">0xa0</span>, <span class="number">0x54</span>, <span class="number">0xdf</span>, <span class="number">0x28</span>, <span class="number">0x30</span>, <span class="number">0xf0</span>, <span class="number">0x86</span>, <span class="number">0xad</span>, <span class="number">0xc5</span>,</span><br><span class="line">    <span class="number">0x85</span>, <span class="number">0x71</span>, <span class="number">0xc0</span>, <span class="number">0x4e</span>, <span class="number">0xba</span>, <span class="number">0xcc</span>, <span class="number">0x98</span>, <span class="number">0x23</span>, <span class="number">0x56</span>, <span class="number">0x12</span>, <span class="number">0x90</span>, <span class="number">0xc9</span>, <span class="number">0x5b</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x48</span>, <span class="number">0xba</span>, <span class="number">0xac</span>, <span class="number">0x2c</span>,</span><br><span class="line">    <span class="number">0xdc</span>, <span class="number">0x22</span>, <span class="number">0x90</span>, <span class="number">0xe8</span>, <span class="number">0x18</span>, <span class="number">0x8c</span>, <span class="number">0x81</span>, <span class="number">0x44</span>, <span class="number">0x31</span>, <span class="number">0x84</span>, <span class="number">0x80</span>, <span class="number">0xe8</span>, <span class="number">0x8a</span>, <span class="number">0xe0</span>, <span class="number">0x8c</span>, <span class="number">0xba</span>, <span class="number">0xfa</span>, <span class="number">0xbc</span>, <span class="number">0xe6</span>,</span><br><span class="line">    <span class="number">0xf0</span>, <span class="number">0x9e</span>, <span class="number">0x66</span>, <span class="number">0xda</span>, <span class="number">0x54</span>, <span class="number">0xa1</span>, <span class="number">0xc8</span>, <span class="number">0x1e</span>, <span class="number">0x90</span>, <span class="number">0xf0</span>, <span class="number">0x93</span>, <span class="number">0x39</span>, <span class="number">0x50</span>, <span class="number">0x18</span>, <span class="number">0x99</span>, <span class="number">0x95</span>, <span class="number">0x48</span>, <span class="number">0x81</span>, <span class="number">0xa0</span>,</span><br><span class="line">    <span class="number">0x4a</span>, <span class="number">0xb0</span>, <span class="number">0x6a</span>, <span class="number">0x80</span>, <span class="number">0x7b</span>, <span class="number">0xb0</span>, <span class="number">0xc8</span>, <span class="number">0x9d</span>, <span class="number">0x39</span>, <span class="number">0xfb</span>, <span class="number">0x7e</span>, <span class="number">0x74</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x2a</span>, <span class="number">0x90</span>, <span class="number">0x60</span>, <span class="number">0x4a</span>, <span class="number">0xe2</span>,</span><br><span class="line">    <span class="number">0xda</span>, <span class="number">0x0</span>, <span class="number">0xe</span>, <span class="number">0xc0</span>, <span class="number">0xe0</span>, <span class="number">0xbe</span>, <span class="number">0x6</span>, <span class="number">0xc5</span>, <span class="number">0x61</span>, <span class="number">0xd4</span>, <span class="number">0x9c</span>, <span class="number">0x33</span>, <span class="number">0x88</span>, <span class="number">0x40</span>, <span class="number">0x70</span>, <span class="number">0x78</span>, <span class="number">0xf2</span>, <span class="number">0x7c</span>, <span class="number">0xac</span>, <span class="number">0xb0</span>,</span><br><span class="line">    <span class="number">0xf8</span>, <span class="number">0xcb</span>, <span class="number">0xcc</span>, <span class="number">0x3e</span>, <span class="number">0xea</span>, <span class="number">0x64</span>, <span class="number">0xa0</span>, <span class="number">0xbe</span>, <span class="number">0xac</span>, <span class="number">0xa</span>, <span class="number">0xd4</span>, <span class="number">0x30</span>, <span class="number">0x58</span>, <span class="number">0x4d</span>, <span class="number">0x74</span>, <span class="number">0x48</span>, <span class="number">0x90</span>, <span class="number">0x18</span>, <span class="number">0xea</span>,</span><br><span class="line">    <span class="number">0x10</span>, <span class="number">0xc0</span>, <span class="number">0x0</span>, <span class="number">0x5</span>, <span class="number">0xa0</span>, <span class="number">0x4e</span>, <span class="number">0xdd</span>, <span class="number">0xec</span>, <span class="number">0xa8</span>, <span class="number">0x10</span>, <span class="number">0xe0</span>, <span class="number">0x20</span>, <span class="number">0x42</span>, <span class="number">0x9</span>, <span class="number">0x64</span>, <span class="number">0x40</span>, <span class="number">0x94</span>, <span class="number">0x93</span>, <span class="number">0x90</span>, <span class="number">0x61</span>,</span><br><span class="line">    <span class="number">0x2</span>, <span class="number">0x3a</span>, <span class="number">0x39</span>, <span class="number">0xdf</span>, <span class="number">0x9a</span>, <span class="number">0x3c</span>, <span class="number">0x29</span>, <span class="number">0x6f</span>, <span class="number">0xe7</span>, <span class="number">0x10</span>, <span class="number">0xb3</span>, <span class="number">0x4b</span>, <span class="number">0xd3</span>, <span class="number">0x9d</span>, <span class="number">0xb2</span>, <span class="number">0x5b</span>, <span class="number">0x7</span>, <span class="number">0x84</span>, <span class="number">0xf0</span>,</span><br><span class="line">    <span class="number">0x3b</span>, <span class="number">0xbe</span>, <span class="number">0xce</span>, <span class="number">0xb6</span>, <span class="number">0xbc</span>, <span class="number">0xa</span>, <span class="number">0x48</span>, <span class="number">0xb8</span>, <span class="number">0x63</span>, <span class="number">0x48</span>, <span class="number">0xfa</span>, <span class="number">0x68</span>, <span class="number">0x74</span>, <span class="number">0xe4</span>, <span class="number">0xf8</span>, <span class="number">0xac</span>, <span class="number">0x16</span>, <span class="number">0x97</span>, <span class="number">0x8e</span>,</span><br><span class="line">    <span class="number">0x2a</span>, <span class="number">0xe9</span>, <span class="number">0x4c</span>, <span class="number">0x2c</span>, <span class="number">0xeb</span>, <span class="number">0x68</span>, <span class="number">0x82</span>, <span class="number">0xb8</span>, <span class="number">0x24</span>, <span class="number">0x92</span>, <span class="number">0x6</span>, <span class="number">0xb9</span>, <span class="number">0xa2</span>, <span class="number">0xf0</span>, <span class="number">0x90</span>, <span class="number">0xea</span>, <span class="number">0xaa</span>, <span class="number">0xe4</span>, <span class="number">0xa</span>,</span><br><span class="line">    <span class="number">0x7b</span>, <span class="number">0x40</span>, <span class="number">0x5c</span>, <span class="number">0xfc</span>, <span class="number">0xbe</span>, <span class="number">0x54</span>, <span class="number">0x90</span>, <span class="number">0x81</span>, <span class="number">0x44</span>, <span class="number">0xf4</span>, <span class="number">0x37</span>, <span class="number">0xa0</span>, <span class="number">0x93</span>, <span class="number">0x65</span>, <span class="number">0x20</span>, <span class="number">0x16</span>, <span class="number">0x82</span>, <span class="number">0xcd</span>, <span class="number">0xae</span>,</span><br><span class="line">    <span class="number">0x24</span>, <span class="number">0x0</span>, <span class="number">0x29</span>, <span class="number">0xa0</span>, <span class="number">0x8b</span>, <span class="number">0x44</span>, <span class="number">0xfb</span>, <span class="number">0xe4</span>, <span class="number">0x58</span>, <span class="number">0xd5</span>, <span class="number">0xc0</span>, <span class="number">0x9c</span>, <span class="number">0x84</span>, <span class="number">0xd</span>, <span class="number">0x8d</span>, <span class="number">0xcf</span>, <span class="number">0x50</span>, <span class="number">0x28</span>, <span class="number">0x8</span>, <span class="number">0x8c</span>,</span><br><span class="line">    <span class="number">0xbe</span>, <span class="number">0x6c</span>, <span class="number">0xbc</span>, <span class="number">0x18</span>, <span class="number">0x8</span>, <span class="number">0x9</span>, <span class="number">0x59</span>, <span class="number">0xad</span>, <span class="number">0xcc</span>, <span class="number">0xf8</span>, <span class="number">0x1c</span>, <span class="number">0x78</span>, <span class="number">0x28</span>, <span class="number">0xbd</span>, <span class="number">0x5a</span>, <span class="number">0x31</span>, <span class="number">0xde</span>, <span class="number">0x0</span>, <span class="number">0x6c</span>, <span class="number">0x61</span>,</span><br><span class="line">    <span class="number">0x8b</span>, <span class="number">0x23</span>, <span class="number">0xb0</span>, <span class="number">0x85</span>, <span class="number">0x8d</span>, <span class="number">0x14</span>, <span class="number">0x3f</span>, <span class="number">0x98</span>, <span class="number">0x68</span>, <span class="number">0x3</span>, <span class="number">0xac</span>, <span class="number">0xc0</span>, <span class="number">0x73</span>, <span class="number">0x96</span>, <span class="number">0x20</span>, <span class="number">0x3a</span>, <span class="number">0xc2</span>, <span class="number">0x6c</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x31</span>, <span class="number">0x70</span>, <span class="number">0x98</span>, <span class="number">0x2e</span>, <span class="number">0x90</span>, <span class="number">0x16</span>, <span class="number">0xba</span>, <span class="number">0xfe</span>, <span class="number">0xc3</span>, <span class="number">0x81</span>, <span class="number">0x98</span>, <span class="number">0x77</span>, <span class="number">0xc4</span>, <span class="number">0xbb</span>, <span class="number">0x73</span>, <span class="number">0xf8</span>, <span class="number">0x3a</span>, <span class="number">0x11</span>, <span class="number">0x70</span>,</span><br><span class="line">    <span class="number">0x11</span>, <span class="number">0x7c</span>, <span class="number">0x1d</span>, <span class="number">0x98</span>, <span class="number">0x84</span>, <span class="number">0xc</span>, <span class="number">0x1f</span>, <span class="number">0x5a</span>, <span class="number">0x4d</span>, <span class="number">0xb3</span>, <span class="number">0xc0</span>, <span class="number">0x31</span>, <span class="number">0xb0</span>, <span class="number">0x21</span>, <span class="number">0x4c</span>, <span class="number">0x9c</span>, <span class="number">0x20</span>, <span class="number">0xe6</span>, <span class="number">0x6c</span>,</span><br><span class="line">    <span class="number">0x89</span>, <span class="number">0xc0</span>, <span class="number">0x79</span>, <span class="number">0xbf</span>, <span class="number">0x35</span>, <span class="number">0xa8</span>, <span class="number">0x66</span>, <span class="number">0x89</span>, <span class="number">0xc8</span>, <span class="number">0x22</span>, <span class="number">0x76</span>, <span class="number">0xc0</span>, <span class="number">0x8a</span>, <span class="number">0xc1</span>, <span class="number">0x70</span>, <span class="number">0xd8</span>, <span class="number">0x2d</span>, <span class="number">0xd9</span>, <span class="number">0xb6</span>,</span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x38</span>, <span class="number">0x8c</span>, <span class="number">0x80</span>, <span class="number">0xd0</span>, <span class="number">0x2e</span>, <span class="number">0x23</span>, <span class="number">0x40</span>, <span class="number">0xab</span>, <span class="number">0x7b</span>, <span class="number">0xc7</span>, <span class="number">0xdd</span>, <span class="number">0x34</span>, <span class="number">0x4b</span>, <span class="number">0xf4</span>, <span class="number">0xc0</span>, <span class="number">0x3f</span>, <span class="number">0xb2</span>, <span class="number">0xcd</span>,</span><br><span class="line">    <span class="number">0x61</span>, <span class="number">0x91</span>, <span class="number">0x30</span>, <span class="number">0xd8</span>, <span class="number">0xbc</span>, <span class="number">0xe4</span>, <span class="number">0xcb</span>, <span class="number">0x48</span>, <span class="number">0xa5</span>, <span class="number">0xcc</span>, <span class="number">0x82</span>, <span class="number">0xb2</span>, <span class="number">0x18</span>, <span class="number">0xf3</span>, <span class="number">0x1e</span>, <span class="number">0x96</span>, <span class="number">0x71</span>, <span class="number">0x59</span>, <span class="number">0x1e</span>,</span><br><span class="line">    <span class="number">0x9c</span>, <span class="number">0x68</span>, <span class="number">0x3b</span>, <span class="number">0xe8</span>, <span class="number">0x41</span>, <span class="number">0xa8</span>, <span class="number">0x8</span>, <span class="number">0x75</span>, <span class="number">0xd0</span>, <span class="number">0x84</span>, <span class="number">0xf8</span>, <span class="number">0xd6</span>, <span class="number">0xc</span>, <span class="number">0xdd</span>, <span class="number">0x40</span>, <span class="number">0x6b</span>, <span class="number">0x33</span>, <span class="number">0xa4</span>, <span class="number">0x7c</span>,</span><br><span class="line">    <span class="number">0x20</span>, <span class="number">0x96</span>, <span class="number">0x4f</span>, <span class="number">0x2f</span>, <span class="number">0xb8</span>, <span class="number">0x12</span>, <span class="number">0xc8</span>, <span class="number">0x16</span>, <span class="number">0x40</span>, <span class="number">0xe8</span>, <span class="number">0xa0</span>, <span class="number">0x2d</span>, <span class="number">0x70</span>, <span class="number">0x10</span>, <span class="number">0xbd</span>, <span class="number">0x60</span>, <span class="number">0x4c</span>, <span class="number">0xdc</span>, <span class="number">0x39</span>,</span><br><span class="line">    <span class="number">0xab</span>, <span class="number">0x59</span>, <span class="number">0x61</span>, <span class="number">0x71</span>, <span class="number">0xd0</span>, <span class="number">0xc0</span>, <span class="number">0xeb</span>, <span class="number">0xf0</span>, <span class="number">0xfe</span>, <span class="number">0xaa</span>, <span class="number">0xd4</span>, <span class="number">0x5c</span>, <span class="number">0xfc</span>, <span class="number">0x93</span>, <span class="number">0xf8</span>, <span class="number">0xf9</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x18</span>, <span class="number">0xe6</span>, <span class="number">0x86</span>, <span class="number">0x7e</span>, <span class="number">0x3</span>, <span class="number">0x50</span>, <span class="number">0x17</span>, <span class="number">0xb8</span>, <span class="number">0xab</span>, <span class="number">0x10</span>, <span class="number">0x82</span>, <span class="number">0x42</span>, <span class="number">0x9</span>, <span class="number">0x44</span>, <span class="number">0xe0</span>, <span class="number">0x96</span>, <span class="number">0xca</span>, <span class="number">0xd4</span>, <span class="number">0xa</span>, <span class="number">0x46</span>,</span><br><span class="line">    <span class="number">0x9c</span>, <span class="number">0x6b</span>, <span class="number">0xd2</span>, <span class="number">0x92</span>, <span class="number">0xcd</span>, <span class="number">0x90</span>, <span class="number">0x40</span>, <span class="number">0x2e</span>, <span class="number">0x6b</span>, <span class="number">0x10</span>, <span class="number">0x53</span>, <span class="number">0x60</span>, <span class="number">0xa7</span>, <span class="number">0x97</span>, <span class="number">0x63</span>, <span class="number">0xda</span>, <span class="number">0x82</span>, <span class="number">0x29</span>, <span class="number">0xc6</span>,</span><br><span class="line">    <span class="number">0x0</span>, <span class="number">0x70</span>, <span class="number">0xac</span>, <span class="number">0xbc</span>, <span class="number">0x4a</span>, <span class="number">0x40</span>, <span class="number">0x4</span>, <span class="number">0xe0</span>, <span class="number">0x74</span>, <span class="number">0xb0</span>, <span class="number">0xb0</span>, <span class="number">0x80</span>, <span class="number">0x30</span>, <span class="number">0xdc</span>, <span class="number">0x70</span>, <span class="number">0x6c</span>, <span class="number">0x40</span>, <span class="number">0x7e</span>, <span class="number">0xd0</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0x9d</span>, <span class="number">0x2d</span>, <span class="number">0x87</span>, <span class="number">0xb8</span>, <span class="number">0xc5</span>, <span class="number">0x64</span>, <span class="number">0xd</span>, <span class="number">0xdc</span>, <span class="number">0x5e</span>, <span class="number">0x60</span>, <span class="number">0xd7</span>, <span class="number">0xc</span>, <span class="number">0xdb</span>, <span class="number">0x0</span>, <span class="number">0x80</span>, <span class="number">0x21</span>, <span class="number">0x17</span>, <span class="number">0xdd</span>, <span class="number">0xb8</span>,</span><br><span class="line">    <span class="number">0x20</span>, <span class="number">0xfd</span>, <span class="number">0x8f</span>, <span class="number">0x0</span>, <span class="number">0xb8</span>, <span class="number">0x18</span>, <span class="number">0x1c</span>, <span class="number">0x4</span>, <span class="number">0xff</span>, <span class="number">0xb1</span>, <span class="number">0x68</span>, <span class="number">0xc4</span>, <span class="number">0xe9</span>, <span class="number">0xab</span>, <span class="number">0x84</span>, <span class="number">0x6b</span>, <span class="number">0x82</span>, <span class="number">0x80</span>, <span class="number">0x14</span>,</span><br><span class="line">    <span class="number">0x44</span>, <span class="number">0xc8</span>, <span class="number">0x6a</span>, <span class="number">0x21</span>, <span class="number">0xfa</span>, <span class="number">0x34</span>, <span class="number">0xa6</span>, <span class="number">0xf9</span>, <span class="number">0x5b</span>, <span class="number">0xd8</span>, <span class="number">0x5e</span>, <span class="number">0xf0</span>, <span class="number">0xd3</span>, <span class="number">0xef</span>, <span class="number">0x92</span>, <span class="number">0xf6</span>, <span class="number">0xf3</span>, <span class="number">0xc6</span>, <span class="number">0x7e</span>,</span><br><span class="line">    <span class="number">0xe3</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>, <span class="number">0xe5</span>, <span class="number">0xf6</span>, <span class="number">0xbf</span>, <span class="number">0x90</span>, <span class="number">0xbe</span>, <span class="number">0xe4</span>, <span class="number">0x30</span>, <span class="number">0xa8</span>, <span class="number">0x3b</span>, <span class="number">0x8c</span>, <span class="number">0xc8</span>, <span class="number">0xec</span>, <span class="number">0x36</span>, <span class="number">0xec</span>, <span class="number">0x0</span>, <span class="number">0xb0</span>,</span><br><span class="line">    <span class="number">0x4</span>, <span class="number">0xf8</span>, <span class="number">0xb8</span>, <span class="number">0x4f</span>, <span class="number">0x40</span>, <span class="number">0xc2</span>, <span class="number">0xf8</span>, <span class="number">0x7c</span>, <span class="number">0xd1</span>, <span class="number">0x7b</span>, <span class="number">0x30</span>, <span class="number">0xb4</span>, <span class="number">0x88</span>, <span class="number">0x6b</span>, <span class="number">0xa0</span>, <span class="number">0x0</span>, <span class="number">0x70</span>, <span class="number">0x59</span>, <span class="number">0x14</span>,</span><br><span class="line">    <span class="number">0x85</span>, <span class="number">0xd7</span>, <span class="number">0x8c</span>, <span class="number">0x44</span>, <span class="number">0x29</span>, <span class="number">0xa3</span>, <span class="number">0xe9</span>, <span class="number">0xc0</span>, <span class="number">0x2f</span>, <span class="number">0xa6</span>, <span class="number">0xe4</span>, <span class="number">0xe6</span>, <span class="number">0xfb</span>, <span class="number">0xb9</span>, <span class="number">0xbc</span>, <span class="number">0xb4</span>, <span class="number">0x36</span>, <span class="number">0xd4</span>, <span class="number">0x9c</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0x28</span>, <span class="number">0x64</span>, <span class="number">0x4</span>, <span class="number">0x84</span>, <span class="number">0x10</span>, <span class="number">0x35</span>, <span class="number">0x60</span>, <span class="number">0xc8</span>, <span class="number">0x1a</span>, <span class="number">0xc0</span>, <span class="number">0xed</span>, <span class="number">0x13</span>, <span class="number">0x5f</span>, <span class="number">0x9a</span>, <span class="number">0xf0</span>, <span class="number">0xea</span>, <span class="number">0x60</span>, <span class="number">0xdb</span>,</span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x4b</span>, <span class="number">0xef</span>, <span class="number">0xce</span>, <span class="number">0x9f</span>, <span class="number">0x70</span>, <span class="number">0xff</span>, <span class="number">0x0</span>, <span class="number">0x23</span>, <span class="number">0x9d</span>, <span class="number">0x8a</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0xd0</span>, <span class="number">0x62</span>, <span class="number">0x68</span>, <span class="number">0x2f</span>, <span class="number">0x80</span>, <span class="number">0x75</span>,</span><br><span class="line">    <span class="number">0x74</span>, <span class="number">0xd</span>, <span class="number">0xde</span>, <span class="number">0x0</span>, <span class="number">0x60</span>, <span class="number">0x31</span>, <span class="number">0x40</span>, <span class="number">0xc3</span>, <span class="number">0x90</span>, <span class="number">0x94</span>, <span class="number">0x86</span>, <span class="number">0x31</span>, <span class="number">0xff</span>, <span class="number">0x22</span>, <span class="number">0x78</span>, <span class="number">0x34</span>, <span class="number">0x20</span>, <span class="number">0x89</span>, <span class="number">0x37</span>,</span><br><span class="line">    <span class="number">0x31</span>, <span class="number">0x83</span>, <span class="number">0x2e</span>, <span class="number">0xb1</span>, <span class="number">0x71</span>, <span class="number">0x40</span>, <span class="number">0x9</span>, <span class="number">0xc0</span>, <span class="number">0xc4</span>, <span class="number">0x4e</span>, <span class="number">0xe2</span>, <span class="number">0x52</span>, <span class="number">0x5e</span>, <span class="number">0x90</span>, <span class="number">0xa0</span>, <span class="number">0x26</span>, <span class="number">0x57</span>, <span class="number">0x47</span>, <span class="number">0x4e</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0x54</span>, <span class="number">0xbc</span>, <span class="number">0x52</span>, <span class="number">0x43</span>, <span class="number">0xca</span>, <span class="number">0xd1</span>, <span class="number">0x90</span>, <span class="number">0x20</span>, <span class="number">0x24</span>, <span class="number">0x19</span>, <span class="number">0x8c</span>, <span class="number">0x5e</span>, <span class="number">0x94</span>, <span class="number">0xa8</span>, <span class="number">0xc</span>, <span class="number">0xa8</span>, <span class="number">0xc4</span>, <span class="number">0xdd</span>,</span><br><span class="line">    <span class="number">0x91</span>, <span class="number">0x47</span>, <span class="number">0x80</span>, <span class="number">0x60</span>, <span class="number">0x38</span>, <span class="number">0x40</span>, <span class="number">0xb8</span>, <span class="number">0x65</span>, <span class="number">0x70</span>, <span class="number">0x20</span>, <span class="number">0x91</span>, <span class="number">0x48</span>, <span class="number">0x47</span>, <span class="number">0x0</span>, <span class="number">0x6c</span>, <span class="number">0x70</span>, <span class="number">0xa6</span>, <span class="number">0xfe</span>, <span class="number">0x24</span>,</span><br><span class="line">    <span class="number">0x44</span>, <span class="number">0x0</span>, <span class="number">0x84</span>, <span class="number">0xbc</span>, <span class="number">0xd6</span>, <span class="number">0x7d</span>, <span class="number">0x3c</span>, <span class="number">0xc8</span>, <span class="number">0x71</span>, <span class="number">0x2e</span>, <span class="number">0x1c</span>, <span class="number">0x95</span>, <span class="number">0x93</span>, <span class="number">0x30</span>, <span class="number">0xa9</span>, <span class="number">0x8a</span>, <span class="number">0xef</span>, <span class="number">0x65</span>, <span class="number">0xb8</span>,</span><br><span class="line">    <span class="number">0x49</span>, <span class="number">0xc0</span>, <span class="number">0x20</span>, <span class="number">0x33</span>, <span class="number">0x68</span>, <span class="number">0x70</span>, <span class="number">0x68</span>, <span class="number">0x10</span>, <span class="number">0xb0</span>, <span class="number">0x6e</span>, <span class="number">0xea</span>, <span class="number">0x8</span>, <span class="number">0xdb</span>, <span class="number">0x62</span>, <span class="number">0xc0</span>, <span class="number">0x8b</span>, <span class="number">0x66</span>, <span class="number">0x3e</span>, <span class="number">0x50</span>,</span><br><span class="line">    <span class="number">0x60</span>, <span class="number">0x79</span>, <span class="number">0x18</span>, <span class="number">0xd4</span>, <span class="number">0x69</span>, <span class="number">0x96</span>, <span class="number">0x1c</span>, <span class="number">0x3f</span>, <span class="number">0x1a</span>, <span class="number">0x50</span>, <span class="number">0x6c</span>, <span class="number">0x57</span>, <span class="number">0x0</span>, <span class="number">0x4</span>, <span class="number">0xd8</span>, <span class="number">0x7c</span>, <span class="number">0x61</span>, <span class="number">0x7f</span>, <span class="number">0xa4</span>, <span class="number">0x4</span>,</span><br><span class="line">    <span class="number">0x7</span>, <span class="number">0x74</span>, <span class="number">0x50</span>, <span class="number">0x77</span>, <span class="number">0x29</span>, <span class="number">0xa0</span>, <span class="number">0x8c</span>, <span class="number">0xe0</span>, <span class="number">0x5c</span>, <span class="number">0x4</span>, <span class="number">0xf8</span>, <span class="number">0xe0</span>, <span class="number">0xc3</span>, <span class="number">0xde</span>, <span class="number">0x2c</span>, <span class="number">0xd2</span>, <span class="number">0x9e</span>, <span class="number">0xf1</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x5c</span>, <span class="number">0x50</span>, <span class="number">0xdc</span>, <span class="number">0x2d</span>, <span class="number">0x0</span>, <span class="number">0xc1</span>, <span class="number">0xd0</span>, <span class="number">0xd0</span>, <span class="number">0x7</span>, <span class="number">0x14</span>, <span class="number">0x6c</span>, <span class="number">0xfd</span>, <span class="number">0x9e</span>, <span class="number">0x6e</span>, <span class="number">0xc9</span>, <span class="number">0x5e</span>, <span class="number">0x30</span>, <span class="number">0xa8</span>, <span class="number">0x3a</span>,</span><br><span class="line">    <span class="number">0x21</span>, <span class="number">0xa8</span>, <span class="number">0x95</span>, <span class="number">0x58</span>, <span class="number">0x87</span>, <span class="number">0x40</span>, <span class="number">0x75</span>, <span class="number">0x6c</span>, <span class="number">0xc</span>, <span class="number">0x68</span>, <span class="number">0xd8</span>, <span class="number">0x9e</span>, <span class="number">0xe6</span>, <span class="number">0xc2</span>, <span class="number">0x70</span>, <span class="number">0x79</span>, <span class="number">0x0</span>, <span class="number">0x67</span>, <span class="number">0x29</span>,</span><br><span class="line">    <span class="number">0xfc</span>, <span class="number">0x1</span>, <span class="number">0xf2</span>, <span class="number">0x16</span>, <span class="number">0xec</span>, <span class="number">0xfa</span>, <span class="number">0x60</span>, <span class="number">0xaf</span>, <span class="number">0x60</span>, <span class="number">0x1d</span>, <span class="number">0xec</span>, <span class="number">0xb8</span>, <span class="number">0xfc</span>, <span class="number">0x9d</span>, <span class="number">0x48</span>, <span class="number">0x60</span>, <span class="number">0xe8</span>, <span class="number">0xac</span>, <span class="number">0x1e</span>,</span><br><span class="line">    <span class="number">0x88</span>, <span class="number">0x97</span>, <span class="number">0x20</span>, <span class="number">0x3d</span>, <span class="number">0x80</span>, <span class="number">0x50</span>, <span class="number">0x10</span>, <span class="number">0xc6</span>, <span class="number">0x98</span>, <span class="number">0x60</span>, <span class="number">0xeb</span>, <span class="number">0x90</span>, <span class="number">0x46</span>, <span class="number">0x12</span>, <span class="number">0x0</span>, <span class="number">0x20</span>, <span class="number">0x60</span>, <span class="number">0x8</span>, <span class="number">0x54</span>,</span><br><span class="line">    <span class="number">0xec</span>, <span class="number">0x7b</span>, <span class="number">0x0</span>, <span class="number">0x2</span>, <span class="number">0xb0</span>, <span class="number">0x7</span>, <span class="number">0xf0</span>, <span class="number">0x9c</span>, <span class="number">0x58</span>, <span class="number">0xc8</span>, <span class="number">0xd8</span>, <span class="number">0xc</span>, <span class="number">0x9</span>, <span class="number">0xb8</span>, <span class="number">0x39</span>, <span class="number">0x68</span>, <span class="number">0xa0</span>, <span class="number">0x10</span>, <span class="number">0xb6</span>, <span class="number">0x63</span>,</span><br><span class="line">    <span class="number">0x0</span>, <span class="number">0x38</span>, <span class="number">0xc8</span>, <span class="number">0x80</span>, <span class="number">0xdf</span>, <span class="number">0xe6</span>, <span class="number">0x3a</span>, <span class="number">0xdc</span>, <span class="number">0x58</span>, <span class="number">0x58</span>, <span class="number">0x94</span>, <span class="number">0x5c</span>, <span class="number">0x63</span>, <span class="number">0x60</span>, <span class="number">0x8c</span>, <span class="number">0x93</span>, <span class="number">0xc1</span>, <span class="number">0xd0</span>, <span class="number">0xe0</span>,</span><br><span class="line">    <span class="number">0x44</span>, <span class="number">0x56</span>, <span class="number">0x60</span>, <span class="number">0xc8</span>, <span class="number">0xbb</span>, <span class="number">0x7a</span>, <span class="number">0x7e</span>, <span class="number">0x73</span>, <span class="number">0x1b</span>, <span class="number">0xab</span>, <span class="number">0xb8</span>, <span class="number">0xb</span>, <span class="number">0x8c</span>, <span class="number">0x23</span>, <span class="number">0x1c</span>, <span class="number">0xf0</span>, <span class="number">0x18</span>, <span class="number">0x7b</span>, <span class="number">0xf</span>,</span><br><span class="line">    <span class="number">0x93</span>, <span class="number">0xfa</span>, <span class="number">0x66</span>, <span class="number">0xe0</span>, <span class="number">0x4c</span>, <span class="number">0x0</span>, <span class="number">0xe8</span>, <span class="number">0xb4</span>, <span class="number">0x31</span>, <span class="number">0x30</span>, <span class="number">0xf0</span>, <span class="number">0x82</span>, <span class="number">0x18</span>, <span class="number">0x40</span>, <span class="number">0xfe</span>, <span class="number">0x8c</span>, <span class="number">0xf0</span>, <span class="number">0xfc</span>, <span class="number">0x1f</span>,</span><br><span class="line">    <span class="number">0x71</span>, <span class="number">0x8c</span>, <span class="number">0x7e</span>, <span class="number">0xc8</span>, <span class="number">0x80</span>, <span class="number">0xce</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0xa0</span>, <span class="number">0xd5</span>, <span class="number">0x23</span>, <span class="number">0x27</span>, <span class="number">0x4</span>, <span class="number">0x0</span>, <span class="number">0xed</span>, <span class="number">0xd9</span>, <span class="number">0x90</span>, <span class="number">0x82</span>, <span class="number">0x6c</span>, <span class="number">0x7d</span>,</span><br><span class="line">    <span class="number">0x4</span>, <span class="number">0x0</span>, <span class="number">0xc0</span>, <span class="number">0x12</span>, <span class="number">0xd3</span>, <span class="number">0x18</span>, <span class="number">0x5d</span>, <span class="number">0x86</span>, <span class="number">0xe0</span>, <span class="number">0x53</span>, <span class="number">0x41</span>, <span class="number">0x9f</span>, <span class="number">0xd8</span>, <span class="number">0xdd</span>, <span class="number">0xb</span>, <span class="number">0xe0</span>, <span class="number">0xe6</span>, <span class="number">0xef</span>, <span class="number">0x82</span>, <span class="number">0x64</span>,</span><br><span class="line">    <span class="number">0x77</span>, <span class="number">0x53</span>, <span class="number">0x7b</span>, <span class="number">0x5b</span>, <span class="number">0xdc</span>, <span class="number">0x14</span>, <span class="number">0x84</span>, <span class="number">0x56</span>, <span class="number">0x80</span>, <span class="number">0x20</span>, <span class="number">0xa8</span>, <span class="number">0x39</span>, <span class="number">0x50</span>, <span class="number">0xe8</span>, <span class="number">0x60</span>, <span class="number">0x58</span>, <span class="number">0x46</span>, <span class="number">0xf0</span>, <span class="number">0xf2</span>,</span><br><span class="line">    <span class="number">0x6</span>, <span class="number">0xc0</span>, <span class="number">0xe6</span>, <span class="number">0x4</span>, <span class="number">0xd0</span>, <span class="number">0xbe</span>, <span class="number">0x79</span>, <span class="number">0xcd</span>, <span class="number">0xa8</span>, <span class="number">0x3e</span>, <span class="number">0xa0</span>, <span class="number">0x1e</span>, <span class="number">0x89</span>, <span class="number">0x24</span>, <span class="number">0x38</span>, <span class="number">0xfb</span>, <span class="number">0x3a</span>, <span class="number">0x58</span>, <span class="number">0x7e</span>,</span><br><span class="line">    <span class="number">0x26</span>, <span class="number">0xa4</span>, <span class="number">0x0</span>, <span class="number">0x38</span>, <span class="number">0x98</span>, <span class="number">0x83</span>, <span class="number">0xe8</span>, <span class="number">0x64</span>, <span class="number">0x78</span>, <span class="number">0xb0</span>, <span class="number">0xd5</span>, <span class="number">0xf9</span>, <span class="number">0xf6</span>, <span class="number">0x16</span>, <span class="number">0x63</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>, <span class="number">0xa0</span>, <span class="number">0x60</span>,</span><br><span class="line">    <span class="number">0xf5</span>, <span class="number">0x24</span>, <span class="number">0xf6</span>, <span class="number">0xe0</span>, <span class="number">0x30</span>, <span class="number">0xe4</span>, <span class="number">0xa4</span>, <span class="number">0x26</span>, <span class="number">0x10</span>, <span class="number">0xbf</span>, <span class="number">0x9d</span>, <span class="number">0xdc</span>, <span class="number">0xf4</span>, <span class="number">0xd0</span>, <span class="number">0x38</span>, <span class="number">0xcd</span>, <span class="number">0xa</span>, <span class="number">0x26</span>, <span class="number">0x29</span>,</span><br><span class="line">    <span class="number">0xc</span>, <span class="number">0xd0</span>, <span class="number">0x78</span>, <span class="number">0xe3</span>, <span class="number">0xb0</span>, <span class="number">0x9a</span>, <span class="number">0x73</span>, <span class="number">0x80</span>, <span class="number">0x43</span>, <span class="number">0xa7</span>, <span class="number">0xa3</span>, <span class="number">0x9c</span>, <span class="number">0xc5</span>, <span class="number">0x7c</span>, <span class="number">0x29</span>, <span class="number">0x4a</span>, <span class="number">0x70</span>, <span class="number">0x28</span>, <span class="number">0xac</span>,</span><br><span class="line">    <span class="number">0x87</span>, <span class="number">0xf1</span>, <span class="number">0x50</span>, <span class="number">0xd4</span>, <span class="number">0x11</span>, <span class="number">0xe8</span>, <span class="number">0x32</span>, <span class="number">0xb8</span>, <span class="number">0xb4</span>, <span class="number">0x4c</span>, <span class="number">0x15</span>, <span class="number">0xb4</span>, <span class="number">0x7c</span>, <span class="number">0x51</span>, <span class="number">0x29</span>, <span class="number">0xac</span>, <span class="number">0x90</span>, <span class="number">0x9e</span>, <span class="number">0x12</span>,</span><br><span class="line">    <span class="number">0xd8</span>, <span class="number">0xbe</span>, <span class="number">0xbf</span>, <span class="number">0x10</span>, <span class="number">0x4</span>, <span class="number">0x84</span>, <span class="number">0xe6</span>, <span class="number">0x88</span>, <span class="number">0xdc</span>, <span class="number">0xdb</span>, <span class="number">0xe0</span>, <span class="number">0x0</span>, <span class="number">0x49</span>, <span class="number">0x60</span>, <span class="number">0xc4</span>, <span class="number">0x10</span>, <span class="number">0x72</span>, <span class="number">0x92</span>, <span class="number">0xee</span>,</span><br><span class="line">    <span class="number">0x8c</span>, <span class="number">0x16</span>, <span class="number">0x75</span>, <span class="number">0x6e</span>, <span class="number">0x7e</span>, <span class="number">0x40</span>, <span class="number">0x8</span>, <span class="number">0x94</span>, <span class="number">0x41</span>, <span class="number">0x40</span>, <span class="number">0x60</span>, <span class="number">0x88</span>, <span class="number">0xb</span>, <span class="number">0x0</span>, <span class="number">0x5a</span>, <span class="number">0x2c</span>, <span class="number">0x2e</span>, <span class="number">0xa</span>, <span class="number">0xa</span>, <span class="number">0x4e</span>,</span><br><span class="line">    <span class="number">0x30</span>, <span class="number">0x2a</span>, <span class="number">0x88</span>, <span class="number">0x4e</span>, <span class="number">0x11</span>, <span class="number">0x23</span>, <span class="number">0xbe</span>, <span class="number">0x70</span>, <span class="number">0x80</span>, <span class="number">0xed</span>, <span class="number">0x50</span>, <span class="number">0xb9</span>, <span class="number">0xbb</span>, <span class="number">0x38</span>, <span class="number">0x50</span>, <span class="number">0x1c</span>, <span class="number">0x6c</span>, <span class="number">0x23</span>, <span class="number">0x20</span>,</span><br><span class="line">    <span class="number">0xca</span>, <span class="number">0xa2</span>, <span class="number">0xe6</span>, <span class="number">0x70</span>, <span class="number">0xf8</span>, <span class="number">0x93</span>, <span class="number">0x45</span>, <span class="number">0x80</span>, <span class="number">0x65</span>, <span class="number">0x5f</span>, <span class="number">0x7b</span>, <span class="number">0xcc</span>, <span class="number">0xa0</span>, <span class="number">0xdc</span>, <span class="number">0x30</span>, <span class="number">0xee</span>, <span class="number">0x56</span>, <span class="number">0x86</span>, <span class="number">0xaf</span>,</span><br><span class="line">    <span class="number">0x10</span>, <span class="number">0xfd</span>, <span class="number">0x79</span>, <span class="number">0xdd</span>, <span class="number">0xec</span>, <span class="number">0x91</span>, <span class="number">0x18</span>, <span class="number">0xb0</span>, <span class="number">0x2c</span>, <span class="number">0xa8</span>, <span class="number">0xc0</span>, <span class="number">0x38</span>, <span class="number">0xf1</span>, <span class="number">0x1f</span>, <span class="number">0x80</span>, <span class="number">0x15</span>, <span class="number">0x62</span>, <span class="number">0x29</span>, <span class="number">0x60</span>,</span><br><span class="line">    <span class="number">0xea</span>, <span class="number">0x90</span>, <span class="number">0x97</span>, <span class="number">0x86</span>, <span class="number">0x61</span>, <span class="number">0xe2</span>, <span class="number">0x7c</span>, <span class="number">0x43</span>, <span class="number">0xd5</span>, <span class="number">0xe</span>, <span class="number">0xa8</span>, <span class="number">0x0</span>, <span class="number">0xe4</span>, <span class="number">0x8c</span>, <span class="number">0x10</span>, <span class="number">0xc6</span>, <span class="number">0x10</span>, <span class="number">0x34</span>, <span class="number">0x44</span>,</span><br><span class="line">    <span class="number">0xd8</span>, <span class="number">0xf2</span>, <span class="number">0x18</span>, <span class="number">0xc0</span>, <span class="number">0xd9</span>, <span class="number">0x5c</span>, <span class="number">0xac</span>, <span class="number">0xb6</span>, <span class="number">0xe5</span>, <span class="number">0xd</span>, <span class="number">0xf</span>, <span class="number">0xdd</span>, <span class="number">0x94</span>, <span class="number">0x88</span>, <span class="number">0xa7</span>, <span class="number">0x58</span>, <span class="number">0xfe</span>, <span class="number">0xe2</span>, <span class="number">0xd5</span>,</span><br><span class="line">    <span class="number">0xb0</span>, <span class="number">0x68</span>, <span class="number">0x8a</span>, <span class="number">0x14</span>, <span class="number">0x98</span>, <span class="number">0xa</span>, <span class="number">0x46</span>, <span class="number">0x16</span>, <span class="number">0xe6</span>, <span class="number">0x60</span>, <span class="number">0x3f</span>, <span class="number">0xc8</span>, <span class="number">0x48</span>, <span class="number">0xa4</span>, <span class="number">0x3a</span>, <span class="number">0x3d</span>, <span class="number">0xd2</span>, <span class="number">0x18</span>, <span class="number">0xd6</span>,</span><br><span class="line">    <span class="number">0x3f</span>, <span class="number">0xff</span>, <span class="number">0x24</span>, <span class="number">0x4d</span>, <span class="number">0x8a</span>, <span class="number">0x0</span>, <span class="number">0xac</span>, <span class="number">0x60</span>, <span class="number">0xf6</span>, <span class="number">0xb6</span>, <span class="number">0xe8</span>, <span class="number">0x0</span>, <span class="number">0xf8</span>, <span class="number">0xcc</span>, <span class="number">0xf8</span>, <span class="number">0x0</span>, <span class="number">0x74</span>, <span class="number">0xe</span>, <span class="number">0xfc</span>, <span class="number">0xc0</span>,</span><br><span class="line">    <span class="number">0xf8</span>, <span class="number">0x8b</span>, <span class="number">0xc8</span>, <span class="number">0x55</span>, <span class="number">0x5d</span>, <span class="number">0x1c</span>, <span class="number">0x20</span>, <span class="number">0x4b</span>, <span class="number">0xf8</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0xb0</span>, <span class="number">0x0</span>, <span class="number">0x4e</span>, <span class="number">0x9c</span>, <span class="number">0x89</span>, <span class="number">0x98</span>, <span class="number">0xda</span>, <span class="number">0x30</span>,</span><br><span class="line">    <span class="number">0x12</span>, <span class="number">0x4c</span>, <span class="number">0xcd</span>, <span class="number">0xda</span>, <span class="number">0xab</span>, <span class="number">0x3f</span>, <span class="number">0x50</span>, <span class="number">0x28</span>, <span class="number">0xe0</span>, <span class="number">0x0</span>, <span class="number">0x6</span>, <span class="number">0xf0</span>, <span class="number">0x57</span>, <span class="number">0x80</span>, <span class="number">0xf</span>, <span class="number">0xe9</span>, <span class="number">0x34</span>, <span class="number">0x44</span>, <span class="number">0x31</span>, <span class="number">0xf8</span>,</span><br><span class="line">    <span class="number">0x86</span>, <span class="number">0xc1</span>, <span class="number">0x2f</span>, <span class="number">0x0</span>, <span class="number">0x80</span>, <span class="number">0x1e</span>, <span class="number">0xc2</span>, <span class="number">0x60</span>, <span class="number">0xa7</span>, <span class="number">0xb6</span>, <span class="number">0xe0</span>, <span class="number">0x70</span>, <span class="number">0xca</span>, <span class="number">0xa1</span>, <span class="number">0xce</span>, <span class="number">0x4f</span>, <span class="number">0xbb</span>, <span class="number">0xb0</span>, <span class="number">0xc6</span>,</span><br><span class="line">    <span class="number">0xd4</span>, <span class="number">0x2c</span>, <span class="number">0xc6</span>, <span class="number">0x8b</span>, <span class="number">0x0</span>, <span class="number">0xb0</span>, <span class="number">0x10</span>, <span class="number">0xba</span>, <span class="number">0x8d</span>, <span class="number">0x8b</span>, <span class="number">0x18</span>, <span class="number">0xc</span>, <span class="number">0xfd</span>, <span class="number">0x59</span>, <span class="number">0xc3</span>, <span class="number">0xa0</span>, <span class="number">0xaf</span>, <span class="number">0x17</span>, <span class="number">0x82</span>,</span><br><span class="line">    <span class="number">0x61</span>, <span class="number">0xfe</span>, <span class="number">0x80</span>, <span class="number">0x60</span>, <span class="number">0xeb</span>, <span class="number">0xc0</span>, <span class="number">0x46</span>, <span class="number">0x90</span>, <span class="number">0x42</span>, <span class="number">0x40</span>, <span class="number">0xee</span>, <span class="number">0x48</span>, <span class="number">0xbc</span>, <span class="number">0x40</span>, <span class="number">0xd8</span>, <span class="number">0x58</span>, <span class="number">0x60</span>, <span class="number">0x50</span>, <span class="number">0x97</span>,</span><br><span class="line">    <span class="number">0x44</span>, <span class="number">0xd2</span>, <span class="number">0xe0</span>, <span class="number">0xa1</span>, <span class="number">0x4d</span>, <span class="number">0x16</span>, <span class="number">0x50</span>, <span class="number">0x84</span>, <span class="number">0xf0</span>, <span class="number">0x54</span>, <span class="number">0x15</span>, <span class="number">0x9</span>, <span class="number">0xad</span>, <span class="number">0xc</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x44</span>, <span class="number">0x70</span>, <span class="number">0xe0</span>,</span><br><span class="line">    <span class="number">0x51</span>, <span class="number">0xca</span>, <span class="number">0x34</span>, <span class="number">0x86</span>, <span class="number">0x88</span>, <span class="number">0x12</span>, <span class="number">0x14</span>, <span class="number">0xc7</span>, <span class="number">0x20</span>, <span class="number">0xf4</span>, <span class="number">0xf3</span>, <span class="number">0x6b</span>, <span class="number">0x6c</span>, <span class="number">0x10</span>, <span class="number">0xdc</span>, <span class="number">0x54</span>, <span class="number">0x48</span>, <span class="number">0xec</span>, <span class="number">0x7d</span>,</span><br><span class="line">    <span class="number">0x94</span>, <span class="number">0xb8</span>, <span class="number">0x40</span>, <span class="number">0xb9</span>, <span class="number">0x31</span>, <span class="number">0x58</span>, <span class="number">0x9c</span>, <span class="number">0xf0</span>, <span class="number">0xdd</span>, <span class="number">0xa8</span>, <span class="number">0x50</span>, <span class="number">0x57</span>, <span class="number">0x18</span>, <span class="number">0xd0</span>, <span class="number">0x6c</span>, <span class="number">0xfe</span>, <span class="number">0x20</span>, <span class="number">0x6b</span>, <span class="number">0xb9</span>,</span><br><span class="line">    <span class="number">0x17</span>, <span class="number">0x82</span>, <span class="number">0x4e</span>, <span class="number">0xd9</span>, <span class="number">0x68</span>, <span class="number">0x0</span>, <span class="number">0x93</span>, <span class="number">0x3c</span>, <span class="number">0x52</span>, <span class="number">0xa0</span>, <span class="number">0xe2</span>, <span class="number">0xbb</span>, <span class="number">0x40</span>, <span class="number">0x24</span>, <span class="number">0xe8</span>, <span class="number">0xc4</span>, <span class="number">0x55</span>, <span class="number">0xb6</span>, <span class="number">0x27</span>,</span><br><span class="line">    <span class="number">0xca</span>, <span class="number">0x3f</span>, <span class="number">0x76</span>, <span class="number">0x58</span>, <span class="number">0xc0</span>, <span class="number">0xa9</span>, <span class="number">0x0</span>, <span class="number">0x46</span>, <span class="number">0x8</span>, <span class="number">0x20</span>, <span class="number">0xa6</span>, <span class="number">0x90</span>, <span class="number">0x8b</span>, <span class="number">0x56</span>, <span class="number">0x34</span>, <span class="number">0x11</span>, <span class="number">0x9d</span>, <span class="number">0x1d</span>, <span class="number">0xa0</span>,</span><br><span class="line">    <span class="number">0xe0</span>, <span class="number">0x18</span>, <span class="number">0x7e</span>, <span class="number">0x93</span>, <span class="number">0x94</span>, <span class="number">0xbd</span>, <span class="number">0x9c</span>, <span class="number">0xfa</span>, <span class="number">0xb</span>, <span class="number">0xbd</span>, <span class="number">0x6e</span>, <span class="number">0x44</span>, <span class="number">0x2b</span>, <span class="number">0xb3</span>, <span class="number">0x94</span>, <span class="number">0xfd</span>, <span class="number">0xa7</span>, <span class="number">0xa8</span>, <span class="number">0xf0</span>,</span><br><span class="line">    <span class="number">0x64</span>, <span class="number">0xbe</span>, <span class="number">0x8c</span>, <span class="number">0xfa</span>, <span class="number">0xdd</span>, <span class="number">0x5c</span>, <span class="number">0xe</span>, <span class="number">0x8f</span>, <span class="number">0x80</span>, <span class="number">0x5c</span>, <span class="number">0xa8</span>, <span class="number">0x12</span>, <span class="number">0x77</span>, <span class="number">0x70</span>, <span class="number">0x99</span>, <span class="number">0xdc</span>, <span class="number">0x4a</span>, <span class="number">0x76</span>, <span class="number">0x8</span>,</span><br><span class="line">    <span class="number">0x2e</span>, <span class="number">0x54</span>, <span class="number">0x60</span>, <span class="number">0xba</span>, <span class="number">0xe0</span>, <span class="number">0xad</span>, <span class="number">0xc7</span>, <span class="number">0x99</span>, <span class="number">0x9a</span>, <span class="number">0x0</span>, <span class="number">0x8</span>, <span class="number">0x0</span>, <span class="number">0xb8</span>, <span class="number">0x62</span>, <span class="number">0x94</span>, <span class="number">0x41</span>, <span class="number">0x80</span>, <span class="number">0x9a</span>, <span class="number">0xc4</span>, <span class="number">0x26</span>,</span><br><span class="line">    <span class="number">0xed</span>, <span class="number">0xbf</span>, <span class="number">0x90</span>, <span class="number">0xf5</span>, <span class="number">0x74</span>, <span class="number">0x5b</span>, <span class="number">0x2d</span>, <span class="number">0x49</span>, <span class="number">0x57</span>, <span class="number">0xc0</span>, <span class="number">0x44</span>, <span class="number">0xd0</span>, <span class="number">0x9f</span>, <span class="number">0xf2</span>, <span class="number">0x5e</span>, <span class="number">0x60</span>, <span class="number">0xb3</span>, <span class="number">0x40</span>, <span class="number">0x86</span>,</span><br><span class="line">    <span class="number">0x68</span>, <span class="number">0x6a</span>, <span class="number">0x20</span>, <span class="number">0x30</span>, <span class="number">0x16</span>, <span class="number">0xd0</span>, <span class="number">0xbc</span>, <span class="number">0x60</span>, <span class="number">0x7</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x31</span>, <span class="number">0xb9</span>, <span class="number">0x7d</span>, <span class="number">0x8b</span>, <span class="number">0x10</span>, <span class="number">0xf9</span>, <span class="number">0x70</span>, <span class="number">0x42</span>,</span><br><span class="line">    <span class="number">0x29</span>, <span class="number">0x62</span>, <span class="number">0xe8</span>, <span class="number">0x37</span>, <span class="number">0x50</span>, <span class="number">0xc5</span>, <span class="number">0x90</span>, <span class="number">0x28</span>, <span class="number">0xa7</span>, <span class="number">0x84</span>, <span class="number">0x46</span>, <span class="number">0x34</span>, <span class="number">0x68</span>, <span class="number">0x40</span>, <span class="number">0x6b</span>, <span class="number">0xe4</span>, <span class="number">0x40</span>, <span class="number">0x19</span>, <span class="number">0x20</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0x26</span>, <span class="number">0x94</span>, <span class="number">0xae</span>, <span class="number">0xc4</span>, <span class="number">0xe1</span>, <span class="number">0x32</span>, <span class="number">0x7e</span>, <span class="number">0xaf</span>, <span class="number">0xfd</span>, <span class="number">0x60</span>, <span class="number">0x10</span>, <span class="number">0x64</span>, <span class="number">0xc4</span>, <span class="number">0x98</span>, <span class="number">0x8</span>, <span class="number">0xc0</span>, <span class="number">0xe9</span>, <span class="number">0xdb</span>,</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0xb</span>, <span class="number">0x70</span>, <span class="number">0x96</span>, <span class="number">0x64</span>, <span class="number">0x4</span>, <span class="number">0xe2</span>, <span class="number">0x32</span>, <span class="number">0xba</span>, <span class="number">0x99</span>, <span class="number">0x30</span>, <span class="number">0xe8</span>, <span class="number">0xaa</span>, <span class="number">0x1e</span>, <span class="number">0x8e</span>, <span class="number">0xbd</span>, <span class="number">0xd3</span>, <span class="number">0x8e</span>, <span class="number">0x30</span>,</span><br><span class="line">    <span class="number">0x37</span>, <span class="number">0x7d</span>, <span class="number">0x34</span>, <span class="number">0x49</span>, <span class="number">0xf8</span>, <span class="number">0x0</span>, <span class="number">0x3b</span>, <span class="number">0x5e</span>, <span class="number">0xd3</span>, <span class="number">0x7c</span>, <span class="number">0xc8</span>, <span class="number">0x85</span>, <span class="number">0xb3</span>, <span class="number">0xf3</span>, <span class="number">0x40</span>, <span class="number">0x70</span>, <span class="number">0x80</span>, <span class="number">0x40</span>, <span class="number">0xd3</span>,</span><br><span class="line">    <span class="number">0xc5</span>, <span class="number">0x90</span>, <span class="number">0xa8</span>, <span class="number">0xa2</span>, <span class="number">0xb7</span>, <span class="number">0x80</span>, <span class="number">0x0</span>, <span class="number">0xcc</span>, <span class="number">0xb9</span>, <span class="number">0x28</span>, <span class="number">0xc6</span>, <span class="number">0x85</span>, <span class="number">0xbe</span>, <span class="number">0xc</span>, <span class="number">0x98</span>, <span class="number">0xfa</span>, <span class="number">0xb4</span>, <span class="number">0x79</span>, <span class="number">0x76</span>,</span><br><span class="line">    <span class="number">0xef</span>, <span class="number">0xb0</span>, <span class="number">0x80</span>, <span class="number">0xcb</span>, <span class="number">0x81</span>, <span class="number">0x0</span>, <span class="number">0x48</span>, <span class="number">0x7f</span>, <span class="number">0xf0</span>, <span class="number">0xc8</span>, <span class="number">0x90</span>, <span class="number">0x4e</span>, <span class="number">0x7c</span>, <span class="number">0xf0</span>, <span class="number">0x6b</span>, <span class="number">0x54</span>, <span class="number">0x59</span>, <span class="number">0xd6</span>, <span class="number">0x4b</span>,</span><br><span class="line">    <span class="number">0xe4</span>, <span class="number">0x79</span>, <span class="number">0x51</span>, <span class="number">0x20</span>, <span class="number">0x0</span>, <span class="number">0xc0</span>, <span class="number">0xf6</span>, <span class="number">0xa9</span>, <span class="number">0xd4</span>, <span class="number">0xd4</span>, <span class="number">0xe0</span>, <span class="number">0xfe</span>, <span class="number">0xef</span>, <span class="number">0x1c</span>, <span class="number">0xb2</span>, <span class="number">0xd4</span>, <span class="number">0x72</span>, <span class="number">0x80</span>, <span class="number">0xc2</span>,</span><br><span class="line">    <span class="number">0xea</span>, <span class="number">0xf6</span>, <span class="number">0xdf</span>, <span class="number">0xf0</span>, <span class="number">0x76</span>, <span class="number">0xef</span>, <span class="number">0x78</span>, <span class="number">0xd4</span>, <span class="number">0x98</span>, <span class="number">0xd7</span>, <span class="number">0x72</span>, <span class="number">0x4d</span>, <span class="number">0xeb</span>, <span class="number">0x40</span>, <span class="number">0x47</span>, <span class="number">0x18</span>, <span class="number">0xa8</span>, <span class="number">0x71</span>, <span class="number">0x52</span>,</span><br><span class="line">    <span class="number">0x57</span>, <span class="number">0xa0</span>, <span class="number">0x77</span>, <span class="number">0xc5</span>, <span class="number">0x86</span>, <span class="number">0x0</span>, <span class="number">0xb0</span>, <span class="number">0xa</span>, <span class="number">0x2d</span>, <span class="number">0xa8</span>, <span class="number">0x90</span>, <span class="number">0xdb</span>, <span class="number">0xe8</span>, <span class="number">0xeb</span>, <span class="number">0xf7</span>, <span class="number">0x8</span>, <span class="number">0x44</span>, <span class="number">0x92</span>, <span class="number">0x64</span>, <span class="number">0x61</span>,</span><br><span class="line">    <span class="number">0xfa</span>, <span class="number">0x66</span>, <span class="number">0x22</span>, <span class="number">0xdc</span>, <span class="number">0xf8</span>, <span class="number">0x0</span>, <span class="number">0x5d</span>, <span class="number">0x1a</span>, <span class="number">0xd6</span>, <span class="number">0xb5</span>, <span class="number">0x18</span>, <span class="number">0x0</span>, <span class="number">0xf8</span>, <span class="number">0x7f</span>, <span class="number">0xd8</span>, <span class="number">0x68</span>, <span class="number">0x7</span>, <span class="number">0x9c</span>, <span class="number">0xdc</span>, <span class="number">0xa0</span>,</span><br><span class="line">    <span class="number">0xf9</span>, <span class="number">0xe</span>, <span class="number">0x88</span>, <span class="number">0x25</span>, <span class="number">0xb0</span>, <span class="number">0x90</span>, <span class="number">0x60</span>, <span class="number">0xf1</span>, <span class="number">0x29</span>, <span class="number">0x88</span>, <span class="number">0xcf</span>, <span class="number">0x84</span>, <span class="number">0x3e</span>, <span class="number">0x20</span>, <span class="number">0x98</span>, <span class="number">0x28</span>, <span class="number">0x3a</span>, <span class="number">0x50</span>, <span class="number">0x87</span>,</span><br><span class="line">    <span class="number">0x33</span>, <span class="number">0x2d</span>, <span class="number">0xb0</span>, <span class="number">0x84</span>, <span class="number">0x84</span>, <span class="number">0xd0</span>, <span class="number">0xa4</span>, <span class="number">0x40</span>, <span class="number">0x0</span>, <span class="number">0x78</span>, <span class="number">0xaa</span>, <span class="number">0xfa</span>, <span class="number">0x20</span>, <span class="number">0xda</span>, <span class="number">0xc5</span>, <span class="number">0x2d</span>, <span class="number">0xf</span>, <span class="number">0x38</span>, <span class="number">0x20</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0x3</span>, <span class="number">0xdc</span>, <span class="number">0x43</span>, <span class="number">0x62</span>, <span class="number">0x71</span>, <span class="number">0xb</span>, <span class="number">0xaf</span>, <span class="number">0x20</span>, <span class="number">0x6b</span>, <span class="number">0x0</span>, <span class="number">0xe4</span>, <span class="number">0x58</span>, <span class="number">0xeb</span>, <span class="number">0xc6</span>, <span class="number">0xb8</span>, <span class="number">0xa0</span>, <span class="number">0xa0</span>, <span class="number">0x70</span>, <span class="number">0x10</span>,</span><br><span class="line">    <span class="number">0x76</span>, <span class="number">0x46</span>, <span class="number">0xa0</span>, <span class="number">0xb4</span>, <span class="number">0xd8</span>, <span class="number">0xe2</span>, <span class="number">0x78</span>, <span class="number">0x47</span>, <span class="number">0xe</span>, <span class="number">0x4f</span>, <span class="number">0xc8</span>, <span class="number">0xd4</span>, <span class="number">0x30</span>, <span class="number">0xe4</span>, <span class="number">0x84</span>, <span class="number">0x4c</span>, <span class="number">0xb0</span>, <span class="number">0x91</span>, <span class="number">0xc2</span>,</span><br><span class="line">    <span class="number">0xa0</span>, <span class="number">0xfe</span>, <span class="number">0x70</span>, <span class="number">0xef</span>, <span class="number">0x10</span>, <span class="number">0x40</span>, <span class="number">0x68</span>, <span class="number">0x83</span>, <span class="number">0xd2</span>, <span class="number">0xb4</span>, <span class="number">0x20</span>, <span class="number">0xcd</span>, <span class="number">0xd0</span>, <span class="number">0x0</span>, <span class="number">0xfe</span>, <span class="number">0xb3</span>, <span class="number">0x33</span>, <span class="number">0x37</span>, <span class="number">0x80</span>,</span><br><span class="line">    <span class="number">0x97</span>, <span class="number">0xd7</span>, <span class="number">0xa0</span>, <span class="number">0xc7</span>, <span class="number">0x62</span>, <span class="number">0xbe</span>, <span class="number">0x40</span>, <span class="number">0xff</span>, <span class="number">0xd0</span>, <span class="number">0xc0</span>, <span class="number">0x44</span>, <span class="number">0x94</span>, <span class="number">0xda</span>, <span class="number">0x32</span>, <span class="number">0xb0</span>, <span class="number">0x9c</span>, <span class="number">0xd8</span>, <span class="number">0x5a</span>, <span class="number">0x34</span>,</span><br><span class="line">    <span class="number">0x72</span>, <span class="number">0xe</span>, <span class="number">0x15</span>, <span class="number">0xc</span>, <span class="number">0x80</span>, <span class="number">0xd0</span>, <span class="number">0xc2</span>, <span class="number">0x1a</span>, <span class="number">0xcf</span>, <span class="number">0xfa</span>, <span class="number">0xb2</span>, <span class="number">0x20</span>, <span class="number">0x48</span>, <span class="number">0xc8</span>, <span class="number">0x5e</span>, <span class="number">0x5d</span>, <span class="number">0x62</span>, <span class="number">0xbb</span>, <span class="number">0x26</span>,</span><br><span class="line">    <span class="number">0xa4</span>, <span class="number">0x6b</span>, <span class="number">0x73</span>, <span class="number">0x0</span>, <span class="number">0x8</span>, <span class="number">0xf2</span>, <span class="number">0x8f</span>, <span class="number">0xbb</span>, <span class="number">0x13</span>, <span class="number">0xb6</span>, <span class="number">0x40</span>, <span class="number">0xb</span>, <span class="number">0xf1</span>, <span class="number">0xe9</span>, <span class="number">0xf1</span>, <span class="number">0xf9</span>, <span class="number">0x80</span>, <span class="number">0xf8</span>, <span class="number">0x4c</span>, <span class="number">0xca</span>,</span><br><span class="line">    <span class="number">0x3d</span>, <span class="number">0x60</span>, <span class="number">0xe7</span>, <span class="number">0x9a</span>, <span class="number">0x3e</span>, <span class="number">0xd</span>, <span class="number">0x77</span>, <span class="number">0x83</span>, <span class="number">0x96</span>, <span class="number">0x60</span>, <span class="number">0xa0</span>, <span class="number">0xc4</span>, <span class="number">0x81</span>, <span class="number">0xc4</span>, <span class="number">0xf6</span>, <span class="number">0x20</span>, <span class="number">0x79</span>, <span class="number">0x30</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x42</span>, <span class="number">0x95</span>, <span class="number">0xe4</span>, <span class="number">0xb</span>, <span class="number">0x4a</span>, <span class="number">0x30</span>, <span class="number">0x40</span>, <span class="number">0xaa</span>, <span class="number">0x73</span>, <span class="number">0x91</span>, <span class="number">0xbc</span>, <span class="number">0xa7</span>, <span class="number">0xe8</span>, <span class="number">0xed</span>, <span class="number">0x20</span>, <span class="number">0x4e</span>, <span class="number">0xbc</span>, <span class="number">0x6d</span>, <span class="number">0xbc</span>,</span><br><span class="line">    <span class="number">0xf5</span>, <span class="number">0x22</span>, <span class="number">0xae</span>, <span class="number">0x6b</span>, <span class="number">0x79</span>, <span class="number">0x38</span>, <span class="number">0x81</span>, <span class="number">0x5c</span>, <span class="number">0x88</span>, <span class="number">0x59</span>, <span class="number">0xbc</span>, <span class="number">0x50</span>, <span class="number">0x54</span>, <span class="number">0x6b</span>, <span class="number">0x84</span>, <span class="number">0x61</span>, <span class="number">0xb8</span>, <span class="number">0x20</span>, <span class="number">0xc1</span>,</span><br><span class="line">    <span class="number">0xec</span>, <span class="number">0x8</span>, <span class="number">0xc3</span>, <span class="number">0x9c</span>, <span class="number">0x3a</span>, <span class="number">0x32</span>, <span class="number">0x7</span>, <span class="number">0xd0</span>, <span class="number">0xfb</span>, <span class="number">0xd1</span>, <span class="number">0xd3</span>, <span class="number">0xab</span>, <span class="number">0xbf</span>, <span class="number">0x1c</span>, <span class="number">0xc0</span>, <span class="number">0x93</span>, <span class="number">0x9a</span>, <span class="number">0xe2</span>, <span class="number">0x90</span>,</span><br><span class="line">    <span class="number">0x28</span>, <span class="number">0xa0</span>, <span class="number">0xe0</span>, <span class="number">0xe8</span>, <span class="number">0xf0</span>, <span class="number">0xd1</span>, <span class="number">0xa0</span>, <span class="number">0xcc</span>, <span class="number">0xe0</span>, <span class="number">0xa8</span>, <span class="number">0x5a</span>, <span class="number">0xa0</span>, <span class="number">0x61</span>, <span class="number">0x1a</span>, <span class="number">0xae</span>, <span class="number">0x2e</span>, <span class="number">0xb1</span>, <span class="number">0x19</span>, <span class="number">0x26</span>,</span><br><span class="line">    <span class="number">0x5e</span>, <span class="number">0x0</span>, <span class="number">0xf4</span>, <span class="number">0x5e</span>, <span class="number">0x9c</span>, <span class="number">0xdd</span>, <span class="number">0xb3</span>, <span class="number">0xd0</span>, <span class="number">0x8e</span>, <span class="number">0x80</span>, <span class="number">0x5e</span>, <span class="number">0x6f</span>, <span class="number">0x22</span>, <span class="number">0x28</span>, <span class="number">0x60</span>, <span class="number">0x3e</span>, <span class="number">0xe8</span>, <span class="number">0x9b</span>, <span class="number">0x97</span>,</span><br><span class="line">    <span class="number">0x14</span>, <span class="number">0xe</span>, <span class="number">0xca</span>, <span class="number">0x50</span>, <span class="number">0xc</span>, <span class="number">0x0</span>, <span class="number">0xf</span>, <span class="number">0x40</span>, <span class="number">0x24</span>, <span class="number">0xff</span>, <span class="number">0xf0</span>, <span class="number">0xeb</span>, <span class="number">0xe</span>, <span class="number">0xfa</span>, <span class="number">0x7c</span>, <span class="number">0x74</span>, <span class="number">0x1b</span>, <span class="number">0x6c</span>, <span class="number">0x21</span>, <span class="number">0xb7</span>,</span><br><span class="line">    <span class="number">0xd7</span>, <span class="number">0xb0</span>, <span class="number">0x1b</span>, <span class="number">0x30</span>, <span class="number">0x82</span>, <span class="number">0xbb</span>, <span class="number">0xfa</span>, <span class="number">0x5c</span>, <span class="number">0x3</span>, <span class="number">0xb0</span>, <span class="number">0xc8</span>, <span class="number">0xa0</span>, <span class="number">0x55</span>, <span class="number">0xe1</span>, <span class="number">0xe0</span>, <span class="number">0xb1</span>, <span class="number">0x83</span>, <span class="number">0x34</span>, <span class="number">0xc0</span>,</span><br><span class="line">    <span class="number">0xba</span>, <span class="number">0x50</span>, <span class="number">0xdb</span>, <span class="number">0x44</span>, <span class="number">0x8d</span>, <span class="number">0xd6</span>, <span class="number">0xb1</span>, <span class="number">0x8a</span>, <span class="number">0xbe</span>, <span class="number">0xe7</span>, <span class="number">0x77</span>, <span class="number">0x2</span>, <span class="number">0x88</span>, <span class="number">0x98</span>, <span class="number">0xdd</span>, <span class="number">0x0</span>, <span class="number">0xe1</span>, <span class="number">0xb</span>, <span class="number">0x10</span>, <span class="number">0x18</span>,</span><br><span class="line">    <span class="number">0x4f</span>, <span class="number">0x1</span>, <span class="number">0xc2</span>, <span class="number">0x10</span>, <span class="number">0x70</span>, <span class="number">0x80</span>, <span class="number">0xb3</span>, <span class="number">0x2a</span>, <span class="number">0xc6</span>, <span class="number">0x40</span>, <span class="number">0x4f</span>, <span class="number">0xf9</span>, <span class="number">0x72</span>, <span class="number">0xe</span>, <span class="number">0x21</span>, <span class="number">0xe0</span>, <span class="number">0x7a</span>, <span class="number">0x2c</span>, <span class="number">0xd4</span>,</span><br><span class="line">    <span class="number">0xbc</span>, <span class="number">0x3c</span>, <span class="number">0xf0</span>, <span class="number">0xf2</span>, <span class="number">0xca</span>, <span class="number">0x0</span>, <span class="number">0x72</span>, <span class="number">0x14</span>, <span class="number">0xf0</span>, <span class="number">0xba</span>, <span class="number">0x7f</span>, <span class="number">0x70</span>, <span class="number">0x98</span>, <span class="number">0x80</span>, <span class="number">0x8d</span>, <span class="number">0xa7</span>, <span class="number">0x41</span>, <span class="number">0x54</span>, <span class="number">0x3f</span>,</span><br><span class="line">    <span class="number">0x4d</span>, <span class="number">0xbf</span>, <span class="number">0xc6</span>, <span class="number">0x0</span>, <span class="number">0xc0</span>, <span class="number">0x10</span>, <span class="number">0x30</span>, <span class="number">0x75</span>, <span class="number">0xd6</span>, <span class="number">0x0</span>, <span class="number">0xc0</span>, <span class="number">0x32</span>, <span class="number">0x28</span>, <span class="number">0xe4</span>, <span class="number">0x3f</span>, <span class="number">0xa5</span>, <span class="number">0x94</span>, <span class="number">0x58</span>, <span class="number">0xc8</span>,</span><br><span class="line">    <span class="number">0xd4</span>, <span class="number">0xb6</span>, <span class="number">0x4</span>, <span class="number">0x85</span>, <span class="number">0x38</span>, <span class="number">0x8a</span>, <span class="number">0x49</span>, <span class="number">0x1c</span>, <span class="number">0x26</span>, <span class="number">0xa1</span>, <span class="number">0xec</span>, <span class="number">0xc8</span>, <span class="number">0x86</span>, <span class="number">0x19</span>, <span class="number">0x0</span>, <span class="number">0x58</span>, <span class="number">0x70</span>, <span class="number">0xd1</span>, <span class="number">0xc2</span>,</span><br><span class="line">    <span class="number">0x24</span>, <span class="number">0x6d</span>, <span class="number">0x37</span>, <span class="number">0x2e</span>, <span class="number">0xc0</span>, <span class="number">0x80</span>, <span class="number">0x1c</span>, <span class="number">0x20</span>, <span class="number">0xd5</span>, <span class="number">0x11</span>, <span class="number">0x11</span>, <span class="number">0x44</span>, <span class="number">0x98</span>, <span class="number">0x99</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x15</span>, <span class="number">0x1a</span>, <span class="number">0xde</span>,</span><br><span class="line">    <span class="number">0x98</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x7c</span>, <span class="number">0x6b</span>, <span class="number">0x0</span>, <span class="number">0xed</span>, <span class="number">0x44</span>, <span class="number">0xc3</span>, <span class="number">0xca</span>, <span class="number">0xd8</span>, <span class="number">0xe8</span>, <span class="number">0x80</span>, <span class="number">0x16</span>, <span class="number">0xc4</span>, <span class="number">0xb0</span>, <span class="number">0xd9</span>, <span class="number">0xb8</span>, <span class="number">0xe4</span>, <span class="number">0x5d</span>,</span><br><span class="line">    <span class="number">0xef</span>, <span class="number">0xd3</span>, <span class="number">0x4c</span>, <span class="number">0x60</span>, <span class="number">0xcb</span>, <span class="number">0xdd</span>, <span class="number">0x50</span>, <span class="number">0x91</span>, <span class="number">0xb2</span>, <span class="number">0x40</span>, <span class="number">0x17</span>, <span class="number">0x6c</span>, <span class="number">0xdc</span>, <span class="number">0x20</span>, <span class="number">0x7</span>, <span class="number">0xdc</span>, <span class="number">0x6e</span>, <span class="number">0xff</span>, <span class="number">0xf8</span>,</span><br><span class="line">    <span class="number">0x9d</span>, <span class="number">0x60</span>, <span class="number">0x2f</span>, <span class="number">0xc0</span>, <span class="number">0x94</span>, <span class="number">0x3c</span>, <span class="number">0x9a</span>, <span class="number">0xc0</span>, <span class="number">0x90</span>, <span class="number">0x1a</span>, <span class="number">0x6d</span>, <span class="number">0x70</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xae</span>, <span class="number">0x0</span>, <span class="number">0xc8</span>, <span class="number">0x1</span>, <span class="number">0xc0</span>,</span><br><span class="line">    <span class="number">0xd3</span>, <span class="number">0xa5</span>, <span class="number">0xc8</span>, <span class="number">0xa4</span>, <span class="number">0xb6</span>, <span class="number">0x98</span>, <span class="number">0xe0</span>, <span class="number">0x80</span>, <span class="number">0x4c</span>, <span class="number">0x26</span>, <span class="number">0xf0</span>, <span class="number">0x60</span>, <span class="number">0x51</span>, <span class="number">0x3c</span>, <span class="number">0x55</span>, <span class="number">0x78</span>, <span class="number">0x36</span>, <span class="number">0x5a</span>, <span class="number">0x9e</span>,</span><br><span class="line">    <span class="number">0xf1</span>, <span class="number">0x58</span>, <span class="number">0xd5</span>, <span class="number">0x9</span>, <span class="number">0xd2</span>, <span class="number">0xa6</span>, <span class="number">0xb7</span>, <span class="number">0x7c</span>, <span class="number">0x79</span>, <span class="number">0x8a</span>, <span class="number">0x50</span>, <span class="number">0x13</span>, <span class="number">0x95</span>, <span class="number">0xb3</span>, <span class="number">0x9e</span>, <span class="number">0x32</span>, <span class="number">0x38</span>, <span class="number">0xdd</span>, <span class="number">0xbd</span>,</span><br><span class="line">    <span class="number">0xe4</span>, <span class="number">0xdc</span>, <span class="number">0x8f</span>, <span class="number">0xa0</span>, <span class="number">0x2e</span>, <span class="number">0x40</span>, <span class="number">0xc8</span>, <span class="number">0x34</span>, <span class="number">0x9a</span>, <span class="number">0xff</span>, <span class="number">0xe0</span>, <span class="number">0x49</span>, <span class="number">0x90</span>, <span class="number">0x72</span>, <span class="number">0xd9</span>, <span class="number">0xa4</span>, <span class="number">0xc8</span>, <span class="number">0xaa</span>, <span class="number">0x7c</span>,</span><br><span class="line">    <span class="number">0x41</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x0</span>, <span class="number">0x4c</span>, <span class="number">0xf</span>, <span class="number">0xc0</span>, <span class="number">0xee</span>, <span class="number">0x7c</span>, <span class="number">0x61</span>, <span class="number">0xbc</span>, <span class="number">0xd0</span>, <span class="number">0x0</span>, <span class="number">0x94</span>, <span class="number">0x42</span>, <span class="number">0x78</span>, <span class="number">0xc5</span>, <span class="number">0x98</span>, <span class="number">0xb9</span>, <span class="number">0x1f</span>,</span><br><span class="line">    <span class="number">0x68</span>, <span class="number">0x9b</span>, <span class="number">0x91</span>, <span class="number">0xd7</span>, <span class="number">0x4</span>, <span class="number">0x8</span>, <span class="number">0xbe</span>, <span class="number">0x66</span>, <span class="number">0x0</span>, <span class="number">0xe8</span>, <span class="number">0xfc</span>, <span class="number">0x70</span>, <span class="number">0x40</span>, <span class="number">0x9c</span>, <span class="number">0x3e</span>, <span class="number">0xc0</span>, <span class="number">0xa</span>, <span class="number">0x3c</span>, <span class="number">0x35</span>, <span class="number">0x58</span>,</span><br><span class="line">    <span class="number">0xb7</span>, <span class="number">0xff</span>, <span class="number">0x2d</span>, <span class="number">0x60</span>, <span class="number">0x9a</span>, <span class="number">0x88</span>, <span class="number">0xbe</span>, <span class="number">0x6f</span>, <span class="number">0xd4</span>, <span class="number">0x10</span>, <span class="number">0x9b</span>, <span class="number">0xa0</span>, <span class="number">0x7a</span>, <span class="number">0xee</span>, <span class="number">0xa6</span>, <span class="number">0x56</span>, <span class="number">0x6a</span>, <span class="number">0x7</span>, <span class="number">0x55</span>,</span><br><span class="line">    <span class="number">0x0</span>, <span class="number">0x87</span>, <span class="number">0xd4</span>, <span class="number">0xc5</span>, <span class="number">0x3c</span>, <span class="number">0xef</span>, <span class="number">0xd0</span>, <span class="number">0xfc</span>, <span class="number">0xd6</span>, <span class="number">0x30</span>, <span class="number">0x0</span>, <span class="number">0xf6</span>, <span class="number">0x0</span>, <span class="number">0x6d</span>, <span class="number">0x72</span>, <span class="number">0x18</span>, <span class="number">0x87</span>, <span class="number">0xd8</span>, <span class="number">0xaa</span>, <span class="number">0x98</span>,</span><br><span class="line">    <span class="number">0x96</span>, <span class="number">0x95</span>, <span class="number">0x48</span>, <span class="number">0xb1</span>, <span class="number">0x79</span>, <span class="number">0xf0</span>, <span class="number">0x9e</span>, <span class="number">0x20</span>, <span class="number">0xd7</span>, <span class="number">0x40</span>, <span class="number">0x70</span>, <span class="number">0x50</span>, <span class="number">0xe4</span>, <span class="number">0x54</span>, <span class="number">0x7c</span>, <span class="number">0xcc</span>, <span class="number">0xce</span>, <span class="number">0x10</span>, <span class="number">0x16</span>,</span><br><span class="line">    <span class="number">0xa2</span>, <span class="number">0xfd</span>, <span class="number">0x36</span>, <span class="number">0x86</span>, <span class="number">0x50</span>, <span class="number">0x9a</span>, <span class="number">0xe0</span>, <span class="number">0x9c</span>, <span class="number">0xa4</span>, <span class="number">0x5a</span>, <span class="number">0x62</span>, <span class="number">0xce</span>, <span class="number">0xb1</span>, <span class="number">0x77</span>, <span class="number">0xea</span>, <span class="number">0x45</span>, <span class="number">0x40</span>, <span class="number">0x53</span>, <span class="number">0xaa</span>,</span><br><span class="line">    <span class="number">0x86</span>, <span class="number">0xf0</span>, <span class="number">0xb</span>, <span class="number">0x4</span>, <span class="number">0xb2</span>, <span class="number">0x3b</span>, <span class="number">0x50</span>, <span class="number">0x10</span>, <span class="number">0xf8</span>, <span class="number">0x62</span>, <span class="number">0xd0</span>, <span class="number">0xb6</span>, <span class="number">0xac</span>, <span class="number">0x70</span>, <span class="number">0x80</span>, <span class="number">0x66</span>, <span class="number">0xd8</span>, <span class="number">0x10</span>, <span class="number">0x28</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0x89</span>, <span class="number">0x5</span>, <span class="number">0xf9</span>, <span class="number">0x69</span>, <span class="number">0x98</span>, <span class="number">0x5b</span>, <span class="number">0xe0</span>, <span class="number">0x68</span>, <span class="number">0xf2</span>, <span class="number">0xf5</span>, <span class="number">0xa7</span>, <span class="number">0xab</span>, <span class="number">0x90</span>, <span class="number">0xa8</span>, <span class="number">0xcb</span>, <span class="number">0x40</span>, <span class="number">0xa8</span>, <span class="number">0xb8</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0x8d</span>, <span class="number">0x28</span>, <span class="number">0x53</span>, <span class="number">0x9c</span>, <span class="number">0x52</span>, <span class="number">0xcc</span>, <span class="number">0xfe</span>, <span class="number">0xc0</span>, <span class="number">0x47</span>, <span class="number">0x30</span>, <span class="number">0xff</span>, <span class="number">0x1c</span>, <span class="number">0x58</span>, <span class="number">0xe6</span>, <span class="number">0x69</span>, <span class="number">0x87</span>, <span class="number">0xc0</span>, <span class="number">0x98</span>,</span><br><span class="line">    <span class="number">0x8c</span>, <span class="number">0xc0</span>, <span class="number">0x90</span>, <span class="number">0x8c</span>, <span class="number">0xf9</span>, <span class="number">0xee</span>, <span class="number">0xbe</span>, <span class="number">0x10</span>, <span class="number">0xd0</span>, <span class="number">0x98</span>, <span class="number">0x20</span>, <span class="number">0xa6</span>, <span class="number">0x8e</span>, <span class="number">0xe8</span>, <span class="number">0xd6</span>, <span class="number">0x10</span>, <span class="number">0x32</span>, <span class="number">0x70</span>, <span class="number">0x7e</span>,</span><br><span class="line">    <span class="number">0x42</span>, <span class="number">0xb9</span>, <span class="number">0x14</span>, <span class="number">0x6c</span>, <span class="number">0xe5</span>, <span class="number">0xe</span>, <span class="number">0xc8</span>, <span class="number">0x6c</span>, <span class="number">0x0</span>, <span class="number">0x1</span>, <span class="number">0xca</span>, <span class="number">0x46</span>, <span class="number">0x74</span>, <span class="number">0x98</span>, <span class="number">0x12</span>, <span class="number">0xc7</span>, <span class="number">0xd8</span>, <span class="number">0x60</span>, <span class="number">0x9c</span>, <span class="number">0xd4</span>,</span><br><span class="line">    <span class="number">0xc6</span>, <span class="number">0xf8</span>, <span class="number">0xfc</span>, <span class="number">0x2</span>, <span class="number">0x60</span>, <span class="number">0xc0</span>, <span class="number">0xc4</span>, <span class="number">0x10</span>, <span class="number">0x1a</span>, <span class="number">0xba</span>, <span class="number">0xac</span>, <span class="number">0x23</span>, <span class="number">0x40</span>, <span class="number">0xdf</span>, <span class="number">0x82</span>, <span class="number">0x47</span>, <span class="number">0x7d</span>, <span class="number">0x86</span>, <span class="number">0x6</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0xf2</span>, <span class="number">0x8</span>, <span class="number">0x3</span>, <span class="number">0x9e</span>, <span class="number">0x98</span>, <span class="number">0x70</span>, <span class="number">0xd0</span>, <span class="number">0x9a</span>, <span class="number">0xe</span>, <span class="number">0x35</span>, <span class="number">0x58</span>, <span class="number">0xb1</span>, <span class="number">0x62</span>, <span class="number">0xd0</span>, <span class="number">0x3f</span>, <span class="number">0xe1</span>, <span class="number">0x83</span>, <span class="number">0xb</span>, <span class="number">0x50</span>,</span><br><span class="line">    <span class="number">0x6c</span>, <span class="number">0x3c</span>, <span class="number">0xd1</span>, <span class="number">0xe3</span>, <span class="number">0x48</span>, <span class="number">0x14</span>, <span class="number">0xe0</span>, <span class="number">0x82</span>, <span class="number">0xe9</span>, <span class="number">0x90</span>, <span class="number">0x3e</span>, <span class="number">0x20</span>, <span class="number">0x4b</span>, <span class="number">0x7a</span>, <span class="number">0xb2</span>, <span class="number">0x13</span>, <span class="number">0x24</span>, <span class="number">0x99</span>, <span class="number">0x3c</span>,</span><br><span class="line">    <span class="number">0x5c</span>, <span class="number">0x13</span>, <span class="number">0xb0</span>, <span class="number">0x49</span>, <span class="number">0xbc</span>, <span class="number">0x7</span>, <span class="number">0xb9</span>, <span class="number">0x50</span>, <span class="number">0xaa</span>, <span class="number">0xf4</span>, <span class="number">0x20</span>, <span class="number">0x79</span>, <span class="number">0x88</span>, <span class="number">0x17</span>, <span class="number">0x23</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xe3</span>, <span class="number">0xb3</span>,</span><br><span class="line">    <span class="number">0x50</span>, <span class="number">0xb</span>, <span class="number">0xf3</span>, <span class="number">0x4d</span>, <span class="number">0x40</span>, <span class="number">0xc0</span>, <span class="number">0xd8</span>, <span class="number">0xb1</span>, <span class="number">0x16</span>, <span class="number">0x90</span>, <span class="number">0x54</span>, <span class="number">0x53</span>, <span class="number">0x60</span>, <span class="number">0x49</span>, <span class="number">0xf8</span>, <span class="number">0x60</span>, <span class="number">0xb</span>, <span class="number">0xa9</span>, <span class="number">0xde</span>,</span><br><span class="line">    <span class="number">0xe4</span>, <span class="number">0x0</span>, <span class="number">0xb8</span>, <span class="number">0x70</span>, <span class="number">0x94</span>, <span class="number">0xaf</span>, <span class="number">0x99</span>, <span class="number">0x4</span>, <span class="number">0x38</span>, <span class="number">0xd8</span>, <span class="number">0x1e</span>, <span class="number">0x0</span>, <span class="number">0xc4</span>, <span class="number">0x9c</span>, <span class="number">0x40</span>, <span class="number">0x4</span>, <span class="number">0x4b</span>, <span class="number">0xd9</span>, <span class="number">0xf8</span>, <span class="number">0x70</span>,</span><br><span class="line">    <span class="number">0xc8</span>, <span class="number">0x84</span>, <span class="number">0x34</span>, <span class="number">0x97</span>, <span class="number">0xf7</span>, <span class="number">0xea</span>, <span class="number">0xce</span>, <span class="number">0x3c</span>, <span class="number">0xc0</span>, <span class="number">0x53</span>, <span class="number">0x7c</span>, <span class="number">0xfa</span>, <span class="number">0x78</span>, <span class="number">0xf</span>, <span class="number">0x93</span>, <span class="number">0xda</span>, <span class="number">0x10</span>, <span class="number">0x48</span>, <span class="number">0x4f</span>,</span><br><span class="line">    <span class="number">0xf8</span>, <span class="number">0x2c</span>, <span class="number">0x8e</span>, <span class="number">0x5a</span>, <span class="number">0xe0</span>, <span class="number">0x40</span>, <span class="number">0x55</span>, <span class="number">0x4c</span>, <span class="number">0x9f</span>, <span class="number">0xb8</span>, <span class="number">0x8f</span>, <span class="number">0x57</span>, <span class="number">0x80</span>, <span class="number">0x61</span>, <span class="number">0xe5</span>, <span class="number">0x3</span>, <span class="number">0x87</span>, <span class="number">0x10</span>, <span class="number">0x82</span>,</span><br><span class="line">    <span class="number">0xc2</span>, <span class="number">0xc2</span>, <span class="number">0x45</span>, <span class="number">0xc6</span>, <span class="number">0xe9</span>, <span class="number">0x60</span>, <span class="number">0x0</span>, <span class="number">0xdb</span>, <span class="number">0x18</span>, <span class="number">0xa8</span>, <span class="number">0xb8</span>, <span class="number">0xf6</span>, <span class="number">0xea</span>, <span class="number">0xee</span>, <span class="number">0xe0</span>, <span class="number">0x34</span>, <span class="number">0x30</span>, <span class="number">0x7e</span>, <span class="number">0x14</span>,</span><br><span class="line">    <span class="number">0x9e</span>, <span class="number">0x92</span>, <span class="number">0x9c</span>, <span class="number">0xb3</span>, <span class="number">0x8a</span>, <span class="number">0xf0</span>, <span class="number">0x64</span>, <span class="number">0x91</span>, <span class="number">0x90</span>, <span class="number">0x52</span>, <span class="number">0x28</span>, <span class="number">0xb8</span>, <span class="number">0x4f</span>, <span class="number">0x0</span>, <span class="number">0x4c</span>, <span class="number">0x74</span>, <span class="number">0x0</span>, <span class="number">0xa0</span>, <span class="number">0xaa</span>,</span><br><span class="line">    <span class="number">0xbe</span>, <span class="number">0x30</span>, <span class="number">0x78</span>, <span class="number">0x5d</span>, <span class="number">0x4c</span>, <span class="number">0x30</span>, <span class="number">0xec</span>, <span class="number">0xd2</span>, <span class="number">0x7a</span>, <span class="number">0x98</span>, <span class="number">0xcc</span>, <span class="number">0xfd</span>, <span class="number">0xf1</span>, <span class="number">0x38</span>, <span class="number">0xa6</span>, <span class="number">0xf2</span>, <span class="number">0x78</span>, <span class="number">0xfc</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0xd4</span>, <span class="number">0xc8</span>, <span class="number">0xfb</span>, <span class="number">0xd0</span>, <span class="number">0x6c</span>, <span class="number">0x9c</span>, <span class="number">0x78</span>, <span class="number">0x52</span>, <span class="number">0x4</span>, <span class="number">0xb</span>, <span class="number">0xf7</span>, <span class="number">0x88</span>, <span class="number">0x11</span>, <span class="number">0x62</span>, <span class="number">0xf6</span>, <span class="number">0x28</span>,</span><br><span class="line">    <span class="number">0xf2</span>, <span class="number">0x40</span>, <span class="number">0x90</span>, <span class="number">0x54</span>, <span class="number">0x8e</span>, <span class="number">0xaf</span>, <span class="number">0x2e</span>, <span class="number">0xd4</span>, <span class="number">0xb9</span>, <span class="number">0x2a</span>, <span class="number">0x1f</span>, <span class="number">0xb0</span>, <span class="number">0xdb</span>, <span class="number">0xcd</span>, <span class="number">0x34</span>, <span class="number">0x90</span>, <span class="number">0xd8</span>, <span class="number">0x45</span>, <span class="number">0x80</span>,</span><br><span class="line">    <span class="number">0x5c</span>, <span class="number">0xf0</span>, <span class="number">0x19</span>, <span class="number">0xa9</span>, <span class="number">0xc2</span>, <span class="number">0xd0</span>, <span class="number">0x73</span>, <span class="number">0xb9</span>, <span class="number">0xe</span>, <span class="number">0x6</span>, <span class="number">0xf</span>, <span class="number">0x34</span>, <span class="number">0x4b</span>, <span class="number">0xd4</span>, <span class="number">0x28</span>, <span class="number">0xe0</span>, <span class="number">0xa</span>, <span class="number">0xdc</span>, <span class="number">0x63</span>, <span class="number">0x2a</span>,</span><br><span class="line">    <span class="number">0xb7</span>, <span class="number">0xc4</span>, <span class="number">0xf0</span>, <span class="number">0x40</span>, <span class="number">0x62</span>, <span class="number">0x17</span>, <span class="number">0x6d</span>, <span class="number">0x14</span>, <span class="number">0xcb</span>, <span class="number">0x6f</span>, <span class="number">0xe8</span>, <span class="number">0x4d</span>, <span class="number">0x40</span>, <span class="number">0xfb</span>, <span class="number">0x2</span>, <span class="number">0xc2</span>, <span class="number">0xf3</span>, <span class="number">0x70</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0xc7</span>, <span class="number">0x69</span>, <span class="number">0xa8</span>, <span class="number">0x9d</span>, <span class="number">0xd5</span>, <span class="number">0x33</span>, <span class="number">0xa8</span>, <span class="number">0x1c</span>, <span class="number">0xdf</span>, <span class="number">0x64</span>, <span class="number">0x98</span>, <span class="number">0xb8</span>, <span class="number">0x9d</span>, <span class="number">0xe0</span>, <span class="number">0x84</span>, <span class="number">0xe8</span>, <span class="number">0xe</span>, <span class="number">0x21</span>, <span class="number">0x73</span>,</span><br><span class="line">    <span class="number">0x87</span>, <span class="number">0x2</span>, <span class="number">0xa3</span>, <span class="number">0x6</span>, <span class="number">0x10</span>, <span class="number">0x8f</span>, <span class="number">0x54</span>, <span class="number">0x48</span>, <span class="number">0x65</span>, <span class="number">0x20</span>, <span class="number">0x38</span>, <span class="number">0x54</span>, <span class="number">0xb6</span>, <span class="number">0x2f</span>, <span class="number">0x70</span>, <span class="number">0xa0</span>, <span class="number">0xf4</span>, <span class="number">0x8b</span>, <span class="number">0x27</span>,</span><br><span class="line">    <span class="number">0x20</span>, <span class="number">0x28</span>, <span class="number">0x7</span>, <span class="number">0xe4</span>, <span class="number">0x69</span>, <span class="number">0x3e</span>, <span class="number">0xb0</span>, <span class="number">0x95</span>, <span class="number">0x70</span>, <span class="number">0x78</span>, <span class="number">0xda</span>, <span class="number">0x22</span>, <span class="number">0x50</span>, <span class="number">0x62</span>, <span class="number">0x7</span>, <span class="number">0x8a</span>, <span class="number">0x90</span>, <span class="number">0x1</span>, <span class="number">0x4f</span>, <span class="number">0x1e</span>,</span><br><span class="line">    <span class="number">0x78</span>, <span class="number">0xfd</span>, <span class="number">0x44</span>, <span class="number">0x1c</span>, <span class="number">0x20</span>, <span class="number">0x1b</span>, <span class="number">0x64</span>, <span class="number">0xde</span>, <span class="number">0xdb</span>, <span class="number">0x3</span>, <span class="number">0xd8</span>, <span class="number">0xcd</span>, <span class="number">0x34</span>, <span class="number">0xcf</span>, <span class="number">0x42</span>, <span class="number">0xf0</span>, <span class="number">0xff</span>, <span class="number">0xbc</span>, <span class="number">0xa2</span>,</span><br><span class="line">    <span class="number">0x2c</span>, <span class="number">0x98</span>, <span class="number">0x7d</span>, <span class="number">0xb5</span>, <span class="number">0x70</span>, <span class="number">0x6e</span>, <span class="number">0xb8</span>, <span class="number">0xa4</span>, <span class="number">0x24</span>, <span class="number">0xea</span>, <span class="number">0x50</span>, <span class="number">0x80</span>, <span class="number">0x10</span>, <span class="number">0x8</span>, <span class="number">0x5f</span>, <span class="number">0x90</span>, <span class="number">0x35</span>, <span class="number">0xb2</span>, <span class="number">0xc4</span>,</span><br><span class="line">    <span class="number">0x54</span>, <span class="number">0x38</span>, <span class="number">0xac</span>, <span class="number">0xa6</span>, <span class="number">0x68</span>, <span class="number">0xec</span>, <span class="number">0x40</span>, <span class="number">0xe4</span>, <span class="number">0x2d</span>, <span class="number">0x92</span>, <span class="number">0xb6</span>, <span class="number">0x8</span>, <span class="number">0xa9</span>, <span class="number">0xe0</span>, <span class="number">0x6</span>, <span class="number">0xe4</span>, <span class="number">0xb0</span>, <span class="number">0x48</span>, <span class="number">0x7f</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0xad</span>, <span class="number">0xf6</span>, <span class="number">0xbc</span>, <span class="number">0x14</span>, <span class="number">0xba</span>, <span class="number">0x59</span>, <span class="number">0x2d</span>, <span class="number">0x0</span>, <span class="number">0xe8</span>, <span class="number">0x3f</span>, <span class="number">0xd8</span>, <span class="number">0x2f</span>, <span class="number">0x20</span>, <span class="number">0xc0</span>, <span class="number">0x64</span>, <span class="number">0x29</span>, <span class="number">0xd6</span>, <span class="number">0x65</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0x88</span>, <span class="number">0x6</span>, <span class="number">0x3c</span>, <span class="number">0x21</span>, <span class="number">0xa4</span>, <span class="number">0x43</span>, <span class="number">0xd0</span>, <span class="number">0xf0</span>, <span class="number">0xe6</span>, <span class="number">0xdc</span>, <span class="number">0x0</span>, <span class="number">0xbc</span>, <span class="number">0x87</span>, <span class="number">0x78</span>, <span class="number">0xd7</span>, <span class="number">0x53</span>, <span class="number">0xd4</span>, <span class="number">0xe</span>, <span class="number">0xf0</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0xf8</span>, <span class="number">0x40</span>, <span class="number">0xfc</span>, <span class="number">0x31</span>, <span class="number">0x1</span>, <span class="number">0x62</span>, <span class="number">0xc6</span>, <span class="number">0x74</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x0</span>, <span class="number">0x48</span>, <span class="number">0x2e</span>, <span class="number">0xd2</span>, <span class="number">0xd</span>, <span class="number">0x1c</span>, <span class="number">0x25</span>, <span class="number">0xdc</span>, <span class="number">0x13</span>,</span><br><span class="line">    <span class="number">0x43</span>, <span class="number">0x0</span>, <span class="number">0x9f</span>, <span class="number">0x99</span>, <span class="number">0x3d</span>, <span class="number">0xab</span>, <span class="number">0x37</span>, <span class="number">0x7c</span>, <span class="number">0xdb</span>, <span class="number">0x7f</span>, <span class="number">0x2a</span>, <span class="number">0xed</span>, <span class="number">0xdc</span>, <span class="number">0xfa</span>, <span class="number">0x4d</span>, <span class="number">0x90</span>, <span class="number">0xee</span>, <span class="number">0xd8</span>, <span class="number">0x19</span>,</span><br><span class="line">    <span class="number">0xde</span>, <span class="number">0xb7</span>, <span class="number">0x4c</span>, <span class="number">0x89</span>, <span class="number">0x43</span>, <span class="number">0x28</span>, <span class="number">0xb0</span>, <span class="number">0x9f</span>, <span class="number">0x78</span>, <span class="number">0x4e</span>, <span class="number">0x48</span>, <span class="number">0x3a</span>, <span class="number">0x98</span>, <span class="number">0x20</span>, <span class="number">0x80</span>, <span class="number">0xd0</span>, <span class="number">0xa2</span>, <span class="number">0xf8</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x5b</span>, <span class="number">0x98</span>, <span class="number">0xc0</span>, <span class="number">0x88</span>, <span class="number">0x45</span>, <span class="number">0xbc</span>, <span class="number">0x60</span>, <span class="number">0x11</span>, <span class="number">0xf8</span>, <span class="number">0x48</span>, <span class="number">0xbf</span>, <span class="number">0xe4</span>, <span class="number">0xb2</span>, <span class="number">0x55</span>, <span class="number">0xcf</span>, <span class="number">0x9d</span>, <span class="number">0xb</span>, <span class="number">0xf4</span>, <span class="number">0x12</span>,</span><br><span class="line">    <span class="number">0xca</span>, <span class="number">0x0</span>, <span class="number">0xdc</span>, <span class="number">0xe0</span>, <span class="number">0xfc</span>, <span class="number">0x74</span>, <span class="number">0xdd</span>, <span class="number">0x8e</span>, <span class="number">0xb2</span>, <span class="number">0x9e</span>, <span class="number">0x40</span>, <span class="number">0xfc</span>, <span class="number">0x80</span>, <span class="number">0x7e</span>, <span class="number">0x67</span>, <span class="number">0x50</span>, <span class="number">0x2e</span>, <span class="number">0x4e</span>, <span class="number">0xce</span>,</span><br><span class="line">    <span class="number">0x1d</span>, <span class="number">0x21</span>, <span class="number">0x8a</span>, <span class="number">0x98</span>, <span class="number">0x9b</span>, <span class="number">0x24</span>, <span class="number">0x20</span>, <span class="number">0xe0</span>, <span class="number">0xa2</span>, <span class="number">0x64</span>, <span class="number">0x24</span>, <span class="number">0xa3</span>, <span class="number">0xa2</span>,</span><br><span class="line">]</span><br><span class="line">data.reverse()</span><br><span class="line">array = [</span><br><span class="line">    <span class="number">0x63</span>, <span class="number">0x7C</span>, <span class="number">0x77</span>, <span class="number">0x7B</span>, <span class="number">0xF2</span>, <span class="number">0x6B</span>, <span class="number">0x6F</span>, <span class="number">0xC5</span>, <span class="number">0x30</span>, <span class="number">0x01</span>,</span><br><span class="line">    <span class="number">0x67</span>, <span class="number">0x2B</span>, <span class="number">0xFE</span>, <span class="number">0xD7</span>, <span class="number">0xAB</span>, <span class="number">0x76</span>, <span class="number">0xCA</span>, <span class="number">0x82</span>, <span class="number">0xC9</span>, <span class="number">0x7D</span>,</span><br><span class="line">    <span class="number">0xFA</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0xF0</span>, <span class="number">0xAD</span>, <span class="number">0xD4</span>, <span class="number">0xA2</span>, <span class="number">0xAF</span>, <span class="number">0x9C</span>, <span class="number">0xA4</span>,</span><br><span class="line">    <span class="number">0x72</span>, <span class="number">0xC0</span>, <span class="number">0xB7</span>, <span class="number">0xFD</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3F</span>, <span class="number">0xF7</span>, <span class="number">0xCC</span>,</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0xA5</span>, <span class="number">0xE5</span>, <span class="number">0xF1</span>, <span class="number">0x71</span>, <span class="number">0xD8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>, <span class="number">0x04</span>, <span class="number">0xC7</span>,</span><br><span class="line">    <span class="number">0x23</span>, <span class="number">0xC3</span>, <span class="number">0x18</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x9A</span>, <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xE2</span>,</span><br><span class="line">    <span class="number">0xEB</span>, <span class="number">0x27</span>, <span class="number">0xB2</span>, <span class="number">0x75</span>, <span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0x2C</span>, <span class="number">0x1A</span>, <span class="number">0x1B</span>, <span class="number">0x6E</span>,</span><br><span class="line">    <span class="number">0x5A</span>, <span class="number">0xA0</span>, <span class="number">0x52</span>, <span class="number">0x3B</span>, <span class="number">0xD6</span>, <span class="number">0xB3</span>, <span class="number">0x29</span>, <span class="number">0xE3</span>, <span class="number">0x2F</span>, <span class="number">0x84</span>,</span><br><span class="line">    <span class="number">0x53</span>, <span class="number">0xD1</span>, <span class="number">0x00</span>, <span class="number">0xED</span>, <span class="number">0x20</span>, <span class="number">0xFC</span>, <span class="number">0xB1</span>, <span class="number">0x5B</span>, <span class="number">0x6A</span>, <span class="number">0xCB</span>,</span><br><span class="line">    <span class="number">0xBE</span>, <span class="number">0x39</span>, <span class="number">0x4A</span>, <span class="number">0x4C</span>, <span class="number">0x58</span>, <span class="number">0xCF</span>, <span class="number">0xD0</span>, <span class="number">0xEF</span>, <span class="number">0xAA</span>, <span class="number">0xFB</span>,</span><br><span class="line">    <span class="number">0x43</span>, <span class="number">0x4D</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xF9</span>, <span class="number">0x02</span>, <span class="number">0x7F</span>, <span class="number">0x50</span>, <span class="number">0x3C</span>,</span><br><span class="line">    <span class="number">0x9F</span>, <span class="number">0xA8</span>, <span class="number">0x51</span>, <span class="number">0xA3</span>, <span class="number">0x40</span>, <span class="number">0x8F</span>, <span class="number">0x92</span>, <span class="number">0x9D</span>, <span class="number">0x38</span>, <span class="number">0xF5</span>,</span><br><span class="line">    <span class="number">0xBC</span>, <span class="number">0xB6</span>, <span class="number">0xDA</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xFF</span>, <span class="number">0xF3</span>, <span class="number">0xD2</span>, <span class="number">0xCD</span>, <span class="number">0x0C</span>,</span><br><span class="line">    <span class="number">0x13</span>, <span class="number">0xEC</span>, <span class="number">0x5F</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xC4</span>, <span class="number">0xA7</span>, <span class="number">0x7E</span>, <span class="number">0x3D</span>,</span><br><span class="line">    <span class="number">0x64</span>, <span class="number">0x5D</span>, <span class="number">0x19</span>, <span class="number">0x73</span>, <span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4F</span>, <span class="number">0xDC</span>, <span class="number">0x22</span>, <span class="number">0x2A</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x46</span>, <span class="number">0xEE</span>, <span class="number">0xB8</span>, <span class="number">0x14</span>, <span class="number">0xDE</span>, <span class="number">0x5E</span>, <span class="number">0x0B</span>, <span class="number">0xDB</span>,</span><br><span class="line">    <span class="number">0xE0</span>, <span class="number">0x32</span>, <span class="number">0x3A</span>, <span class="number">0x0A</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x24</span>, <span class="number">0x5C</span>, <span class="number">0xC2</span>, <span class="number">0xD3</span>,</span><br><span class="line">    <span class="number">0xAC</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xE4</span>, <span class="number">0x79</span>, <span class="number">0xE7</span>, <span class="number">0xC8</span>, <span class="number">0x37</span>, <span class="number">0x6D</span>,</span><br><span class="line">    <span class="number">0x8D</span>, <span class="number">0xD5</span>, <span class="number">0x4E</span>, <span class="number">0xA9</span>, <span class="number">0x6C</span>, <span class="number">0x56</span>, <span class="number">0xF4</span>, <span class="number">0xEA</span>, <span class="number">0x65</span>, <span class="number">0x7A</span>,</span><br><span class="line">    <span class="number">0xAE</span>, <span class="number">0x08</span>, <span class="number">0xBA</span>, <span class="number">0x78</span>, <span class="number">0x25</span>, <span class="number">0x2E</span>, <span class="number">0x1C</span>, <span class="number">0xA6</span>, <span class="number">0xB4</span>, <span class="number">0xC6</span>,</span><br><span class="line">    <span class="number">0xE8</span>, <span class="number">0xDD</span>, <span class="number">0x74</span>, <span class="number">0x1F</span>, <span class="number">0x4B</span>, <span class="number">0xBD</span>, <span class="number">0x8B</span>, <span class="number">0x8A</span>, <span class="number">0x70</span>, <span class="number">0x3E</span>,</span><br><span class="line">    <span class="number">0xB5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">0x03</span>, <span class="number">0xF6</span>, <span class="number">0x0E</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xB9</span>,</span><br><span class="line">    <span class="number">0x86</span>, <span class="number">0xC1</span>, <span class="number">0x1D</span>, <span class="number">0x9E</span>, <span class="number">0xE1</span>, <span class="number">0xF8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xD9</span>,</span><br><span class="line">    <span class="number">0x8E</span>, <span class="number">0x94</span>, <span class="number">0x9B</span>, <span class="number">0x1E</span>, <span class="number">0x87</span>, <span class="number">0xE9</span>, <span class="number">0xCE</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xDF</span>,</span><br><span class="line">    <span class="number">0x8C</span>, <span class="number">0xA1</span>, <span class="number">0x89</span>, <span class="number">0x0D</span>, <span class="number">0xBF</span>, <span class="number">0xE6</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>,</span><br><span class="line">    <span class="number">0x2D</span>, <span class="number">0x0F</span>, <span class="number">0xB0</span>, <span class="number">0x54</span>, <span class="number">0xBB</span>, <span class="number">0x16</span></span><br><span class="line">]</span><br><span class="line">charset = [<span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x34</span>, <span class="number">0x35</span>, <span class="number">0x36</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x30</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x65</span>, <span class="number">0x66</span>]</span><br><span class="line">num_array_1 = [</span><br><span class="line">    <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x03</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x02</span>,</span><br><span class="line">    <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x02</span>,</span><br><span class="line">    <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x02</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">num_array_2 = [</span><br><span class="line">    <span class="number">0x61</span>, <span class="number">0x63</span>, <span class="number">0x32</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0x38</span>, <span class="number">0x63</span>, <span class="number">0x39</span>, <span class="number">0x63</span>, <span class="number">0x34</span>,</span><br><span class="line">    <span class="number">0x39</span>, <span class="number">0x34</span>, <span class="number">0x33</span>, <span class="number">0x36</span>, <span class="number">0x65</span>, <span class="number">0x63</span>, <span class="number">0x33</span>, <span class="number">0x31</span>, <span class="number">0x35</span>, <span class="number">0x34</span>,</span><br><span class="line">    <span class="number">0x36</span>, <span class="number">0x39</span>, <span class="number">0x31</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x31</span>, <span class="number">0x64</span>, <span class="number">0x65</span>, <span class="number">0x35</span>,</span><br><span class="line">    <span class="number">0x32</span>, <span class="number">0x63</span>, <span class="number">0x61</span>, <span class="number">0x39</span>, <span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x35</span>, <span class="number">0x31</span>, <span class="number">0x63</span>, <span class="number">0x33</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0x63</span>, <span class="number">0x31</span>, <span class="number">0x33</span>, <span class="number">0x37</span>, <span class="number">0x32</span>, <span class="number">0x32</span>, <span class="number">0x64</span>, <span class="number">0x31</span>, <span class="number">0x31</span>,</span><br><span class="line">    <span class="number">0x61</span>, <span class="number">0x33</span>, <span class="number">0x32</span>, <span class="number">0x35</span>, <span class="number">0x61</span>, <span class="number">0x31</span>, <span class="number">0x38</span>, <span class="number">0x31</span>, <span class="number">0x39</span>, <span class="number">0x38</span>,</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0x31</span>, <span class="number">0x31</span>, <span class="number">0x65</span>, <span class="number">0x39</span>, <span class="number">0x31</span>, <span class="number">0x63</span>, <span class="number">0x61</span>, <span class="number">0x39</span>, <span class="number">0x65</span>,</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0x63</span></span><br><span class="line">]</span><br><span class="line">result = [</span><br><span class="line">    <span class="number">0x376856ABEED8592A</span>, <span class="number">0x3CCF537F7ECA40AB</span>,</span><br><span class="line">    <span class="number">0x92CC25F6240A7A19</span>, <span class="number">0x2DA210592DCCFF78</span></span><br><span class="line">]</span><br><span class="line">r = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    r += struct.pack(<span class="string">&#x27;&lt;Q&#x27;</span>, i)</span><br><span class="line">result = <span class="built_in">list</span>(r)</span><br><span class="line"></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> z <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            new = result[<span class="number">8</span> * j + ((k + <span class="number">1</span>) % <span class="number">8</span>)]</span><br><span class="line">            input_char = result[<span class="number">8</span> * j + k]</span><br><span class="line">            gen_num = data[index]</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">            corp_num = add(gen_num, input_char)</span><br><span class="line">            a_num = array[corp_num]</span><br><span class="line">            shift_num = add(a_num, new)</span><br><span class="line">            shift_num = (shift_num &gt;&gt; <span class="number">7</span>) | ((shift_num &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">            result[<span class="number">8</span> * j + ((k + <span class="number">1</span>) % <span class="number">8</span>)] = shift_num</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    num2 = result[i] &amp; <span class="number">0xF</span></span><br><span class="line">    num1 = result[i] &gt;&gt; <span class="number">4</span></span><br><span class="line">    num1 = change(num1)</span><br><span class="line">    num2 = change(num2)</span><br><span class="line">    num2 = charset.index(num2)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        <span class="keyword">if</span> num2 == (num1 + <span class="number">3</span> * j) % <span class="number">16</span>:</span><br><span class="line">            flag += <span class="built_in">hex</span>(j)[<span class="number">2</span>:]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h2 id="Blast"><a href="#Blast" class="headerlink" title="Blast"></a>Blast</h2><h3 id="去混淆-1"><a href="#去混淆-1" class="headerlink" title="去混淆"></a>去混淆</h3><p>对于这样的混淆，python脚本去掉一下：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904154409708.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">patch</span>(<span class="params">start, end</span>):</span><br><span class="line">i = start</span><br><span class="line"><span class="keyword">while</span> i &lt; end:</span><br><span class="line"><span class="keyword">if</span> GetMnem(i) == <span class="string">&#x27;jnz&#x27;</span> <span class="keyword">and</span> GetMnem(i + <span class="number">6</span>) == <span class="string">&#x27;jmp&#x27;</span> <span class="keyword">and</span> GetOpnd(i + <span class="number">0xb</span>, <span class="number">0</span>) == <span class="string">&#x27;$+5&#x27;</span> <span class="keyword">and</span> GetMnem(i + <span class="number">0xb</span>) == <span class="string">&#x27;jmp&#x27;</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(i))</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, i + <span class="number">0x10</span>):</span><br><span class="line">PatchByte(j, <span class="number">0x90</span>)</span><br><span class="line">i += <span class="number">0xf</span></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> seg <span class="keyword">in</span> Segments():</span><br><span class="line"><span class="keyword">if</span> SegName(seg) == <span class="string">&#x27;.text&#x27;</span>:</span><br><span class="line">patch(seg, <span class="number">0x40B7E4</span>)</span><br></pre></td></tr></table></figure><h3 id="主要逻辑"><a href="#主要逻辑" class="headerlink" title="主要逻辑"></a>主要逻辑</h3><p>Findcrypt发现md5特征，都在一个函数中：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904154646217.png"></p><p>主逻辑通过动调猜测是md5，且是单个字符的md5：</p><p>init_key函数就是上面的md5特征的函数。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904154836442.png"></p><p>这里估计是双重md5：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904155044648.png"></p><p>最后和一堆md5值进行比较：</p><p><img src="/2023/11/21/CTF-wp-1/image-20230904155209395.png"></p><h3 id="exp-5"><a href="#exp-5" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算字符串的 MD5 散列值</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_md5_string</span>(<span class="params">input_string</span>):</span><br><span class="line">    md5_hash = hashlib.md5()</span><br><span class="line">    md5_hash.update(input_string.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> md5_hash.hexdigest()</span><br><span class="line">md5 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>, <span class="number">128</span>):</span><br><span class="line">    md5_str = calculate_md5_string(calculate_md5_string(<span class="built_in">chr</span>(i)))</span><br><span class="line">    md5.append(md5_str)</span><br><span class="line">result = [</span><br><span class="line">    <span class="string">&#x27;14d89c38cd0fb23a14be2798d449c182&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;297e7ca127d2eef674c119331fe30dff&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;b5d2099e49bdb07b8176dff5e23b3c14&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;83be264eb452fcf0a1c322f2c7cbf987&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;71b0438bf46aa26928c7f5a371d619e1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ac49073a7165f41c57eb2c1806a7092e&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ed108f6919ebadc8e809f8b86ef40b05&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;65c162f7c43612ba1bdf4d0f2912bbc0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;557460d317ae874c924e9be336a83cbe&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;9203d8a26e241e63e4b35b3527440998&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;f91b2663febba8a884487f7de5e1d249&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;d7afde3e7059cd0a0fe09eec4b0008cd&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;488c428cd4a8d916deee7c1613c8b2fd&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;45cf8ddfae1d78741d8f1c622689e4af&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;37327bb06c83cb29cefde1963ea588aa&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;23e65a679105b85c5dc7034fded4fb5f&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;71b0438bf46aa26928c7f5a371d619e1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(md5)):</span><br><span class="line">        <span class="keyword">if</span> result[i] == md5[j]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j + <span class="number">30</span>), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="CSGO"><a href="#CSGO" class="headerlink" title="CSGO"></a>CSGO</h2><p>动调发现是换表base64.</p><p><img src="/2023/11/21/CTF-wp-1/3.png"></p><p><img src="/2023/11/21/CTF-wp-1/2.png"></p><p><img src="/2023/11/21/CTF-wp-1/123.png"></p><h2 id="vm-wo"><a href="#vm-wo" class="headerlink" title="vm_wo"></a>vm_wo</h2><p>根据指令码解释一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 26 0 input    body[0] = input</span><br><span class="line"># 25 1 1        body[1] = body[0] &gt;&gt; 1</span><br><span class="line"># 13 2 7        body[2] = body[0] &lt;&lt; 7</span><br><span class="line"># 24 1 2        body[0] = body[1] | body[2]</span><br><span class="line"># 1 0 3         body[0] = body[0] ^ body[3]</span><br><span class="line"># 26 0 body[0]  body[0] = body[0]</span><br><span class="line"># 25 1 2        body[1] = body[0] &gt;&gt; 2</span><br><span class="line"># 13 2 6        body[2] = body[0] &lt;&lt; 6</span><br><span class="line"># 24 1 2        body[0] = body[1] | body[2]</span><br><span class="line"># 1 0 4         body[0] = body[0] ^ body[4]</span><br><span class="line"># 26 0 body[0]  body[0] = body[0]</span><br><span class="line"># 25 1 3        body[1] = body[0] &gt;&gt; 3</span><br><span class="line"># 13 2 5        body[2] = body[0] &lt;&lt; 5</span><br><span class="line"># 24 1 2        body[0] = body[1] | body[2]</span><br><span class="line"># 1 0 5         body[0] = body[0] ^ body[5]</span><br><span class="line"># 26 0 body[0]  body[0] = body[0]</span><br><span class="line"># 25 1 4        body[1] = body[0] &gt;&gt; 4</span><br><span class="line"># 13 2 4        body[2] = body[0] &lt;&lt; 4</span><br><span class="line"># 24 1 2        body[0] = body[1] | body[2]</span><br><span class="line"># 1 0 6         body[0] = body[0] ^ body[6]</span><br></pre></td></tr></table></figure><h3 id="exp-6"><a href="#exp-6" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">result = [<span class="number">0xDF</span>, <span class="number">0xD5</span>, <span class="number">0xF1</span>, <span class="number">0xD1</span>, <span class="number">0xFF</span>, <span class="number">0xDB</span>, <span class="number">0xA1</span>, <span class="number">0xA5</span>, <span class="number">0x89</span>, <span class="number">0xBD</span>, <span class="number">0xE9</span>, <span class="number">0x95</span>, <span class="number">0xB3</span>, <span class="number">0x9D</span>, <span class="number">0xE9</span>, <span class="number">0xB3</span>, <span class="number">0x85</span>, <span class="number">0x99</span>, <span class="number">0x87</span>, <span class="number">0xBF</span>, <span class="number">0xE9</span>, <span class="number">0xB1</span>, <span class="number">0x89</span>, <span class="number">0xE9</span>, <span class="number">0x91</span>, <span class="number">0x89</span>, <span class="number">0x89</span>, <span class="number">0x8F</span>, <span class="number">0xAD</span>]</span><br><span class="line">key = struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, <span class="number">0xBEEDBEEF</span>)</span><br><span class="line"><span class="built_in">print</span>(key)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    num = result[i]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">3</span>) | ((num &lt;&lt; <span class="number">5</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    num ^= key[<span class="number">3</span>]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">4</span>) | ((num &lt;&lt; <span class="number">4</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    num ^= key[<span class="number">2</span>]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">5</span>) | ((num &lt;&lt; <span class="number">3</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    num ^= key[<span class="number">1</span>]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">6</span>) | ((num &lt;&lt; <span class="number">2</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    num ^= key[<span class="number">0</span>]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">7</span>) | ((num &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    result[i] = num</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytearray</span>(result))</span><br></pre></td></tr></table></figure><h2 id="Ez加密器"><a href="#Ez加密器" class="headerlink" title="Ez加密器"></a>Ez加密器</h2><h3 id="去混淆-2"><a href="#去混淆-2" class="headerlink" title="去混淆"></a>去混淆</h3><h4 id="代码1"><a href="#代码1" class="headerlink" title="代码1"></a>代码1</h4><p>a &#x3D; a + b</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">args: a, b</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    t = a &amp; b;</span><br><span class="line">    a ^= b;</span><br><span class="line">    b = <span class="number">2</span> * t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ( <span class="number">2</span> * t );</span><br></pre></td></tr></table></figure><p>对应汇编：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">loc_7FF73D0A1AF8:</span><br><span class="line">mov     ebp, ecx</span><br><span class="line">and     ebp, eax</span><br><span class="line">xor     eax, ecx</span><br><span class="line">mov     ecx, ebp</span><br><span class="line">add     ecx, ecx  // add：如果加法结果为0，更改zf寄存器为1</span><br><span class="line">jnz     short loc_7FF73D0A1AF8</span><br></pre></td></tr></table></figure><p>可简化为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addeax, ecx</span><br></pre></td></tr></table></figure><h4 id="代码2"><a href="#代码2" class="headerlink" title="代码2"></a>代码2</h4><p>eax &#x3D; ~(eax % 8)</p><p>汇编：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// eax = eax % 8</span><br><span class="line">mov     ecx, eax</span><br><span class="line">sar     ecx, 1Fh</span><br><span class="line">shr     ecx, 1Dh</span><br><span class="line">add     eax, ecx</span><br><span class="line">and     eax, 7</span><br><span class="line">sub     eax, ecx</span><br><span class="line"></span><br><span class="line">// eax = ~eax</span><br><span class="line">not     eax</span><br></pre></td></tr></table></figure><h4 id="代码3"><a href="#代码3" class="headerlink" title="代码3"></a>代码3</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">args: v10</span><br><span class="line"></span><br><span class="line">v9 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span> <span class="comment">// v10 = v10 + v9</span></span><br><span class="line">&#123;</span><br><span class="line">    v11 = v9;</span><br><span class="line">    v12 = v10;</span><br><span class="line">    v13 = v9 &amp; v10;</span><br><span class="line">    v10 ^= v11;</span><br><span class="line">    v9 = <span class="number">2</span> * v13;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ( v9 );</span><br><span class="line">v14 = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">if</span> ( v12 != v11 ) <span class="comment">// 即 上面循环结果 v10 != 0</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">do</span> <span class="comment">// v14 = v14 + v10</span></span><br><span class="line">    &#123;</span><br><span class="line">        v15 = v14 &amp; v10;</span><br><span class="line">        v14 ^= v10;</span><br><span class="line">        v10 = <span class="number">2</span> * v15;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="number">2</span> * v15 );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>汇编：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">loc_7FF7F3181B28:              </span><br><span class="line">mov     r12d, ecx</span><br><span class="line">mov     ecx, eax</span><br><span class="line">mov     r13d, eax</span><br><span class="line">and     ecx, r12d</span><br><span class="line">xor     eax, r12d</span><br><span class="line">add     ecx, ecx</span><br><span class="line">jnz     short loc_7FF7F3181B28</span><br><span class="line">mov     ecx, 7</span><br><span class="line">cmp     r13d, r12d</span><br><span class="line">jz      short loc_7FF7F3181B57</span><br><span class="line">nop     dword ptr [rax+00h]</span><br><span class="line">loc_7FF7F3181B48:              </span><br><span class="line">mov     r12d, eax</span><br><span class="line">and     r12d, ecx</span><br><span class="line">xor     ecx, eax</span><br><span class="line">mov     eax, r12d</span><br><span class="line">add     eax, eax</span><br><span class="line">jnz     short loc_7FF7F3181B48</span><br><span class="line">loc_7FF7F3181B57:</span><br><span class="line">xxxxxx</span><br></pre></td></tr></table></figure><p>可转化为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">args: v10, v9, v14</span><br><span class="line"><span class="keyword">if</span> v10 + v9 != <span class="number">0</span>:</span><br><span class="line">v14 = v14 + v10 + v9</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">v14 = v14</span><br></pre></td></tr></table></figure><p>汇编：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add     eax, ecx</span><br><span class="line">mov     ecx, 7</span><br><span class="line">cmp     eax, 0</span><br><span class="line">jz      short loc_7FF73D0A1B57</span><br><span class="line">add     ecx, eax</span><br><span class="line">loc_7FF73D0A1B57:</span><br><span class="line">xxxxxx</span><br></pre></td></tr></table></figure><h4 id="代码4"><a href="#代码4" class="headerlink" title="代码4"></a>代码4</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">args: v17</span><br><span class="line">v16 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span> <span class="comment">// v17 = v17 + v16</span></span><br><span class="line">&#123;</span><br><span class="line">    v19 = v16;</span><br><span class="line">    v20 = v17 &amp; v16;</span><br><span class="line">    v21 = v17;</span><br><span class="line">    v17 ^= v19;</span><br><span class="line">    v16 = <span class="number">2</span> * v20;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ( v16 );</span><br><span class="line"><span class="keyword">if</span> ( v19 == v21 ) <span class="comment">// v17 == 0</span></span><br><span class="line">&#123;</span><br><span class="line">    LOBYTE(v24) = <span class="number">0x80</span>; <span class="comment">// v24 = 1 &lt;&lt; 7</span></span><br><span class="line">      <span class="comment">// 也是：v24 = 1 &lt;&lt; (7 + 1 + v17)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    v22 = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">do</span> <span class="comment">// v22 = v22 + v17</span></span><br><span class="line">    &#123;</span><br><span class="line">        v23 = v22 &amp; v17;</span><br><span class="line">        v22 ^= v17;</span><br><span class="line">        v17 = <span class="number">2</span> * v23;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="number">2</span> * v23 );</span><br><span class="line">    v24 = <span class="number">1</span> &lt;&lt; v22; <span class="comment">// v24 = 1 &lt;&lt; (7 + 1 + v17)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可转化为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v24 = <span class="number">1</span> &lt;&lt; (<span class="number">7</span> + <span class="number">1</span> + v17)</span><br></pre></td></tr></table></figure><h4 id="代码5"><a href="#代码5" class="headerlink" title="代码5"></a>代码5</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~(a % <span class="number">8</span>) + <span class="number">1</span> 等于 -(a &amp; <span class="number">8</span>)</span><br></pre></td></tr></table></figure><h4 id="脚本去混淆"><a href="#脚本去混淆" class="headerlink" title="脚本去混淆"></a>脚本去混淆</h4><p>对单个函数的以上混淆去掉。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keystone <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_asm</span>(<span class="params">code</span>):</span><br><span class="line">    ks = Ks(KS_ARCH_X86, KS_MODE_64)</span><br><span class="line">    asm, cnt = ks.asm(code)</span><br><span class="line">    <span class="keyword">return</span> asm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle</span>(<span class="params">addr, add_bias, jnz_bias</span>):</span><br><span class="line">    add_num = GetOpnd(addr + add_bias, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, add_bias):</span><br><span class="line">        <span class="keyword">if</span> GetMnem(addr + i) == <span class="string">&quot;xor&quot;</span>:</span><br><span class="line">            result = GetOpnd(addr + i, <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> add_num <span class="keyword">and</span> result:</span><br><span class="line">        Jump(addr)</span><br><span class="line">        mnem = <span class="string">f&quot;add <span class="subst">&#123;result&#125;</span>, <span class="subst">&#123;add_num&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(mnem)</span><br><span class="line">        asm = get_asm(mnem)</span><br><span class="line">        <span class="built_in">print</span>(asm)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">            PatchByte(addr + i, asm[i])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm), jnz_bias + <span class="number">2</span>):</span><br><span class="line">            PatchByte(addr + i, <span class="number">0x90</span>)</span><br><span class="line">        <span class="keyword">if</span> GetMnem(addr + jnz_bias + <span class="number">2</span>) == <span class="string">&quot;cmp&quot;</span>:</span><br><span class="line">            cmp_bias = jnz_bias + <span class="number">2</span></span><br><span class="line">            mnem = <span class="string">f&quot;cmp <span class="subst">&#123;result&#125;</span>,0&quot;</span></span><br><span class="line">            <span class="built_in">print</span>(mnem)</span><br><span class="line">            asm = get_asm(mnem)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;[<span class="built_in">hex</span>(_) <span class="keyword">for</span> _ <span class="keyword">in</span> asm]&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;idaapi.get_item_size(addr + cmp_bias) == <span class="built_in">len</span>(asm)&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(asm) == idaapi.get_item_size(addr + cmp_bias):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;hahahahahahahh&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;patch&quot;</span>)</span><br><span class="line">                    PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">len</span>(asm) &lt; idaapi.get_item_size(addr + cmp_bias):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                    PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm), idaapi.get_item_size(addr + cmp_bias)):</span><br><span class="line">                    PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">len</span>(asm) &gt; idaapi.get_item_size(addr + cmp_bias):</span><br><span class="line">                cmp_len = idaapi.get_item_size(addr + cmp_bias)</span><br><span class="line">                code1_len = idaapi.get_item_size(addr + cmp_bias + cmp_len)</span><br><span class="line">                code2_len = idaapi.get_item_size(addr + cmp_bias + cmp_len + code1_len)</span><br><span class="line">                <span class="keyword">if</span> GetMnem(addr + cmp_bias + cmp_len) == <span class="string">&quot;nop&quot;</span>:</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm), cmp_len + code1_len):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">                <span class="keyword">elif</span> GetMnem(addr + cmp_bias + cmp_len + code1_len) == <span class="string">&quot;nop&quot;</span>:</span><br><span class="line">                    <span class="keyword">if</span> GetMnem(addr + cmp_bias + cmp_len) == <span class="string">&quot;jz&quot;</span>:</span><br><span class="line">                        <span class="keyword">if</span> code1_len == <span class="number">6</span>:</span><br><span class="line">                            ori_jmp = Dword(addr + cmp_bias + cmp_len + <span class="number">2</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code2_len</span><br><span class="line">                            jmp_data = struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, new_jmp)</span><br><span class="line">                            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(jmp_data)):</span><br><span class="line">                                PatchByte(addr + cmp_bias + cmp_len + <span class="number">2</span> + i, jmp_data[i])</span><br><span class="line">                        <span class="keyword">elif</span> code1_len == <span class="number">2</span>:</span><br><span class="line">                            ori_jmp = Byte(addr + cmp_bias + cmp_len + <span class="number">1</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code2_len</span><br><span class="line">                            PatchByte(addr + cmp_bias + cmp_len + <span class="number">1</span>, new_jmp)</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cmp_len + code1_len, cmp_len + code1_len + code2_len):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cmp_len + code1_len + code2_len - <span class="number">1</span>, cmp_len + code2_len - <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, Byte(addr + cmp_bias + i - code2_len))</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm), cmp_len + code2_len):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">                <span class="keyword">elif</span> GetMnem(addr + cmp_bias + cmp_len + code1_len + code2_len) == <span class="string">&quot;nop&quot;</span>:</span><br><span class="line">                    code3_len = idaapi.get_item_size(addr + cmp_bias + cmp_len + code1_len + code2_len)</span><br><span class="line">                    <span class="keyword">if</span> GetMnem(addr + cmp_bias + cmp_len) == <span class="string">&quot;jz&quot;</span>:</span><br><span class="line">                        <span class="keyword">if</span> code1_len == <span class="number">6</span>:</span><br><span class="line">                            ori_jmp = Dword(addr + cmp_bias + cmp_len + <span class="number">2</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code3_len</span><br><span class="line">                            jmp_data = struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, new_jmp)</span><br><span class="line">                            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(jmp_data)):</span><br><span class="line">                                PatchByte(addr + cmp_bias + cmp_len + <span class="number">2</span> + i, jmp_data[i])</span><br><span class="line">                        <span class="keyword">elif</span> code1_len == <span class="number">2</span>:</span><br><span class="line">                            ori_jmp = Byte(addr + cmp_bias + cmp_len + <span class="number">1</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code3_len</span><br><span class="line">                            PatchByte(addr + cmp_bias + cmp_len + <span class="number">1</span>, new_jmp)</span><br><span class="line">                    <span class="keyword">elif</span> GetMnem(addr + cmp_bias + cmp_len + code1_len) == <span class="string">&quot;jz&quot;</span>:</span><br><span class="line">                        <span class="keyword">if</span> code2_len == <span class="number">6</span>:</span><br><span class="line">                            ori_jmp = Dword(addr + cmp_bias + cmp_len + code1_len + <span class="number">2</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code3_len</span><br><span class="line">                            jmp_data = struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, new_jmp)</span><br><span class="line">                            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(jmp_data)):</span><br><span class="line">                                PatchByte(addr + cmp_bias + cmp_len + code1_len + <span class="number">2</span> + i, jmp_data[i])</span><br><span class="line">                        <span class="keyword">elif</span> code2_len == <span class="number">2</span>:</span><br><span class="line">                            ori_jmp = Byte(addr + cmp_bias + cmp_len + code1_len + <span class="number">1</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code3_len</span><br><span class="line">                            PatchByte(addr + cmp_bias + cmp_len + code1_len + <span class="number">1</span>, new_jmp)</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cmp_len + code1_len + code2_len, cmp_len + code1_len + code2_len + code3_len):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;nop <span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i)&#125;</span>&quot;</span>)</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cmp_len + code1_len + code2_len + code3_len - <span class="number">1</span>, cmp_len + code3_len - <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                        <span class="built_in">print</span>(</span><br><span class="line">                            <span class="string">f&quot;<span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i - code3_len)&#125;</span>:<span class="subst">&#123;Byte(addr + cmp_bias + i - code3_len)&#125;</span> -&gt; <span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i)&#125;</span>:<span class="subst">&#123;Byte(addr + cmp_bias + i)&#125;</span>&quot;</span>)</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, Byte(addr + cmp_bias + i - code3_len))</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;asm[i]&#125;</span> -&gt; <span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i)&#125;</span>:<span class="subst">&#123;Byte(addr + cmp_bias + i)&#125;</span>&quot;</span>)</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm), cmp_len + code3_len):</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;nop <span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i)&#125;</span>&quot;</span>)</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">        <span class="keyword">elif</span> GetMnem(addr + jnz_bias + <span class="number">7</span>) == <span class="string">&quot;cmp&quot;</span>:</span><br><span class="line">            cmp_bias = jnz_bias + <span class="number">7</span></span><br><span class="line">            mnem = <span class="string">f&quot;cmp <span class="subst">&#123;result&#125;</span>,0&quot;</span></span><br><span class="line">            <span class="built_in">print</span>(mnem)</span><br><span class="line">            asm = get_asm(mnem)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(asm) == idaapi.get_item_size(addr + cmp_bias):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                    PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">len</span>(asm) &lt; idaapi.get_item_size(addr + cmp_bias):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                    PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm), idaapi.get_item_size(addr + cmp_bias)):</span><br><span class="line">                    PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">len</span>(asm) &gt; idaapi.get_item_size(addr + cmp_bias):</span><br><span class="line">                cmp_len = idaapi.get_item_size(addr + cmp_bias)</span><br><span class="line">                code1_len = idaapi.get_item_size(addr + cmp_bias + cmp_len)</span><br><span class="line">                code2_len = idaapi.get_item_size(addr + cmp_bias + cmp_len + code1_len)</span><br><span class="line">                <span class="keyword">if</span> GetMnem(addr + cmp_bias + cmp_len) == <span class="string">&quot;nop&quot;</span>:</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm), cmp_len + code1_len):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">                <span class="keyword">elif</span> GetMnem(addr + cmp_bias + cmp_len + code1_len) == <span class="string">&quot;nop&quot;</span>:</span><br><span class="line">                    <span class="keyword">if</span> GetMnem(addr + cmp_bias + cmp_len) == <span class="string">&quot;jz&quot;</span>:</span><br><span class="line">                        <span class="keyword">if</span> code1_len == <span class="number">6</span>:</span><br><span class="line">                            ori_jmp = Dword(addr + cmp_bias + cmp_len + <span class="number">2</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code2_len</span><br><span class="line">                            jmp_data = struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, new_jmp)</span><br><span class="line">                            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(jmp_data)):</span><br><span class="line">                                PatchByte(addr + cmp_bias + cmp_len + <span class="number">2</span> + i, jmp_data[i])</span><br><span class="line">                        <span class="keyword">elif</span> code1_len == <span class="number">2</span>:</span><br><span class="line">                            ori_jmp = Byte(addr + cmp_bias + cmp_len + <span class="number">1</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code2_len</span><br><span class="line">                            PatchByte(addr + cmp_bias + cmp_len + <span class="number">1</span>, new_jmp)</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cmp_len + code1_len, cmp_len + code1_len + code2_len):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cmp_len + code1_len + code2_len - <span class="number">1</span>, cmp_len + code2_len - <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, Byte(addr + cmp_bias + i - code2_len))</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm), cmp_len + code2_len):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">                <span class="keyword">elif</span> GetMnem(addr + cmp_bias + cmp_len + code1_len + code2_len) == <span class="string">&quot;nop&quot;</span>:</span><br><span class="line">                    code3_len = idaapi.get_item_size(addr + cmp_bias + cmp_len + code1_len + code2_len)</span><br><span class="line">                    <span class="keyword">if</span> GetMnem(addr + cmp_bias + cmp_len) == <span class="string">&quot;jz&quot;</span>:</span><br><span class="line">                        <span class="keyword">if</span> code1_len == <span class="number">6</span>:</span><br><span class="line">                            ori_jmp = Dword(addr + cmp_bias + cmp_len + <span class="number">2</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code3_len</span><br><span class="line">                            jmp_data = struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, new_jmp)</span><br><span class="line">                            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(jmp_data)):</span><br><span class="line">                                PatchByte(addr + cmp_bias + cmp_len + <span class="number">2</span> + i, jmp_data[i])</span><br><span class="line">                        <span class="keyword">elif</span> code1_len == <span class="number">2</span>:</span><br><span class="line">                            ori_jmp = Byte(addr + cmp_bias + cmp_len + <span class="number">1</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code3_len</span><br><span class="line">                            PatchByte(addr + cmp_bias + cmp_len + <span class="number">1</span>, new_jmp)</span><br><span class="line">                    <span class="keyword">elif</span> GetMnem(addr + cmp_bias + cmp_len + code1_len) == <span class="string">&quot;jz&quot;</span>:</span><br><span class="line">                        <span class="keyword">if</span> code2_len == <span class="number">6</span>:</span><br><span class="line">                            ori_jmp = Dword(addr + cmp_bias + cmp_len + code1_len + <span class="number">2</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code3_len</span><br><span class="line">                            jmp_data = struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, new_jmp)</span><br><span class="line">                            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(jmp_data)):</span><br><span class="line">                                PatchByte(addr + cmp_bias + cmp_len + code1_len + <span class="number">2</span> + i, jmp_data[i])</span><br><span class="line">                        <span class="keyword">elif</span> code2_len == <span class="number">2</span>:</span><br><span class="line">                            ori_jmp = Byte(addr + cmp_bias + cmp_len + code1_len + <span class="number">1</span>)</span><br><span class="line">                            new_jmp = ori_jmp - code3_len</span><br><span class="line">                            PatchByte(addr + cmp_bias + cmp_len + code1_len + <span class="number">1</span>, new_jmp)</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cmp_len + code1_len + code2_len, cmp_len + code1_len + code2_len + code3_len):</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;nop <span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i)&#125;</span>&quot;</span>)</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cmp_len + code1_len + code2_len + code3_len - <span class="number">1</span>, cmp_len + code3_len - <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                        <span class="built_in">print</span>(</span><br><span class="line">                            <span class="string">f&quot;<span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i - code3_len)&#125;</span>:<span class="subst">&#123;Byte(addr + cmp_bias + i - code3_len)&#125;</span> -&gt; <span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i)&#125;</span>:<span class="subst">&#123;Byte(addr + cmp_bias + i)&#125;</span>&quot;</span>)</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, Byte(addr + cmp_bias + i - code3_len))</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm)):</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;asm[i]&#125;</span> -&gt; <span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i)&#125;</span>:<span class="subst">&#123;Byte(addr + cmp_bias + i)&#125;</span>&quot;</span>)</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, asm[i])</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(asm), cmp_len + code3_len):</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;nop <span class="subst">&#123;<span class="built_in">hex</span>(addr + cmp_bias + i)&#125;</span>&quot;</span>)</span><br><span class="line">                        PatchByte(addr + cmp_bias + i, <span class="number">0x90</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">seg_addr = idc.here()</span><br><span class="line">fun_start = idc.get_func_off_str(seg_addr)</span><br><span class="line"><span class="comment"># print(fun_start)</span></span><br><span class="line">fun_start = seg_addr - <span class="built_in">int</span>(fun_start.split(<span class="string">&quot;+&quot;</span>)[<span class="number">1</span>], <span class="number">16</span>)</span><br><span class="line"><span class="comment"># fun_start = int(re.search(r&#x27;sub_(\w+):&#x27;, fun_start)[1],16)</span></span><br><span class="line">fun_end = idc.find_func_end(seg_addr)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(fun_start), <span class="built_in">hex</span>(fun_end))</span><br><span class="line"><span class="keyword">for</span> addr <span class="keyword">in</span> <span class="built_in">range</span>(fun_start, fun_end):</span><br><span class="line">    <span class="keyword">if</span> GetMnem(addr + <span class="number">0xb</span>) == <span class="string">&quot;add&quot;</span> <span class="keyword">and</span> GetMnem(addr + <span class="number">0xd</span>) == <span class="string">&quot;jnz&quot;</span> <span class="keyword">and</span> GetMnem(addr) == <span class="string">&quot;mov&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr))</span><br><span class="line">        handle(addr, <span class="number">0xb</span>, <span class="number">0xd</span>)</span><br><span class="line">    <span class="keyword">elif</span> GetMnem(addr + <span class="number">0x9</span>) == <span class="string">&quot;add&quot;</span> <span class="keyword">and</span> GetMnem(addr + <span class="number">0xb</span>) == <span class="string">&quot;jnz&quot;</span> <span class="keyword">and</span> GetMnem(addr) == <span class="string">&quot;mov&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr))</span><br><span class="line">        handle(addr, <span class="number">0x9</span>, <span class="number">0xb</span>)</span><br><span class="line">    <span class="keyword">elif</span> GetMnem(addr + <span class="number">0x8</span>) == <span class="string">&quot;add&quot;</span> <span class="keyword">and</span> GetMnem(addr + <span class="number">0xa</span>) == <span class="string">&quot;jnz&quot;</span> <span class="keyword">and</span> GetMnem(addr) == <span class="string">&quot;mov&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr))</span><br><span class="line">        handle(addr, <span class="number">0x8</span>, <span class="number">0xa</span>)</span><br><span class="line">    <span class="keyword">elif</span> GetMnem(addr + <span class="number">0x8</span>) == <span class="string">&quot;add&quot;</span> <span class="keyword">and</span> GetMnem(addr + <span class="number">0xd</span>) == <span class="string">&quot;jnz&quot;</span> <span class="keyword">and</span> GetMnem(addr) == <span class="string">&quot;mov&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr))</span><br><span class="line">        handle(addr, <span class="number">0x8</span>, <span class="number">0xd</span>)</span><br><span class="line">    <span class="keyword">elif</span> GetMnem(addr + <span class="number">0x6</span>) == <span class="string">&quot;add&quot;</span> <span class="keyword">and</span> GetMnem(addr + <span class="number">0xa</span>) == <span class="string">&quot;jnz&quot;</span> <span class="keyword">and</span> GetMnem(addr) == <span class="string">&quot;mov&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr))</span><br><span class="line">        handle(addr, <span class="number">0x6</span>, <span class="number">0xa</span>)</span><br><span class="line">    <span class="keyword">elif</span> GetMnem(addr + <span class="number">12</span>) == <span class="string">&quot;add&quot;</span> <span class="keyword">and</span> GetMnem(addr + <span class="number">15</span>) == <span class="string">&quot;jnz&quot;</span> <span class="keyword">and</span> GetMnem(addr) == <span class="string">&quot;mov&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr))</span><br><span class="line">        handle(addr, <span class="number">12</span>, <span class="number">15</span>)</span><br><span class="line">    <span class="keyword">elif</span> GetMnem(addr + <span class="number">12</span>) == <span class="string">&quot;add&quot;</span> <span class="keyword">and</span> GetMnem(addr + <span class="number">14</span>) == <span class="string">&quot;jnz&quot;</span> <span class="keyword">and</span> GetMnem(addr) == <span class="string">&quot;mov&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr))</span><br><span class="line">        handle(addr, <span class="number">12</span>, <span class="number">14</span>)</span><br><span class="line">    <span class="keyword">elif</span> GetMnem(addr + <span class="number">10</span>) == <span class="string">&quot;add&quot;</span> <span class="keyword">and</span> GetMnem(addr + <span class="number">12</span>) == <span class="string">&quot;jnz&quot;</span> <span class="keyword">and</span> GetMnem(addr) == <span class="string">&quot;mov&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">hex</span>(addr))</span><br><span class="line">        handle(addr, <span class="number">10</span>, <span class="number">12</span>)</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>网上大伙的wp都说是DES，但说实话除了找到数据特征是DES，以及最后对输入处理都是与和或，没看出大概DES &#x2F;(ㄒoㄒ)&#x2F;。</p><p><img src="/2023/11/21/CTF-wp-1/image-20230908122758787.png"></p><p>爆破6位code（0-999999），进行换表base64作为DES密钥。</p><p>这里给出网上的exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="string">&quot;DASCTF&#123;1234567890abcdef1234567890abcdef&#125;&quot;</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> DES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">key = <span class="built_in">bytes</span>([<span class="number">0x6D</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x50</span>, <span class="number">0x6E</span>, <span class="number">0x64</span>, <span class="number">0x75</span>, <span class="number">0x53</span> ])</span><br><span class="line"><span class="built_in">print</span>(key)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">base64_encode</span>(<span class="params">data</span>):</span><br><span class="line">    oldtable=<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span><span class="comment">#老表</span></span><br><span class="line">    newtable=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+/&#x27;</span><span class="comment">#这里输入魔改变表</span></span><br><span class="line">    tmp = base64.b64encode(data.encode()).decode()</span><br><span class="line">    result=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> tmp:</span><br><span class="line">        result +=newtable[oldtable.index(ch)]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">## key = base64_encode(&quot;123456&quot;)</span></span><br><span class="line"><span class="comment">## print(key)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">1000000</span>):</span><br><span class="line">    tmp_key = <span class="built_in">str</span>(i).rjust(<span class="number">6</span>,<span class="string">&quot;0&quot;</span>)</span><br><span class="line">    tmp_key = base64_encode(tmp_key)</span><br><span class="line">    <span class="comment">#print(tmp_key)</span></span><br><span class="line">    des = DES.new(tmp_key.encode(),mode=DES.MODE_ECB)</span><br><span class="line">    c = <span class="built_in">bytes</span>.fromhex(<span class="string">&quot;0723105D5C12217DCDC3601F5ECB54DA9CCEC2279F1684A13A0D716D17217F4C9EA85FF1A42795731CA3C55D3A4D7BEA&quot;</span>)</span><br><span class="line">    m = des.decrypt(c)</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">b&quot;DAS&quot;</span> <span class="keyword">in</span> m):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="built_in">print</span>(m)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子取证</title>
      <link href="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/"/>
      <url>/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h1 id="volatity2"><a href="#volatity2" class="headerlink" title="volatity2"></a>volatity2</h1><p>volatity2 为 python2使用的，其所需的库也要用python2的pip下载。</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">Volatility Foundation Volatility Framework 2.6</span><br><span class="line">用法： Volatility - 内存取证分析平台</span><br><span class="line"> </span><br><span class="line">Options:</span><br><span class="line">  -h, --help            列出所有可用选项及其默认值</span><br><span class="line">                        默认值可以在配置文件中设置</span><br><span class="line">                        (/etc/volatilityrc)</span><br><span class="line">  --conf-file=/home/kali/.volatilityrc</span><br><span class="line">                        基于用户的配置文件</span><br><span class="line">  -d, --debug           调试Volatility</span><br><span class="line">  --plugins=PLUGINS     要使用的其他插件目录（冒号分隔）</span><br><span class="line">  --info                打印所有注册对象的信息</span><br><span class="line">  --cache-directory=/home/kali/.cache/volatility</span><br><span class="line">                        存放缓存文件的目录</span><br><span class="line">  --cache               使用缓存</span><br><span class="line">  --tz=TZ               设置 (Olson) 时区以使用 pytz（如果已安装）或 tzset 显示时间戳</span><br><span class="line">  -f FILENAME, --filename=FILENAME</span><br><span class="line">                        打开图像时使用的文件名</span><br><span class="line">  --profile=WinXPSP2x86</span><br><span class="line">                        要加载的配置文件的名称（使用 --info 查看支持的配置文件列表）</span><br><span class="line">  -l LOCATION, --location=LOCATION</span><br><span class="line">                        从中加载地址空间的 URN 位置</span><br><span class="line">  -w, --write           启用写支持</span><br><span class="line">  --dtb=DTB             DTB 地址</span><br><span class="line">  --shift=SHIFT         Mac KASLR 移位地址</span><br><span class="line">  --output=text         以这种格式输出（支持特定于模块，请参阅下面的模块输出选项）</span><br><span class="line">  --output-file=OUTPUT_FILE</span><br><span class="line">                        在此文件中写入输出</span><br><span class="line">  -v, --verbose         详细信息</span><br><span class="line">  -g KDBG, --kdbg=KDBG  指定一个 KDBG 虚拟地址（注意：对于 64 位 Windows 8 及更高版本，这是 KdCopyDataBlock 的地址）</span><br><span class="line">  --force               强制使用可疑配置文件</span><br><span class="line">  -k KPCR, --kpcr=KPCR  指定特定的 KPCR 地址</span><br><span class="line">  --cookie=COOKIE       指定 nt!ObHeaderCookie 的地址（仅适用于 Windows 10）</span><br><span class="line"> </span><br><span class="line">支持的插件命令:</span><br><span class="line"> </span><br><span class="line">amcache        查看AmCache应用程序痕迹信息</span><br><span class="line">apihooks       检测内核及进程的内存空间中的API hook</span><br><span class="line">atoms          列出会话及窗口站atom表</span><br><span class="line">atomscan       Atom表的池扫描(Pool scanner)</span><br><span class="line">auditpol       列出注册表HKLMSECURITYPolicyPolAdtEv的审计策略信息</span><br><span class="line">bigpools       使用BigPagePoolScanner转储大分页池(big page pools)</span><br><span class="line">bioskbd        从实时模式内存中读取键盘缓冲数据(早期电脑可以读取出BIOS开机密码)</span><br><span class="line">cachedump      获取内存中缓存的域帐号的密码哈希</span><br><span class="line">callbacks      打印全系统通知例程</span><br><span class="line">clipboard      提取Windows剪贴板中的内容</span><br><span class="line">cmdline        显示进程命令行参数</span><br><span class="line">cmdscan        提取执行的命令行历史记录（扫描_COMMAND_HISTORY信息）</span><br><span class="line">connections    打印系统打开的网络连接(仅支持Windows XP 和2003)</span><br><span class="line">connscan       打印TCP连接信息</span><br><span class="line">consoles       提取执行的命令行历史记录（扫描_CONSOLE_INFORMATION信息）</span><br><span class="line">crashinfo      提取崩溃转储信息</span><br><span class="line">deskscan       tagDESKTOP池扫描(Poolscaner)</span><br><span class="line">devicetree     显示设备树信息</span><br><span class="line">dlldump        从进程地址空间转储动态链接库</span><br><span class="line">dlllist        打印每个进程加载的动态链接库列表</span><br><span class="line">driverirp      IRP hook驱动检测</span><br><span class="line">drivermodule   关联驱动对象至内核模块</span><br><span class="line">driverscan     驱动对象池扫描</span><br><span class="line">dumpcerts      提取RAS私钥及SSL公钥</span><br><span class="line">dumpfiles      提取内存中映射或缓存的文件</span><br><span class="line">dumpregistry   转储内存中注册表信息至磁盘</span><br><span class="line">editbox        查看Edit编辑控件信息 (Listbox正在实验中)</span><br><span class="line">envars         显示进程的环境变量</span><br><span class="line">eventhooks     打印Windows事件hook详细信息</span><br><span class="line">evtlogs        提取Windows事件日志（仅支持XP/2003)</span><br><span class="line">filescan       提取文件对象（file objects）池信息</span><br><span class="line">gahti          转储用户句柄（handle）类型信息</span><br><span class="line">gditimers      打印已安装的GDI计时器(timers)及回调(callbacks)</span><br><span class="line">gdt            显示全局描述符表(Global Deor Table)</span><br><span class="line">getservicesids 获取注册表中的服务名称并返回SID信息</span><br><span class="line">getsids        打印每个进程的SID信息</span><br><span class="line">handles        打印每个进程打开的句柄的列表</span><br><span class="line">hashdump       转储内存中的Windows帐户密码哈希(LM/NTLM)</span><br><span class="line">hibinfo        转储休眠文件信息</span><br><span class="line">hivedump       打印注册表配置单元信息</span><br><span class="line">hivelist       打印注册表配置单元列表</span><br><span class="line">hivescan       注册表配置单元池扫描</span><br><span class="line">hpakextract    从HPAK文件（Fast Dump格式）提取物理内存数据</span><br><span class="line">hpakinfo       查看HPAK文件属性及相关信息</span><br><span class="line">idt            显示中断描述符表(Interrupt Deor Table)</span><br><span class="line">iehistory      重建IE缓存及访问历史记录</span><br><span class="line">imagecopy      将物理地址空间导出原生DD镜像文件</span><br><span class="line">imageinfo      查看/识别镜像信息</span><br><span class="line">impscan        扫描对导入函数的调用</span><br><span class="line">joblinks       打印进程任务链接信息</span><br><span class="line">kdbgscan       搜索和转储潜在KDBG值</span><br><span class="line">kpcrscan       搜索和转储潜在KPCR值</span><br><span class="line">ldrmodules     检测未链接的动态链接DLL</span><br><span class="line">lsadump        从注册表中提取LSA密钥信息（已解密）</span><br><span class="line">machoinfo      转储Mach-O 文件格式信息</span><br><span class="line">malfind        查找隐藏的和插入的代码</span><br><span class="line">mbrparser      扫描并解析潜在的主引导记录(MBR)</span><br><span class="line">memdump        转储进程的可寻址内存</span><br><span class="line">memmap         打印内存映射</span><br><span class="line">messagehooks   桌面和窗口消息钩子的线程列表</span><br><span class="line">mftparser      扫描并解析潜在的MFT条目</span><br><span class="line">moddump        转储内核驱动程序到可执行文件的示例</span><br><span class="line">modscan        内核模块池扫描</span><br><span class="line">modules        打印加载模块的列表</span><br><span class="line">multiscan      批量扫描各种对象</span><br><span class="line">mutantscan     对互斥对象池扫描</span><br><span class="line">notepad        查看记事本当前显示的文本</span><br><span class="line">objtypescan    扫描窗口对象类型对象</span><br><span class="line">patcher        基于页面扫描的补丁程序内存</span><br><span class="line">poolpeek       可配置的池扫描器插件</span><br><span class="line">printkey       打印注册表项及其子项和值</span><br><span class="line">privs          显示进程权限</span><br><span class="line">procdump       进程转储到一个可执行文件示例</span><br><span class="line">pslist         按照EPROCESS列表打印所有正在运行的进程</span><br><span class="line">psscan         进程对象池扫描</span><br><span class="line">pstree         以树型方式打印进程列表</span><br><span class="line">psxview        查找带有隐藏进程的所有进程列表</span><br><span class="line">qemuinfo       转储 Qemu 信息</span><br><span class="line">raw2dmp        将物理内存原生数据转换为windbg崩溃转储格式</span><br><span class="line">screenshot     基于GDI Windows的虚拟屏幕截图保存</span><br><span class="line">servicediff    Windows服务列表(ala Plugx)</span><br><span class="line">sessions       _MM_SESSION_SPACE的详细信息列表(用户登录会话)</span><br><span class="line">shellbags      打印Shellbags信息</span><br><span class="line">shimcache      解析应用程序兼容性Shim缓存注册表项</span><br><span class="line">shutdowntime   从内存中的注册表信息获取机器关机时间</span><br><span class="line">sockets        打印已打开套接字列表</span><br><span class="line">sockscan       TCP套接字对象池扫描</span><br><span class="line">ssdt           显示SSDT条目</span><br><span class="line">strings        物理到虚拟地址的偏移匹配(需要一些时间，带详细信息)</span><br><span class="line">svcscan        Windows服务列表扫描</span><br><span class="line">symlinkscan    符号链接对象池扫描</span><br><span class="line">thrdscan       线程对象池扫描</span><br><span class="line">threads        调查_ETHREAD 和_KTHREADs</span><br><span class="line">timeliner      创建内存中的各种痕迹信息的时间线</span><br><span class="line">timers         打印内核计时器及关联模块的DPC</span><br><span class="line">truecryptmasterRecover 恢复TrueCrypt 7.1a主密钥</span><br><span class="line">truecryptpassphrase查找并提取TrueCrypt密码</span><br><span class="line">truecryptsummaryTrueCrypt摘要信息</span><br><span class="line">unloadedmodules打印卸载的模块信息列表</span><br><span class="line">userassist     打印注册表中UserAssist相关信息</span><br><span class="line">userhandles    转储用户句柄表</span><br><span class="line">vaddump        转储VAD数据为文件</span><br><span class="line">vadinfo        转储VAD信息</span><br><span class="line">vadtree        以树形方式显示VAD树信息</span><br><span class="line">vadwalk        显示遍历VAD树</span><br><span class="line">vboxinfo       转储Virtualbox信息（虚拟机）</span><br><span class="line">verinfo        打印PE镜像中的版本信息</span><br><span class="line">vmwareinfo     转储VMware VMSS/VMSN 信息</span><br><span class="line">volshell       内存镜像中的shell</span><br><span class="line">windows        打印桌面窗口(详细信息)</span><br><span class="line">wintree        Z顺序打印桌面窗口树</span><br><span class="line">wndscan        池扫描窗口站</span><br><span class="line">yarascan       以Yara签名扫描进程或内核内存</span><br></pre></td></tr></table></figure><h3 id="详细点"><a href="#详细点" class="headerlink" title="详细点"></a>详细点</h3><p><code>python2 vol.py -f xxx imageinfo</code>：获取镜像信息。</p><p><code>volatility - f xxx --profile=操作系统  操作</code>：执行相关操作。</p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>插件所需放置位置：</p><p><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230911155416979-16944991180751.png"></p><ol><li>mimikazt</li><li>获取内存中的密码</li><li>usbstor</li><li>扫描注册表查找插入系统的USB设备</li><li>lasspass</li><li>扫描注册表查找插入系统的USB设备</li><li>bitlocker</li><li>找到并提取BitLocker全卷加密密钥(FVEK)，可以用来解密BitLocker卷。</li></ol><h1 id="volatility3"><a href="#volatility3" class="headerlink" title="volatility3"></a>volatility3</h1><p>python3下使用的volatility。</p><p>类似，只是命令不太同。</p><h2 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line">optional arguments:</span><br><span class="line">  -h, --help            Show this help message and exit, for specific plugin options use</span><br><span class="line">                        &#x27;volatility &lt;pluginname&gt; --help&#x27;</span><br><span class="line">  -c CONFIG, --config CONFIG</span><br><span class="line">                        Load the configuration from a json file</span><br><span class="line">  --parallelism [&#123;processes,threads,off&#125;]</span><br><span class="line">                        Enables parallelism (defaults to off if no argument given)</span><br><span class="line">  -e EXTEND, --extend EXTEND</span><br><span class="line">                        Extend the configuration with a new (or changed) setting</span><br><span class="line">  -p PLUGIN_DIRS, --plugin-dirs PLUGIN_DIRS</span><br><span class="line">                        Semi-colon separated list of paths to find plugins</span><br><span class="line">  -s SYMBOL_DIRS, --symbol-dirs SYMBOL_DIRS</span><br><span class="line">                        Semi-colon separated list of paths to find symbols</span><br><span class="line">  -v, --verbosity       Increase output verbosity</span><br><span class="line">  -l LOG, --log LOG     Log output to a file as well as the console</span><br><span class="line">  -o OUTPUT_DIR, --output-dir OUTPUT_DIR</span><br><span class="line">                        Directory in which to output any generated files</span><br><span class="line">  -q, --quiet           Remove progress feedback</span><br><span class="line">  -r RENDERER, --renderer RENDERER</span><br><span class="line">                        Determines how to render the output (quick, none, csv, pretty,</span><br><span class="line">                        json, jsonl)</span><br><span class="line">  -f FILE, --file FILE  Shorthand for --single-location=file:// if single-location is not</span><br><span class="line">                        defined</span><br><span class="line">  --write-config        Write configuration JSON file out to config.json</span><br><span class="line">  --save-config SAVE_CONFIG</span><br><span class="line">                        Save configuration JSON file to a file</span><br><span class="line">  --clear-cache         Clears out all short-term cached items</span><br><span class="line">  --cache-path CACHE_PATH</span><br><span class="line">                        Change the default path (/home/biu/.cache/volatility3) used to</span><br><span class="line">                        store the cache</span><br><span class="line">  --offline             Do not search online for additional JSON files</span><br><span class="line">  --single-location SINGLE_LOCATION</span><br><span class="line">                        Specifies a base location on which to stack</span><br><span class="line">  --stackers [STACKERS ...]</span><br><span class="line">                        List of stackers</span><br><span class="line">  --single-swap-locations [SINGLE_SWAP_LOCATIONS ...]</span><br><span class="line">                        Specifies a list of swap layer URIs for use with single-location</span><br><span class="line"></span><br><span class="line">Plugins:</span><br><span class="line">  For plugin specific options, run &#x27;volatility &lt;plugin&gt; --help&#x27;</span><br><span class="line"></span><br><span class="line">  plugin</span><br><span class="line">    banners.Banners     Attempts to identify potential linux banners in an image</span><br><span class="line">    configwriter.ConfigWriter</span><br><span class="line">                        Runs the automagics and both prints and outputs configuration in</span><br><span class="line">                        the output directory.</span><br><span class="line">    frameworkinfo.FrameworkInfo</span><br><span class="line">                        Plugin to list the various modular components of Volatility</span><br><span class="line">    isfinfo.IsfInfo     Determines information about the currently available ISF files, or</span><br><span class="line">                        a specific one</span><br><span class="line">    layerwriter.LayerWriter</span><br><span class="line">                        Runs the automagics and writes out the primary layer produced by</span><br><span class="line">                        the stacker.</span><br><span class="line">    linux.bash.Bash     Recovers bash command history from memory.</span><br><span class="line">    linux.capabilities.Capabilities</span><br><span class="line">                        Lists process capabilities</span><br><span class="line">    linux.check_afinfo.Check_afinfo</span><br><span class="line">                        Verifies the operation function pointers of network protocols.</span><br><span class="line">    linux.check_creds.Check_creds</span><br><span class="line">                        Checks if any processes are sharing credential structures</span><br><span class="line">    linux.check_idt.Check_idt</span><br><span class="line">                        Checks if the IDT has been altered</span><br><span class="line">    linux.check_modules.Check_modules</span><br><span class="line">                        Compares module list to sysfs info, if available</span><br><span class="line">    linux.check_syscall.Check_syscall</span><br><span class="line">                        Check system call table for hooks.</span><br><span class="line">    linux.elfs.Elfs     Lists all memory mapped ELF files for all processes.</span><br><span class="line">    linux.envars.Envars</span><br><span class="line">    linux.envvars.Envvars</span><br><span class="line">                        Lists processes with their environment variables</span><br><span class="line">    linux.iomem.IOMem   Generates an output similar to /proc/iomem on a running system.</span><br><span class="line">    linux.keyboard_notifiers.Keyboard_notifiers</span><br><span class="line">                        Parses the keyboard notifier call chain</span><br><span class="line">    linux.kmsg.Kmsg     Kernel log buffer reader</span><br><span class="line">    linux.lsmod.Lsmod   Lists loaded kernel modules.</span><br><span class="line">    linux.lsof.Lsof     Lists all memory maps for all processes.</span><br><span class="line">    linux.malfind.Malfind</span><br><span class="line">                        Lists process memory ranges that potentially contain injected</span><br><span class="line">                        code.</span><br><span class="line">    linux.mountinfo.MountInfo</span><br><span class="line">                        Lists mount points on processes mount namespaces</span><br><span class="line">    linux.proc.Maps     Lists all memory maps for all processes.</span><br><span class="line">    linux.psaux.PsAux   Lists processes with their command line arguments</span><br><span class="line">    linux.pslist.PsList</span><br><span class="line">                        Lists the processes present in a particular linux memory image.</span><br><span class="line">    linux.psscan.PsScan</span><br><span class="line">                        Scans for processes present in a particular linux image.</span><br><span class="line">    linux.pstree.PsTree</span><br><span class="line">                        Plugin for listing processes in a tree based on their parent</span><br><span class="line">                        process ID.</span><br><span class="line">    linux.sockstat.Sockstat</span><br><span class="line">                        Lists all network connections for all processes.</span><br><span class="line">    linux.tty_check.tty_check</span><br><span class="line">                        Checks tty devices for hooks</span><br><span class="line">    mac.bash.Bash       Recovers bash command history from memory.</span><br><span class="line">    mac.check_syscall.Check_syscall</span><br><span class="line">                        Check system call table for hooks.</span><br><span class="line">    mac.check_sysctl.Check_sysctl</span><br><span class="line">                        Check sysctl handlers for hooks.</span><br><span class="line">    mac.check_trap_table.Check_trap_table</span><br><span class="line">                        Check mach trap table for hooks.</span><br><span class="line">    mac.ifconfig.Ifconfig</span><br><span class="line">                        Lists network interface information for all devices</span><br><span class="line">    mac.kauth_listeners.Kauth_listeners</span><br><span class="line">                        Lists kauth listeners and their status</span><br><span class="line">    mac.kauth_scopes.Kauth_scopes</span><br><span class="line">                        Lists kauth scopes and their status</span><br><span class="line">    mac.kevents.Kevents</span><br><span class="line">                        Lists event handlers registered by processes</span><br><span class="line">    mac.list_files.List_Files</span><br><span class="line">                        Lists all open file descriptors for all processes.</span><br><span class="line">    mac.lsmod.Lsmod     Lists loaded kernel modules.</span><br><span class="line">    mac.lsof.Lsof       Lists all open file descriptors for all processes.</span><br><span class="line">    mac.malfind.Malfind</span><br><span class="line">                        Lists process memory ranges that potentially contain injected</span><br><span class="line">                        code.</span><br><span class="line">    mac.mount.Mount     A module containing a collection of plugins that produce data</span><br><span class="line">                        typically found in Mac&#x27;s mount command</span><br><span class="line">    mac.netstat.Netstat</span><br><span class="line">                        Lists all network connections for all processes.</span><br><span class="line">    mac.proc_maps.Maps  Lists process memory ranges that potentially contain injected</span><br><span class="line">                        code.</span><br><span class="line">    mac.psaux.Psaux     Recovers program command line arguments.</span><br><span class="line">    mac.pslist.PsList   Lists the processes present in a particular mac memory image.</span><br><span class="line">    mac.pstree.PsTree   Plugin for listing processes in a tree based on their parent</span><br><span class="line">                        process ID.</span><br><span class="line">    mac.socket_filters.Socket_filters</span><br><span class="line">                        Enumerates kernel socket filters.</span><br><span class="line">    mac.timers.Timers   Check for malicious kernel timers.</span><br><span class="line">    mac.trustedbsd.Trustedbsd</span><br><span class="line">                        Checks for malicious trustedbsd modules</span><br><span class="line">    mac.vfsevents.VFSevents</span><br><span class="line">                        Lists processes that are filtering file system events</span><br><span class="line">    timeliner.Timeliner</span><br><span class="line">                        Runs all relevant plugins that provide time related information</span><br><span class="line">                        and orders the results by time.</span><br><span class="line">    windows.bigpools.BigPools</span><br><span class="line">                        List big page pools.</span><br><span class="line">    windows.cachedump.Cachedump</span><br><span class="line">                        Dumps lsa secrets from memory</span><br><span class="line">    windows.callbacks.Callbacks</span><br><span class="line">                        Lists kernel callbacks and notification routines.</span><br><span class="line">    windows.cmdline.CmdLine</span><br><span class="line">                        Lists process command line arguments.</span><br><span class="line">    windows.crashinfo.Crashinfo</span><br><span class="line">                        Lists the information from a Windows crash dump.</span><br><span class="line">    windows.devicetree.DeviceTree</span><br><span class="line">                        Listing tree based on drivers and attached devices in a particular</span><br><span class="line">                        windows memory image.</span><br><span class="line">    windows.dlllist.DllList</span><br><span class="line">                        Lists the loaded modules in a particular windows memory image.</span><br><span class="line">    windows.driverirp.DriverIrp</span><br><span class="line">                        List IRPs for drivers in a particular windows memory image.</span><br><span class="line">    windows.drivermodule.DriverModule</span><br><span class="line">                        Determines if any loaded drivers were hidden by a rootkit</span><br><span class="line">    windows.driverscan.DriverScan</span><br><span class="line">                        Scans for drivers present in a particular windows memory image.</span><br><span class="line">    windows.dumpfiles.DumpFiles</span><br><span class="line">                        Dumps cached file contents from Windows memory samples.</span><br><span class="line">    windows.envars.Envars</span><br><span class="line">                        Display process environment variables</span><br><span class="line">    windows.filescan.FileScan</span><br><span class="line">                        Scans for file objects present in a particular windows memory</span><br><span class="line">                        image.</span><br><span class="line">    windows.getservicesids.GetServiceSIDs</span><br><span class="line">                        Lists process token sids.</span><br><span class="line">    windows.getsids.GetSIDs</span><br><span class="line">                        Print the SIDs owning each process</span><br><span class="line">    windows.handles.Handles</span><br><span class="line">                        Lists process open handles.</span><br><span class="line">    windows.hashdump.Hashdump</span><br><span class="line">                        Dumps user hashes from memory</span><br><span class="line">    windows.info.Info   Show OS &amp; kernel details of the memory sample being analyzed.</span><br><span class="line">    windows.joblinks.JobLinks</span><br><span class="line">                        Print process job link information</span><br><span class="line">    windows.ldrmodules.LdrModules</span><br><span class="line">                        Lists the loaded modules in a particular windows memory image.</span><br><span class="line">    windows.lsadump.Lsadump</span><br><span class="line">                        Dumps lsa secrets from memory</span><br><span class="line">    windows.malfind.Malfind</span><br><span class="line">                        Lists process memory ranges that potentially contain injected</span><br><span class="line">                        code.</span><br><span class="line">    windows.mbrscan.MBRScan</span><br><span class="line">                        Scans for and parses potential Master Boot Records (MBRs)</span><br><span class="line">    windows.memmap.Memmap</span><br><span class="line">                        Prints the memory map</span><br><span class="line">    windows.mftscan.MFTScan</span><br><span class="line">                        Scans for MFT FILE objects present in a particular windows memory</span><br><span class="line">                        image.</span><br><span class="line">    windows.modscan.ModScan</span><br><span class="line">                        Scans for modules present in a particular windows memory image.</span><br><span class="line">    windows.modules.Modules</span><br><span class="line">                        Lists the loaded kernel modules.</span><br><span class="line">    windows.mutantscan.MutantScan</span><br><span class="line">                        Scans for mutexes present in a particular windows memory image.</span><br><span class="line">    windows.netscan.NetScan</span><br><span class="line">                        Scans for network objects present in a particular windows memory</span><br><span class="line">                        image.</span><br><span class="line">    windows.netstat.NetStat</span><br><span class="line">                        Traverses network tracking structures present in a particular</span><br><span class="line">                        windows memory image.</span><br><span class="line">    windows.poolscanner.PoolScanner</span><br><span class="line">                        A generic pool scanner plugin.</span><br><span class="line">    windows.privileges.Privs</span><br><span class="line">                        Lists process token privileges</span><br><span class="line">    windows.pslist.PsList</span><br><span class="line">                        Lists the processes present in a particular windows memory image.</span><br><span class="line">    windows.psscan.PsScan</span><br><span class="line">                        Scans for processes present in a particular windows memory image.</span><br><span class="line">    windows.pstree.PsTree</span><br><span class="line">                        Plugin for listing processes in a tree based on their parent</span><br><span class="line">                        process ID.</span><br><span class="line">    windows.registry.certificates.Certificates</span><br><span class="line">                        Lists the certificates in the registry&#x27;s Certificate Store.</span><br><span class="line">    windows.registry.hivelist.HiveList</span><br><span class="line">                        Lists the registry hives present in a particular memory image.</span><br><span class="line">    windows.registry.hivescan.HiveScan</span><br><span class="line">                        Scans for registry hives present in a particular windows memory</span><br><span class="line">                        image.</span><br><span class="line">    windows.registry.printkey.PrintKey</span><br><span class="line">                        Lists the registry keys under a hive or specific key value.</span><br><span class="line">    windows.registry.userassist.UserAssist</span><br><span class="line">                        Print userassist registry keys and information.</span><br><span class="line">    windows.sessions.Sessions</span><br><span class="line">                        lists Processes with Session information extracted from</span><br><span class="line">                        Environmental Variables</span><br><span class="line">    windows.skeleton_key_check.Skeleton_Key_Check</span><br><span class="line">                        Looks for signs of Skeleton Key malware</span><br><span class="line">    windows.ssdt.SSDT   Lists the system call table.</span><br><span class="line">    windows.statistics.Statistics</span><br><span class="line">                        Lists statistics about the memory space.</span><br><span class="line">    windows.strings.Strings</span><br><span class="line">                        Reads output from the strings command and indicates which</span><br><span class="line">                        process(es) each string belongs to.</span><br><span class="line">    windows.svcscan.SvcScan</span><br><span class="line">                        Scans for windows services.</span><br><span class="line">    windows.symlinkscan.SymlinkScan</span><br><span class="line">                        Scans for links present in a particular windows memory image.</span><br><span class="line">    windows.vadinfo.VadInfo</span><br><span class="line">                        Lists process memory ranges.</span><br><span class="line">    windows.vadwalk.VadWalk</span><br><span class="line">                        Walk the VAD tree.</span><br><span class="line">    windows.vadyarascan.VadYaraScan</span><br><span class="line">                        Scans all the Virtual Address Descriptor memory maps using yara.</span><br><span class="line">    windows.verinfo.VerInfo</span><br><span class="line">                        Lists version information from PE files.</span><br><span class="line">    windows.virtmap.VirtMap</span><br><span class="line">                        Lists virtual mapped sections.</span><br><span class="line">    yarascan.YaraScan   Scans kernel memory using yara rules (string or file).</span><br></pre></td></tr></table></figure><h1 id="Arsenal-Image-Mounter"><a href="#Arsenal-Image-Mounter" class="headerlink" title="Arsenal Image Mounter"></a>Arsenal Image Mounter</h1><p>挂载磁盘镜像文件。</p><p>选择磁盘镜像文件后点击 OK，即可。</p><p><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912142526862.png"></p><h1 id="Elcomsoft-Forensic-Disk-Decryptor"><a href="#Elcomsoft-Forensic-Disk-Decryptor" class="headerlink" title="Elcomsoft Forensic Disk Decryptor"></a>Elcomsoft Forensic Disk Decryptor</h1><p>暴力型全功能分布式密码恢复工具。</p><h2 id="破解Bitlocker密钥"><a href="#破解Bitlocker密钥" class="headerlink" title="破解Bitlocker密钥"></a>破解Bitlocker密钥</h2><ol><li>Decrypt or mount disk</li><li>Physical disk\partition</li><li>选择挂载上的磁盘以及相应的内存文件<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912143024097.png"></li></ol></li><li>破解完成，下一页<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912143236598.png"></li></ol></li><li>获取key<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912143158381.png"></li></ol></li><li>将获取的恢复密钥，解密磁盘<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912143404209.png"></li></ol></li></ol><h1 id="Passware-Kit-Forensic"><a href="#Passware-Kit-Forensic" class="headerlink" title="Passware Kit Forensic"></a>Passware Kit Forensic</h1><h2 id="破解文件密码"><a href="#破解文件密码" class="headerlink" title="破解文件密码"></a>破解文件密码</h2><ol><li>文件拖入，选择自定义<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912145502895.png"></li></ol></li><li>字典攻击（这里给出了包含其密码的字典）<ol><li>添加字典攻击<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912145547031.png"></li></ol></li><li>选定字典文件<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912145629181.png"></li></ol></li></ol></li><li>获取密码<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912145246404.png"></li></ol></li></ol><h2 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h2><p><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912150510087.png"></p><h2 id="解密True-Crypt卷"><a href="#解密True-Crypt卷" class="headerlink" title="解密True Crypt卷"></a>解密True Crypt卷</h2><ol><li>选择True Crypt，然后选择True Crypt容器文件和内存映像文件。<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912151858833.png"></li></ol></li><li>得到输出文件，即未加密的TrueCrypt容器，挂载即可查看其文件。</li></ol><h2 id="解密BitLocker分区"><a href="#解密BitLocker分区" class="headerlink" title="解密BitLocker分区"></a>解密BitLocker分区</h2><ol><li>选择BitLocker，选择Bitlocker容器文件和内存映像文件。<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912152154372.png"></li></ol></li><li>获得恢复密钥<ol><li><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912154447567.png"></li><li>其中有输出dd文件，可直接挂载查看其文件。</li></ol></li></ol><h1 id="AccessData-FTK-Imager"><a href="#AccessData-FTK-Imager" class="headerlink" title="AccessData FTK Imager"></a>AccessData FTK Imager</h1><h2 id="挂载TrueCrypt容器"><a href="#挂载TrueCrypt容器" class="headerlink" title="挂载TrueCrypt容器"></a>挂载TrueCrypt容器</h2><p>挂载完即可在G盘中看到。</p><p><img src="/2023/09/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/image-20230912153438670.png"></p><h1 id="一些命令"><a href="#一些命令" class="headerlink" title="一些命令"></a>一些命令</h1><h2 id="findstr"><a href="#findstr" class="headerlink" title="findstr"></a>findstr</h2><p><code>findstr /s &quot;iBoot&quot; *</code>：在当前文件夹及子文件夹下查询所有包含“iBoot”的文件和位置。</p><p><code>find /www/wwwroot/v9.licai.com/ -name *.php* |xargs grep &#39;密码不正确&#39;</code>：<code>find /www/wwwroot/v9.licai.com/ -name *.php*</code>：这部分命令使用<code>find</code>命令在指定的目录<code>/www/wwwroot/v9.licai.com/</code>及其子目录中查找文件。<code>-name</code>选项后面跟着<code>*.php*</code>，表示查找文件名中包含<code>.php</code>的文件，<code>*</code>是通配符，可以匹配任何字符。这将列出所有具有<code>.php</code>扩展名的文件。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">FINDSTR [/<span class="type">B</span>] [/<span class="type">E</span>] [/<span class="type">L</span>] [/<span class="type">R</span>] [/<span class="type">S</span>] [/<span class="type">I</span>] [/<span class="type">X</span>] [/<span class="type">V</span>] [/<span class="type">N</span>] [/<span class="type">M</span>] [/<span class="type">O</span>] [/<span class="type">P</span>] [/<span class="type">F</span>:<span class="type">file</span>]</span><br><span class="line">        [/<span class="type">C</span>:<span class="built_in">string</span>] [/<span class="type">G</span>:<span class="type">file</span>] [/<span class="type">D</span>:<span class="type">dir</span> <span class="type">list</span>] [/<span class="type">A</span>:<span class="type">color</span> <span class="type">attributes</span>] [/<span class="type">OFF</span>[<span class="type">LINE</span>]]</span><br><span class="line">        strings [[<span class="type">drive</span>:][<span class="type">path</span>]<span class="type">filename</span>[ <span class="type">...</span>]]</span><br><span class="line"></span><br><span class="line">  /B         在一行的开始配对模式。</span><br><span class="line">  /E         在一行的结尾配对模式。</span><br><span class="line">  /L         按字使用搜索字符串。</span><br><span class="line">  /<span class="built_in">R</span>         将搜索字符串作为一般表达式使用。</span><br><span class="line">  /S         在当前目录和所有子目录中搜索匹配文件。</span><br><span class="line">  /I         指定搜索不分大小写。</span><br><span class="line">  /X         打印完全匹配的行。</span><br><span class="line">  /V         只打印不包含匹配的行。</span><br><span class="line">  /N         在匹配的每行前打印行数。</span><br><span class="line">  /M         如果文件含有匹配项，只打印其文件名。</span><br><span class="line">  /O         在每个匹配行前打印字符偏移量。</span><br><span class="line">  /P         忽略有不可打印字符的文件。</span><br><span class="line">  /OFF[<span class="type">LINE</span>] 不跳过带有脱机属性集的文件。</span><br><span class="line">  /A:attr    指定有十六进位数字的颜色属性。请见 <span class="string">&quot;color /?&quot;</span></span><br><span class="line">  /F:file    从指定文件读文件列表 (/ 代表控制台)。</span><br><span class="line">  /C:string  使用指定字符串作为文字搜索字符串。</span><br><span class="line">  /G:file    从指定的文件获得搜索字符串。 (/ 代表控制台)。</span><br><span class="line">  /D:<span class="built_in">dir</span>     查找以分号为分隔符的目录列表</span><br><span class="line">  strings    要查找的文字。</span><br><span class="line">  [<span class="type">drive</span>:][<span class="type">path</span>]filename</span><br><span class="line">             指定要查找的文件。</span><br><span class="line"></span><br><span class="line">除非参数有 /C 前缀，请使用空格隔开搜索字符串。</span><br><span class="line">例如: <span class="string">&#x27;FINDSTR &quot;hello there&quot; x.y&#x27;</span> 在文件 x.y 中寻找 <span class="string">&quot;hello&quot;</span> 或</span><br><span class="line"><span class="string">&quot;there&quot;</span>。<span class="string">&#x27;FINDSTR /C:&quot;hello there&quot; x.y&#x27;</span> 文件 x.y  寻找</span><br><span class="line"><span class="string">&quot;hello there&quot;</span>。</span><br><span class="line"></span><br><span class="line">一般表达式的快速参考:</span><br><span class="line">  .        通配符: 任何字符</span><br><span class="line">  *        重复: 以前字符或类出现零或零以上次数</span><br><span class="line">  ^        行位置: 行的开始</span><br><span class="line">  <span class="variable">$</span>        行位置: 行的终点</span><br><span class="line">  [<span class="type">class</span>]  字符类: 任何在字符集中的字符</span><br><span class="line">  [^<span class="type">class</span>] 补字符类: 任何不在字符集中的字符</span><br><span class="line">  [<span class="type">x</span>-<span class="type">y</span>]    范围: 在指定范围内的任何字符</span><br><span class="line">  \x       Escape: 元字符 x 的文字用法</span><br><span class="line">  \&lt;xyz    字位置: 字的开始</span><br><span class="line">  xyz\&gt;    字位置: 字的结束</span><br></pre></td></tr></table></figure><h2 id="Get-FileHash"><a href="#Get-FileHash" class="headerlink" title="Get-FileHash"></a>Get-FileHash</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">名称</span><br><span class="line">    Get-FileHash</span><br><span class="line">语法</span><br><span class="line">    Get-FileHash [-Path] &lt;string[]&gt;  [&lt;CommonParameters&gt;]</span><br><span class="line">    Get-FileHash  [&lt;CommonParameters&gt;]</span><br><span class="line">    Get-FileHash  [&lt;CommonParameters&gt;]</span><br></pre></td></tr></table></figure><h1 id="firmwalker-sh"><a href="#firmwalker-sh" class="headerlink" title="firmwalker.sh"></a>firmwalker.sh</h1><p><code>./firmwalker.sh &#123;被测试文件系统根目录&#125; &#123;扫描结果输出路径&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> 取证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>羊城杯2023</title>
      <link href="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/"/>
      <url>/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/</url>
      
        <content type="html"><![CDATA[<h1 id="Blast"><a href="#Blast" class="headerlink" title="Blast"></a>Blast</h1><p>一些简单的混淆的指令可以patch掉：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idc_bc695 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">patch</span>(<span class="params">start, end</span>):</span><br><span class="line">i = start</span><br><span class="line"><span class="keyword">while</span> i &lt; end:</span><br><span class="line"><span class="keyword">if</span> GetMnem(i) == <span class="string">&#x27;jnz&#x27;</span> <span class="keyword">and</span> GetMnem(i + <span class="number">6</span>) == <span class="string">&#x27;jmp&#x27;</span> <span class="keyword">and</span> GetOpnd(i + <span class="number">0xb</span>, <span class="number">0</span>) == <span class="string">&#x27;$+5&#x27;</span> <span class="keyword">and</span> GetMnem(i + <span class="number">0xb</span>) == <span class="string">&#x27;jmp&#x27;</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(i))</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, i + <span class="number">0x10</span>):</span><br><span class="line">PatchByte(j, <span class="number">0x90</span>)</span><br><span class="line">i += <span class="number">0xf</span></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> seg <span class="keyword">in</span> Segments():</span><br><span class="line"><span class="keyword">if</span> SegName(seg) == <span class="string">&#x27;.text&#x27;</span>:</span><br><span class="line">patch(seg, <span class="number">0x40B7E4</span>)</span><br></pre></td></tr></table></figure><p>调试可以发现，这里是单个字符的双重md5：</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230902213555540.png"></p><p>将md5值十六进制表示：</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230902213622046.png"></p><p>这里进行结果比较：</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230902213635626.png"></p><p>也就是说结果都是单个字符的双重md5值，遍历就好了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_md5_string</span>(<span class="params">input_string</span>):</span><br><span class="line">    md5_hash = hashlib.md5()</span><br><span class="line">    md5_hash.update(input_string.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> md5_hash.hexdigest()</span><br><span class="line">md5 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>, <span class="number">128</span>):</span><br><span class="line">    md5_str = calculate_md5_string(calculate_md5_string(<span class="built_in">chr</span>(i)))</span><br><span class="line">    md5.append(md5_str)</span><br><span class="line">result = [</span><br><span class="line">    <span class="string">&#x27;14d89c38cd0fb23a14be2798d449c182&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;297e7ca127d2eef674c119331fe30dff&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;b5d2099e49bdb07b8176dff5e23b3c14&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;83be264eb452fcf0a1c322f2c7cbf987&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;71b0438bf46aa26928c7f5a371d619e1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ac49073a7165f41c57eb2c1806a7092e&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ed108f6919ebadc8e809f8b86ef40b05&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;65c162f7c43612ba1bdf4d0f2912bbc0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;557460d317ae874c924e9be336a83cbe&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;9203d8a26e241e63e4b35b3527440998&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;f91b2663febba8a884487f7de5e1d249&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;d7afde3e7059cd0a0fe09eec4b0008cd&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;488c428cd4a8d916deee7c1613c8b2fd&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;45cf8ddfae1d78741d8f1c622689e4af&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;37327bb06c83cb29cefde1963ea588aa&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;23e65a679105b85c5dc7034fded4fb5f&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;71b0438bf46aa26928c7f5a371d619e1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(md5)):</span><br><span class="line">        <span class="keyword">if</span> result[i] == md5[j]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j + <span class="number">30</span>), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="babyobfu"><a href="#babyobfu" class="headerlink" title="babyobfu"></a>babyobfu</h1><h2 id="去混淆"><a href="#去混淆" class="headerlink" title="去混淆"></a>去混淆</h2><p>动调可以看出大概逻辑，主要靠一个函数修复代码段，之后还会还原。</p><p>设置条件断点进行patch：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">repair_code</span>(<span class="params">start, l, num</span>):</span><br><span class="line">s = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">s.append((num &gt;&gt; (<span class="number">8</span> * i)) &amp; <span class="number">0xFF</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">data = Byte(start + i)</span><br><span class="line">PatchByte(start + i, data ^ ((i + <span class="number">0xCE</span>) &amp; <span class="number">0xFF</span>) ^ s[i % <span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rsp = GetRegValue(<span class="string">&quot;rsp&quot;</span>)</span><br><span class="line">retrun_addr = Qword(GetRegValue(<span class="string">&quot;rsp&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> retrun_addr == <span class="number">0x403783</span>:</span><br><span class="line">retrun_addr = Qword(rsp + <span class="number">0x30</span>)</span><br><span class="line">FunAddr = retrun_addr - <span class="number">0x5</span></span><br><span class="line">CodeAddress = GetRegValue(<span class="string">&quot;rdi&quot;</span>)</span><br><span class="line">Length = GetRegValue(<span class="string">&quot;rsi&quot;</span>)</span><br><span class="line">XorNum = GetRegValue(<span class="string">&quot;edx&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> retrun_addr == CodeAddress:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">PatchByte(FunAddr + j, <span class="number">0x90</span>)</span><br><span class="line">repair_code(CodeAddress, Length, XorNum)</span><br><span class="line">SetRegValue(<span class="number">0x40375F</span>, <span class="string">&quot;EIP&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">PatchByte(FunAddr + j, <span class="number">0x90</span>)</span><br><span class="line">SetRegValue(<span class="number">0x40375F</span>, <span class="string">&quot;EIP&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Repair Date from <span class="subst">&#123;<span class="built_in">hex</span>(FunAddr) = &#125;</span>:<span class="subst">&#123;<span class="built_in">hex</span>(CodeAddress) = &#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>多输入，执行几次，main函数就可以反编译了。</p><p>对于这样子的剩余混淆，分析的时候手动patch一下就好，很好辨认。</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230903100528828.png"></p><h2 id="逻辑分析"><a href="#逻辑分析" class="headerlink" title="逻辑分析"></a>逻辑分析</h2><p>检测输入长度以及格式为0-9，a-f。</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904151634478.png"></p><p>sub_401980是将输入进行更改，后面的循环为更改的输入两个Byte拼接为一个Byte。</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904152227987.png"></p><p>sub_401980：其中的数据可以动态获取</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904152524974.png"></p><p>加密过程：</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904152625928.png"></p><p>最后比较：</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904152702221.png"></p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= num &lt;= <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">return</span> num + <span class="number">0x30</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="number">10</span> &lt;= num &lt;= <span class="number">15</span>:</span><br><span class="line">        <span class="keyword">return</span> num + <span class="number">97</span> - <span class="number">10</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> a + b &gt;= <span class="number">0x256</span>:</span><br><span class="line">        <span class="keyword">return</span> (a + b - <span class="number">1</span>) &amp; <span class="number">0xFF</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (a + b) &amp; <span class="number">0xFF</span></span><br><span class="line"></span><br><span class="line">data = [</span><br><span class="line">    <span class="number">0xd4</span>, <span class="number">0xfd</span>, <span class="number">0x80</span>, <span class="number">0xc4</span>, <span class="number">0x50</span>, <span class="number">0x10</span>, <span class="number">0xde</span>, <span class="number">0x6d</span>, <span class="number">0xe8</span>, <span class="number">0xf0</span>, <span class="number">0xc</span>, <span class="number">0x52</span>, <span class="number">0x9</span>, <span class="number">0x40</span>, <span class="number">0x24</span>, <span class="number">0x97</span>, <span class="number">0xde</span>, <span class="number">0x77</span>, <span class="number">0x14</span>,</span><br><span class="line">    <span class="number">0x5f</span>, <span class="number">0x69</span>, <span class="number">0xf6</span>, <span class="number">0xc0</span>, <span class="number">0x74</span>, <span class="number">0x8e</span>, <span class="number">0x6d</span>, <span class="number">0x80</span>, <span class="number">0xce</span>, <span class="number">0xcc</span>, <span class="number">0x7</span>, <span class="number">0xc0</span>, <span class="number">0xf4</span>, <span class="number">0xa0</span>, <span class="number">0x4</span>, <span class="number">0xf0</span>, <span class="number">0x1c</span>, <span class="number">0xc6</span>, <span class="number">0x0</span>, <span class="number">0xa2</span>,</span><br><span class="line">    <span class="number">0x58</span>, <span class="number">0xf4</span>, <span class="number">0x34</span>, <span class="number">0x40</span>, <span class="number">0xb0</span>, <span class="number">0x4c</span>, <span class="number">0xa0</span>, <span class="number">0xa8</span>, <span class="number">0x56</span>, <span class="number">0x59</span>, <span class="number">0xe9</span>, <span class="number">0x38</span>, <span class="number">0x28</span>, <span class="number">0xd0</span>, <span class="number">0x68</span>, <span class="number">0x40</span>, <span class="number">0x66</span>, <span class="number">0x96</span>, <span class="number">0x45</span>,</span><br><span class="line">    <span class="number">0xd2</span>, <span class="number">0x67</span>, <span class="number">0x40</span>, <span class="number">0xd0</span>, <span class="number">0x24</span>, <span class="number">0x0</span>, <span class="number">0x13</span>, <span class="number">0x4c</span>, <span class="number">0xca</span>, <span class="number">0x78</span>, <span class="number">0x4c</span>, <span class="number">0xbc</span>, <span class="number">0xc0</span>, <span class="number">0x42</span>, <span class="number">0x0</span>, <span class="number">0x10</span>, <span class="number">0x6d</span>, <span class="number">0xc0</span>, <span class="number">0x0</span>, <span class="number">0x38</span>,</span><br><span class="line">    <span class="number">0xb0</span>, <span class="number">0x4</span>, <span class="number">0xc4</span>, <span class="number">0x48</span>, <span class="number">0x80</span>, <span class="number">0xe8</span>, <span class="number">0x71</span>, <span class="number">0xff</span>, <span class="number">0x40</span>, <span class="number">0x84</span>, <span class="number">0x46</span>, <span class="number">0x54</span>, <span class="number">0x25</span>, <span class="number">0x7a</span>, <span class="number">0x38</span>, <span class="number">0x20</span>, <span class="number">0xf8</span>, <span class="number">0xc0</span>, <span class="number">0x38</span>,</span><br><span class="line">    <span class="number">0x94</span>, <span class="number">0xf9</span>, <span class="number">0x70</span>, <span class="number">0xe4</span>, <span class="number">0xfa</span>, <span class="number">0x70</span>, <span class="number">0x8</span>, <span class="number">0x40</span>, <span class="number">0x33</span>, <span class="number">0xe7</span>, <span class="number">0x68</span>, <span class="number">0xb0</span>, <span class="number">0xd6</span>, <span class="number">0x20</span>, <span class="number">0xfb</span>, <span class="number">0x81</span>, <span class="number">0x4c</span>, <span class="number">0x2e</span>, <span class="number">0x8a</span>,</span><br><span class="line">    <span class="number">0x1b</span>, <span class="number">0x3a</span>, <span class="number">0x92</span>, <span class="number">0x78</span>, <span class="number">0xe8</span>, <span class="number">0x24</span>, <span class="number">0x22</span>, <span class="number">0x27</span>, <span class="number">0x5c</span>, <span class="number">0xd2</span>, <span class="number">0x14</span>, <span class="number">0x8a</span>, <span class="number">0xb0</span>, <span class="number">0x60</span>, <span class="number">0x64</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0xe5</span>, <span class="number">0xd1</span>,</span><br><span class="line">    <span class="number">0x5c</span>, <span class="number">0xe9</span>, <span class="number">0x79</span>, <span class="number">0x52</span>, <span class="number">0x34</span>, <span class="number">0x67</span>, <span class="number">0x80</span>, <span class="number">0x4c</span>, <span class="number">0xe2</span>, <span class="number">0x20</span>, <span class="number">0xa0</span>, <span class="number">0x54</span>, <span class="number">0xdf</span>, <span class="number">0x28</span>, <span class="number">0x30</span>, <span class="number">0xf0</span>, <span class="number">0x86</span>, <span class="number">0xad</span>, <span class="number">0xc5</span>,</span><br><span class="line">    <span class="number">0x85</span>, <span class="number">0x71</span>, <span class="number">0xc0</span>, <span class="number">0x4e</span>, <span class="number">0xba</span>, <span class="number">0xcc</span>, <span class="number">0x98</span>, <span class="number">0x23</span>, <span class="number">0x56</span>, <span class="number">0x12</span>, <span class="number">0x90</span>, <span class="number">0xc9</span>, <span class="number">0x5b</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x48</span>, <span class="number">0xba</span>, <span class="number">0xac</span>, <span class="number">0x2c</span>,</span><br><span class="line">    <span class="number">0xdc</span>, <span class="number">0x22</span>, <span class="number">0x90</span>, <span class="number">0xe8</span>, <span class="number">0x18</span>, <span class="number">0x8c</span>, <span class="number">0x81</span>, <span class="number">0x44</span>, <span class="number">0x31</span>, <span class="number">0x84</span>, <span class="number">0x80</span>, <span class="number">0xe8</span>, <span class="number">0x8a</span>, <span class="number">0xe0</span>, <span class="number">0x8c</span>, <span class="number">0xba</span>, <span class="number">0xfa</span>, <span class="number">0xbc</span>, <span class="number">0xe6</span>,</span><br><span class="line">    <span class="number">0xf0</span>, <span class="number">0x9e</span>, <span class="number">0x66</span>, <span class="number">0xda</span>, <span class="number">0x54</span>, <span class="number">0xa1</span>, <span class="number">0xc8</span>, <span class="number">0x1e</span>, <span class="number">0x90</span>, <span class="number">0xf0</span>, <span class="number">0x93</span>, <span class="number">0x39</span>, <span class="number">0x50</span>, <span class="number">0x18</span>, <span class="number">0x99</span>, <span class="number">0x95</span>, <span class="number">0x48</span>, <span class="number">0x81</span>, <span class="number">0xa0</span>,</span><br><span class="line">    <span class="number">0x4a</span>, <span class="number">0xb0</span>, <span class="number">0x6a</span>, <span class="number">0x80</span>, <span class="number">0x7b</span>, <span class="number">0xb0</span>, <span class="number">0xc8</span>, <span class="number">0x9d</span>, <span class="number">0x39</span>, <span class="number">0xfb</span>, <span class="number">0x7e</span>, <span class="number">0x74</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x2a</span>, <span class="number">0x90</span>, <span class="number">0x60</span>, <span class="number">0x4a</span>, <span class="number">0xe2</span>,</span><br><span class="line">    <span class="number">0xda</span>, <span class="number">0x0</span>, <span class="number">0xe</span>, <span class="number">0xc0</span>, <span class="number">0xe0</span>, <span class="number">0xbe</span>, <span class="number">0x6</span>, <span class="number">0xc5</span>, <span class="number">0x61</span>, <span class="number">0xd4</span>, <span class="number">0x9c</span>, <span class="number">0x33</span>, <span class="number">0x88</span>, <span class="number">0x40</span>, <span class="number">0x70</span>, <span class="number">0x78</span>, <span class="number">0xf2</span>, <span class="number">0x7c</span>, <span class="number">0xac</span>, <span class="number">0xb0</span>,</span><br><span class="line">    <span class="number">0xf8</span>, <span class="number">0xcb</span>, <span class="number">0xcc</span>, <span class="number">0x3e</span>, <span class="number">0xea</span>, <span class="number">0x64</span>, <span class="number">0xa0</span>, <span class="number">0xbe</span>, <span class="number">0xac</span>, <span class="number">0xa</span>, <span class="number">0xd4</span>, <span class="number">0x30</span>, <span class="number">0x58</span>, <span class="number">0x4d</span>, <span class="number">0x74</span>, <span class="number">0x48</span>, <span class="number">0x90</span>, <span class="number">0x18</span>, <span class="number">0xea</span>,</span><br><span class="line">    <span class="number">0x10</span>, <span class="number">0xc0</span>, <span class="number">0x0</span>, <span class="number">0x5</span>, <span class="number">0xa0</span>, <span class="number">0x4e</span>, <span class="number">0xdd</span>, <span class="number">0xec</span>, <span class="number">0xa8</span>, <span class="number">0x10</span>, <span class="number">0xe0</span>, <span class="number">0x20</span>, <span class="number">0x42</span>, <span class="number">0x9</span>, <span class="number">0x64</span>, <span class="number">0x40</span>, <span class="number">0x94</span>, <span class="number">0x93</span>, <span class="number">0x90</span>, <span class="number">0x61</span>,</span><br><span class="line">    <span class="number">0x2</span>, <span class="number">0x3a</span>, <span class="number">0x39</span>, <span class="number">0xdf</span>, <span class="number">0x9a</span>, <span class="number">0x3c</span>, <span class="number">0x29</span>, <span class="number">0x6f</span>, <span class="number">0xe7</span>, <span class="number">0x10</span>, <span class="number">0xb3</span>, <span class="number">0x4b</span>, <span class="number">0xd3</span>, <span class="number">0x9d</span>, <span class="number">0xb2</span>, <span class="number">0x5b</span>, <span class="number">0x7</span>, <span class="number">0x84</span>, <span class="number">0xf0</span>,</span><br><span class="line">    <span class="number">0x3b</span>, <span class="number">0xbe</span>, <span class="number">0xce</span>, <span class="number">0xb6</span>, <span class="number">0xbc</span>, <span class="number">0xa</span>, <span class="number">0x48</span>, <span class="number">0xb8</span>, <span class="number">0x63</span>, <span class="number">0x48</span>, <span class="number">0xfa</span>, <span class="number">0x68</span>, <span class="number">0x74</span>, <span class="number">0xe4</span>, <span class="number">0xf8</span>, <span class="number">0xac</span>, <span class="number">0x16</span>, <span class="number">0x97</span>, <span class="number">0x8e</span>,</span><br><span class="line">    <span class="number">0x2a</span>, <span class="number">0xe9</span>, <span class="number">0x4c</span>, <span class="number">0x2c</span>, <span class="number">0xeb</span>, <span class="number">0x68</span>, <span class="number">0x82</span>, <span class="number">0xb8</span>, <span class="number">0x24</span>, <span class="number">0x92</span>, <span class="number">0x6</span>, <span class="number">0xb9</span>, <span class="number">0xa2</span>, <span class="number">0xf0</span>, <span class="number">0x90</span>, <span class="number">0xea</span>, <span class="number">0xaa</span>, <span class="number">0xe4</span>, <span class="number">0xa</span>,</span><br><span class="line">    <span class="number">0x7b</span>, <span class="number">0x40</span>, <span class="number">0x5c</span>, <span class="number">0xfc</span>, <span class="number">0xbe</span>, <span class="number">0x54</span>, <span class="number">0x90</span>, <span class="number">0x81</span>, <span class="number">0x44</span>, <span class="number">0xf4</span>, <span class="number">0x37</span>, <span class="number">0xa0</span>, <span class="number">0x93</span>, <span class="number">0x65</span>, <span class="number">0x20</span>, <span class="number">0x16</span>, <span class="number">0x82</span>, <span class="number">0xcd</span>, <span class="number">0xae</span>,</span><br><span class="line">    <span class="number">0x24</span>, <span class="number">0x0</span>, <span class="number">0x29</span>, <span class="number">0xa0</span>, <span class="number">0x8b</span>, <span class="number">0x44</span>, <span class="number">0xfb</span>, <span class="number">0xe4</span>, <span class="number">0x58</span>, <span class="number">0xd5</span>, <span class="number">0xc0</span>, <span class="number">0x9c</span>, <span class="number">0x84</span>, <span class="number">0xd</span>, <span class="number">0x8d</span>, <span class="number">0xcf</span>, <span class="number">0x50</span>, <span class="number">0x28</span>, <span class="number">0x8</span>, <span class="number">0x8c</span>,</span><br><span class="line">    <span class="number">0xbe</span>, <span class="number">0x6c</span>, <span class="number">0xbc</span>, <span class="number">0x18</span>, <span class="number">0x8</span>, <span class="number">0x9</span>, <span class="number">0x59</span>, <span class="number">0xad</span>, <span class="number">0xcc</span>, <span class="number">0xf8</span>, <span class="number">0x1c</span>, <span class="number">0x78</span>, <span class="number">0x28</span>, <span class="number">0xbd</span>, <span class="number">0x5a</span>, <span class="number">0x31</span>, <span class="number">0xde</span>, <span class="number">0x0</span>, <span class="number">0x6c</span>, <span class="number">0x61</span>,</span><br><span class="line">    <span class="number">0x8b</span>, <span class="number">0x23</span>, <span class="number">0xb0</span>, <span class="number">0x85</span>, <span class="number">0x8d</span>, <span class="number">0x14</span>, <span class="number">0x3f</span>, <span class="number">0x98</span>, <span class="number">0x68</span>, <span class="number">0x3</span>, <span class="number">0xac</span>, <span class="number">0xc0</span>, <span class="number">0x73</span>, <span class="number">0x96</span>, <span class="number">0x20</span>, <span class="number">0x3a</span>, <span class="number">0xc2</span>, <span class="number">0x6c</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x31</span>, <span class="number">0x70</span>, <span class="number">0x98</span>, <span class="number">0x2e</span>, <span class="number">0x90</span>, <span class="number">0x16</span>, <span class="number">0xba</span>, <span class="number">0xfe</span>, <span class="number">0xc3</span>, <span class="number">0x81</span>, <span class="number">0x98</span>, <span class="number">0x77</span>, <span class="number">0xc4</span>, <span class="number">0xbb</span>, <span class="number">0x73</span>, <span class="number">0xf8</span>, <span class="number">0x3a</span>, <span class="number">0x11</span>, <span class="number">0x70</span>,</span><br><span class="line">    <span class="number">0x11</span>, <span class="number">0x7c</span>, <span class="number">0x1d</span>, <span class="number">0x98</span>, <span class="number">0x84</span>, <span class="number">0xc</span>, <span class="number">0x1f</span>, <span class="number">0x5a</span>, <span class="number">0x4d</span>, <span class="number">0xb3</span>, <span class="number">0xc0</span>, <span class="number">0x31</span>, <span class="number">0xb0</span>, <span class="number">0x21</span>, <span class="number">0x4c</span>, <span class="number">0x9c</span>, <span class="number">0x20</span>, <span class="number">0xe6</span>, <span class="number">0x6c</span>,</span><br><span class="line">    <span class="number">0x89</span>, <span class="number">0xc0</span>, <span class="number">0x79</span>, <span class="number">0xbf</span>, <span class="number">0x35</span>, <span class="number">0xa8</span>, <span class="number">0x66</span>, <span class="number">0x89</span>, <span class="number">0xc8</span>, <span class="number">0x22</span>, <span class="number">0x76</span>, <span class="number">0xc0</span>, <span class="number">0x8a</span>, <span class="number">0xc1</span>, <span class="number">0x70</span>, <span class="number">0xd8</span>, <span class="number">0x2d</span>, <span class="number">0xd9</span>, <span class="number">0xb6</span>,</span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x38</span>, <span class="number">0x8c</span>, <span class="number">0x80</span>, <span class="number">0xd0</span>, <span class="number">0x2e</span>, <span class="number">0x23</span>, <span class="number">0x40</span>, <span class="number">0xab</span>, <span class="number">0x7b</span>, <span class="number">0xc7</span>, <span class="number">0xdd</span>, <span class="number">0x34</span>, <span class="number">0x4b</span>, <span class="number">0xf4</span>, <span class="number">0xc0</span>, <span class="number">0x3f</span>, <span class="number">0xb2</span>, <span class="number">0xcd</span>,</span><br><span class="line">    <span class="number">0x61</span>, <span class="number">0x91</span>, <span class="number">0x30</span>, <span class="number">0xd8</span>, <span class="number">0xbc</span>, <span class="number">0xe4</span>, <span class="number">0xcb</span>, <span class="number">0x48</span>, <span class="number">0xa5</span>, <span class="number">0xcc</span>, <span class="number">0x82</span>, <span class="number">0xb2</span>, <span class="number">0x18</span>, <span class="number">0xf3</span>, <span class="number">0x1e</span>, <span class="number">0x96</span>, <span class="number">0x71</span>, <span class="number">0x59</span>, <span class="number">0x1e</span>,</span><br><span class="line">    <span class="number">0x9c</span>, <span class="number">0x68</span>, <span class="number">0x3b</span>, <span class="number">0xe8</span>, <span class="number">0x41</span>, <span class="number">0xa8</span>, <span class="number">0x8</span>, <span class="number">0x75</span>, <span class="number">0xd0</span>, <span class="number">0x84</span>, <span class="number">0xf8</span>, <span class="number">0xd6</span>, <span class="number">0xc</span>, <span class="number">0xdd</span>, <span class="number">0x40</span>, <span class="number">0x6b</span>, <span class="number">0x33</span>, <span class="number">0xa4</span>, <span class="number">0x7c</span>,</span><br><span class="line">    <span class="number">0x20</span>, <span class="number">0x96</span>, <span class="number">0x4f</span>, <span class="number">0x2f</span>, <span class="number">0xb8</span>, <span class="number">0x12</span>, <span class="number">0xc8</span>, <span class="number">0x16</span>, <span class="number">0x40</span>, <span class="number">0xe8</span>, <span class="number">0xa0</span>, <span class="number">0x2d</span>, <span class="number">0x70</span>, <span class="number">0x10</span>, <span class="number">0xbd</span>, <span class="number">0x60</span>, <span class="number">0x4c</span>, <span class="number">0xdc</span>, <span class="number">0x39</span>,</span><br><span class="line">    <span class="number">0xab</span>, <span class="number">0x59</span>, <span class="number">0x61</span>, <span class="number">0x71</span>, <span class="number">0xd0</span>, <span class="number">0xc0</span>, <span class="number">0xeb</span>, <span class="number">0xf0</span>, <span class="number">0xfe</span>, <span class="number">0xaa</span>, <span class="number">0xd4</span>, <span class="number">0x5c</span>, <span class="number">0xfc</span>, <span class="number">0x93</span>, <span class="number">0xf8</span>, <span class="number">0xf9</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x18</span>, <span class="number">0xe6</span>, <span class="number">0x86</span>, <span class="number">0x7e</span>, <span class="number">0x3</span>, <span class="number">0x50</span>, <span class="number">0x17</span>, <span class="number">0xb8</span>, <span class="number">0xab</span>, <span class="number">0x10</span>, <span class="number">0x82</span>, <span class="number">0x42</span>, <span class="number">0x9</span>, <span class="number">0x44</span>, <span class="number">0xe0</span>, <span class="number">0x96</span>, <span class="number">0xca</span>, <span class="number">0xd4</span>, <span class="number">0xa</span>, <span class="number">0x46</span>,</span><br><span class="line">    <span class="number">0x9c</span>, <span class="number">0x6b</span>, <span class="number">0xd2</span>, <span class="number">0x92</span>, <span class="number">0xcd</span>, <span class="number">0x90</span>, <span class="number">0x40</span>, <span class="number">0x2e</span>, <span class="number">0x6b</span>, <span class="number">0x10</span>, <span class="number">0x53</span>, <span class="number">0x60</span>, <span class="number">0xa7</span>, <span class="number">0x97</span>, <span class="number">0x63</span>, <span class="number">0xda</span>, <span class="number">0x82</span>, <span class="number">0x29</span>, <span class="number">0xc6</span>,</span><br><span class="line">    <span class="number">0x0</span>, <span class="number">0x70</span>, <span class="number">0xac</span>, <span class="number">0xbc</span>, <span class="number">0x4a</span>, <span class="number">0x40</span>, <span class="number">0x4</span>, <span class="number">0xe0</span>, <span class="number">0x74</span>, <span class="number">0xb0</span>, <span class="number">0xb0</span>, <span class="number">0x80</span>, <span class="number">0x30</span>, <span class="number">0xdc</span>, <span class="number">0x70</span>, <span class="number">0x6c</span>, <span class="number">0x40</span>, <span class="number">0x7e</span>, <span class="number">0xd0</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0x9d</span>, <span class="number">0x2d</span>, <span class="number">0x87</span>, <span class="number">0xb8</span>, <span class="number">0xc5</span>, <span class="number">0x64</span>, <span class="number">0xd</span>, <span class="number">0xdc</span>, <span class="number">0x5e</span>, <span class="number">0x60</span>, <span class="number">0xd7</span>, <span class="number">0xc</span>, <span class="number">0xdb</span>, <span class="number">0x0</span>, <span class="number">0x80</span>, <span class="number">0x21</span>, <span class="number">0x17</span>, <span class="number">0xdd</span>, <span class="number">0xb8</span>,</span><br><span class="line">    <span class="number">0x20</span>, <span class="number">0xfd</span>, <span class="number">0x8f</span>, <span class="number">0x0</span>, <span class="number">0xb8</span>, <span class="number">0x18</span>, <span class="number">0x1c</span>, <span class="number">0x4</span>, <span class="number">0xff</span>, <span class="number">0xb1</span>, <span class="number">0x68</span>, <span class="number">0xc4</span>, <span class="number">0xe9</span>, <span class="number">0xab</span>, <span class="number">0x84</span>, <span class="number">0x6b</span>, <span class="number">0x82</span>, <span class="number">0x80</span>, <span class="number">0x14</span>,</span><br><span class="line">    <span class="number">0x44</span>, <span class="number">0xc8</span>, <span class="number">0x6a</span>, <span class="number">0x21</span>, <span class="number">0xfa</span>, <span class="number">0x34</span>, <span class="number">0xa6</span>, <span class="number">0xf9</span>, <span class="number">0x5b</span>, <span class="number">0xd8</span>, <span class="number">0x5e</span>, <span class="number">0xf0</span>, <span class="number">0xd3</span>, <span class="number">0xef</span>, <span class="number">0x92</span>, <span class="number">0xf6</span>, <span class="number">0xf3</span>, <span class="number">0xc6</span>, <span class="number">0x7e</span>,</span><br><span class="line">    <span class="number">0xe3</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>, <span class="number">0xe5</span>, <span class="number">0xf6</span>, <span class="number">0xbf</span>, <span class="number">0x90</span>, <span class="number">0xbe</span>, <span class="number">0xe4</span>, <span class="number">0x30</span>, <span class="number">0xa8</span>, <span class="number">0x3b</span>, <span class="number">0x8c</span>, <span class="number">0xc8</span>, <span class="number">0xec</span>, <span class="number">0x36</span>, <span class="number">0xec</span>, <span class="number">0x0</span>, <span class="number">0xb0</span>,</span><br><span class="line">    <span class="number">0x4</span>, <span class="number">0xf8</span>, <span class="number">0xb8</span>, <span class="number">0x4f</span>, <span class="number">0x40</span>, <span class="number">0xc2</span>, <span class="number">0xf8</span>, <span class="number">0x7c</span>, <span class="number">0xd1</span>, <span class="number">0x7b</span>, <span class="number">0x30</span>, <span class="number">0xb4</span>, <span class="number">0x88</span>, <span class="number">0x6b</span>, <span class="number">0xa0</span>, <span class="number">0x0</span>, <span class="number">0x70</span>, <span class="number">0x59</span>, <span class="number">0x14</span>,</span><br><span class="line">    <span class="number">0x85</span>, <span class="number">0xd7</span>, <span class="number">0x8c</span>, <span class="number">0x44</span>, <span class="number">0x29</span>, <span class="number">0xa3</span>, <span class="number">0xe9</span>, <span class="number">0xc0</span>, <span class="number">0x2f</span>, <span class="number">0xa6</span>, <span class="number">0xe4</span>, <span class="number">0xe6</span>, <span class="number">0xfb</span>, <span class="number">0xb9</span>, <span class="number">0xbc</span>, <span class="number">0xb4</span>, <span class="number">0x36</span>, <span class="number">0xd4</span>, <span class="number">0x9c</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0x28</span>, <span class="number">0x64</span>, <span class="number">0x4</span>, <span class="number">0x84</span>, <span class="number">0x10</span>, <span class="number">0x35</span>, <span class="number">0x60</span>, <span class="number">0xc8</span>, <span class="number">0x1a</span>, <span class="number">0xc0</span>, <span class="number">0xed</span>, <span class="number">0x13</span>, <span class="number">0x5f</span>, <span class="number">0x9a</span>, <span class="number">0xf0</span>, <span class="number">0xea</span>, <span class="number">0x60</span>, <span class="number">0xdb</span>,</span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x4b</span>, <span class="number">0xef</span>, <span class="number">0xce</span>, <span class="number">0x9f</span>, <span class="number">0x70</span>, <span class="number">0xff</span>, <span class="number">0x0</span>, <span class="number">0x23</span>, <span class="number">0x9d</span>, <span class="number">0x8a</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0xd0</span>, <span class="number">0x62</span>, <span class="number">0x68</span>, <span class="number">0x2f</span>, <span class="number">0x80</span>, <span class="number">0x75</span>,</span><br><span class="line">    <span class="number">0x74</span>, <span class="number">0xd</span>, <span class="number">0xde</span>, <span class="number">0x0</span>, <span class="number">0x60</span>, <span class="number">0x31</span>, <span class="number">0x40</span>, <span class="number">0xc3</span>, <span class="number">0x90</span>, <span class="number">0x94</span>, <span class="number">0x86</span>, <span class="number">0x31</span>, <span class="number">0xff</span>, <span class="number">0x22</span>, <span class="number">0x78</span>, <span class="number">0x34</span>, <span class="number">0x20</span>, <span class="number">0x89</span>, <span class="number">0x37</span>,</span><br><span class="line">    <span class="number">0x31</span>, <span class="number">0x83</span>, <span class="number">0x2e</span>, <span class="number">0xb1</span>, <span class="number">0x71</span>, <span class="number">0x40</span>, <span class="number">0x9</span>, <span class="number">0xc0</span>, <span class="number">0xc4</span>, <span class="number">0x4e</span>, <span class="number">0xe2</span>, <span class="number">0x52</span>, <span class="number">0x5e</span>, <span class="number">0x90</span>, <span class="number">0xa0</span>, <span class="number">0x26</span>, <span class="number">0x57</span>, <span class="number">0x47</span>, <span class="number">0x4e</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0x54</span>, <span class="number">0xbc</span>, <span class="number">0x52</span>, <span class="number">0x43</span>, <span class="number">0xca</span>, <span class="number">0xd1</span>, <span class="number">0x90</span>, <span class="number">0x20</span>, <span class="number">0x24</span>, <span class="number">0x19</span>, <span class="number">0x8c</span>, <span class="number">0x5e</span>, <span class="number">0x94</span>, <span class="number">0xa8</span>, <span class="number">0xc</span>, <span class="number">0xa8</span>, <span class="number">0xc4</span>, <span class="number">0xdd</span>,</span><br><span class="line">    <span class="number">0x91</span>, <span class="number">0x47</span>, <span class="number">0x80</span>, <span class="number">0x60</span>, <span class="number">0x38</span>, <span class="number">0x40</span>, <span class="number">0xb8</span>, <span class="number">0x65</span>, <span class="number">0x70</span>, <span class="number">0x20</span>, <span class="number">0x91</span>, <span class="number">0x48</span>, <span class="number">0x47</span>, <span class="number">0x0</span>, <span class="number">0x6c</span>, <span class="number">0x70</span>, <span class="number">0xa6</span>, <span class="number">0xfe</span>, <span class="number">0x24</span>,</span><br><span class="line">    <span class="number">0x44</span>, <span class="number">0x0</span>, <span class="number">0x84</span>, <span class="number">0xbc</span>, <span class="number">0xd6</span>, <span class="number">0x7d</span>, <span class="number">0x3c</span>, <span class="number">0xc8</span>, <span class="number">0x71</span>, <span class="number">0x2e</span>, <span class="number">0x1c</span>, <span class="number">0x95</span>, <span class="number">0x93</span>, <span class="number">0x30</span>, <span class="number">0xa9</span>, <span class="number">0x8a</span>, <span class="number">0xef</span>, <span class="number">0x65</span>, <span class="number">0xb8</span>,</span><br><span class="line">    <span class="number">0x49</span>, <span class="number">0xc0</span>, <span class="number">0x20</span>, <span class="number">0x33</span>, <span class="number">0x68</span>, <span class="number">0x70</span>, <span class="number">0x68</span>, <span class="number">0x10</span>, <span class="number">0xb0</span>, <span class="number">0x6e</span>, <span class="number">0xea</span>, <span class="number">0x8</span>, <span class="number">0xdb</span>, <span class="number">0x62</span>, <span class="number">0xc0</span>, <span class="number">0x8b</span>, <span class="number">0x66</span>, <span class="number">0x3e</span>, <span class="number">0x50</span>,</span><br><span class="line">    <span class="number">0x60</span>, <span class="number">0x79</span>, <span class="number">0x18</span>, <span class="number">0xd4</span>, <span class="number">0x69</span>, <span class="number">0x96</span>, <span class="number">0x1c</span>, <span class="number">0x3f</span>, <span class="number">0x1a</span>, <span class="number">0x50</span>, <span class="number">0x6c</span>, <span class="number">0x57</span>, <span class="number">0x0</span>, <span class="number">0x4</span>, <span class="number">0xd8</span>, <span class="number">0x7c</span>, <span class="number">0x61</span>, <span class="number">0x7f</span>, <span class="number">0xa4</span>, <span class="number">0x4</span>,</span><br><span class="line">    <span class="number">0x7</span>, <span class="number">0x74</span>, <span class="number">0x50</span>, <span class="number">0x77</span>, <span class="number">0x29</span>, <span class="number">0xa0</span>, <span class="number">0x8c</span>, <span class="number">0xe0</span>, <span class="number">0x5c</span>, <span class="number">0x4</span>, <span class="number">0xf8</span>, <span class="number">0xe0</span>, <span class="number">0xc3</span>, <span class="number">0xde</span>, <span class="number">0x2c</span>, <span class="number">0xd2</span>, <span class="number">0x9e</span>, <span class="number">0xf1</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x5c</span>, <span class="number">0x50</span>, <span class="number">0xdc</span>, <span class="number">0x2d</span>, <span class="number">0x0</span>, <span class="number">0xc1</span>, <span class="number">0xd0</span>, <span class="number">0xd0</span>, <span class="number">0x7</span>, <span class="number">0x14</span>, <span class="number">0x6c</span>, <span class="number">0xfd</span>, <span class="number">0x9e</span>, <span class="number">0x6e</span>, <span class="number">0xc9</span>, <span class="number">0x5e</span>, <span class="number">0x30</span>, <span class="number">0xa8</span>, <span class="number">0x3a</span>,</span><br><span class="line">    <span class="number">0x21</span>, <span class="number">0xa8</span>, <span class="number">0x95</span>, <span class="number">0x58</span>, <span class="number">0x87</span>, <span class="number">0x40</span>, <span class="number">0x75</span>, <span class="number">0x6c</span>, <span class="number">0xc</span>, <span class="number">0x68</span>, <span class="number">0xd8</span>, <span class="number">0x9e</span>, <span class="number">0xe6</span>, <span class="number">0xc2</span>, <span class="number">0x70</span>, <span class="number">0x79</span>, <span class="number">0x0</span>, <span class="number">0x67</span>, <span class="number">0x29</span>,</span><br><span class="line">    <span class="number">0xfc</span>, <span class="number">0x1</span>, <span class="number">0xf2</span>, <span class="number">0x16</span>, <span class="number">0xec</span>, <span class="number">0xfa</span>, <span class="number">0x60</span>, <span class="number">0xaf</span>, <span class="number">0x60</span>, <span class="number">0x1d</span>, <span class="number">0xec</span>, <span class="number">0xb8</span>, <span class="number">0xfc</span>, <span class="number">0x9d</span>, <span class="number">0x48</span>, <span class="number">0x60</span>, <span class="number">0xe8</span>, <span class="number">0xac</span>, <span class="number">0x1e</span>,</span><br><span class="line">    <span class="number">0x88</span>, <span class="number">0x97</span>, <span class="number">0x20</span>, <span class="number">0x3d</span>, <span class="number">0x80</span>, <span class="number">0x50</span>, <span class="number">0x10</span>, <span class="number">0xc6</span>, <span class="number">0x98</span>, <span class="number">0x60</span>, <span class="number">0xeb</span>, <span class="number">0x90</span>, <span class="number">0x46</span>, <span class="number">0x12</span>, <span class="number">0x0</span>, <span class="number">0x20</span>, <span class="number">0x60</span>, <span class="number">0x8</span>, <span class="number">0x54</span>,</span><br><span class="line">    <span class="number">0xec</span>, <span class="number">0x7b</span>, <span class="number">0x0</span>, <span class="number">0x2</span>, <span class="number">0xb0</span>, <span class="number">0x7</span>, <span class="number">0xf0</span>, <span class="number">0x9c</span>, <span class="number">0x58</span>, <span class="number">0xc8</span>, <span class="number">0xd8</span>, <span class="number">0xc</span>, <span class="number">0x9</span>, <span class="number">0xb8</span>, <span class="number">0x39</span>, <span class="number">0x68</span>, <span class="number">0xa0</span>, <span class="number">0x10</span>, <span class="number">0xb6</span>, <span class="number">0x63</span>,</span><br><span class="line">    <span class="number">0x0</span>, <span class="number">0x38</span>, <span class="number">0xc8</span>, <span class="number">0x80</span>, <span class="number">0xdf</span>, <span class="number">0xe6</span>, <span class="number">0x3a</span>, <span class="number">0xdc</span>, <span class="number">0x58</span>, <span class="number">0x58</span>, <span class="number">0x94</span>, <span class="number">0x5c</span>, <span class="number">0x63</span>, <span class="number">0x60</span>, <span class="number">0x8c</span>, <span class="number">0x93</span>, <span class="number">0xc1</span>, <span class="number">0xd0</span>, <span class="number">0xe0</span>,</span><br><span class="line">    <span class="number">0x44</span>, <span class="number">0x56</span>, <span class="number">0x60</span>, <span class="number">0xc8</span>, <span class="number">0xbb</span>, <span class="number">0x7a</span>, <span class="number">0x7e</span>, <span class="number">0x73</span>, <span class="number">0x1b</span>, <span class="number">0xab</span>, <span class="number">0xb8</span>, <span class="number">0xb</span>, <span class="number">0x8c</span>, <span class="number">0x23</span>, <span class="number">0x1c</span>, <span class="number">0xf0</span>, <span class="number">0x18</span>, <span class="number">0x7b</span>, <span class="number">0xf</span>,</span><br><span class="line">    <span class="number">0x93</span>, <span class="number">0xfa</span>, <span class="number">0x66</span>, <span class="number">0xe0</span>, <span class="number">0x4c</span>, <span class="number">0x0</span>, <span class="number">0xe8</span>, <span class="number">0xb4</span>, <span class="number">0x31</span>, <span class="number">0x30</span>, <span class="number">0xf0</span>, <span class="number">0x82</span>, <span class="number">0x18</span>, <span class="number">0x40</span>, <span class="number">0xfe</span>, <span class="number">0x8c</span>, <span class="number">0xf0</span>, <span class="number">0xfc</span>, <span class="number">0x1f</span>,</span><br><span class="line">    <span class="number">0x71</span>, <span class="number">0x8c</span>, <span class="number">0x7e</span>, <span class="number">0xc8</span>, <span class="number">0x80</span>, <span class="number">0xce</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0xa0</span>, <span class="number">0xd5</span>, <span class="number">0x23</span>, <span class="number">0x27</span>, <span class="number">0x4</span>, <span class="number">0x0</span>, <span class="number">0xed</span>, <span class="number">0xd9</span>, <span class="number">0x90</span>, <span class="number">0x82</span>, <span class="number">0x6c</span>, <span class="number">0x7d</span>,</span><br><span class="line">    <span class="number">0x4</span>, <span class="number">0x0</span>, <span class="number">0xc0</span>, <span class="number">0x12</span>, <span class="number">0xd3</span>, <span class="number">0x18</span>, <span class="number">0x5d</span>, <span class="number">0x86</span>, <span class="number">0xe0</span>, <span class="number">0x53</span>, <span class="number">0x41</span>, <span class="number">0x9f</span>, <span class="number">0xd8</span>, <span class="number">0xdd</span>, <span class="number">0xb</span>, <span class="number">0xe0</span>, <span class="number">0xe6</span>, <span class="number">0xef</span>, <span class="number">0x82</span>, <span class="number">0x64</span>,</span><br><span class="line">    <span class="number">0x77</span>, <span class="number">0x53</span>, <span class="number">0x7b</span>, <span class="number">0x5b</span>, <span class="number">0xdc</span>, <span class="number">0x14</span>, <span class="number">0x84</span>, <span class="number">0x56</span>, <span class="number">0x80</span>, <span class="number">0x20</span>, <span class="number">0xa8</span>, <span class="number">0x39</span>, <span class="number">0x50</span>, <span class="number">0xe8</span>, <span class="number">0x60</span>, <span class="number">0x58</span>, <span class="number">0x46</span>, <span class="number">0xf0</span>, <span class="number">0xf2</span>,</span><br><span class="line">    <span class="number">0x6</span>, <span class="number">0xc0</span>, <span class="number">0xe6</span>, <span class="number">0x4</span>, <span class="number">0xd0</span>, <span class="number">0xbe</span>, <span class="number">0x79</span>, <span class="number">0xcd</span>, <span class="number">0xa8</span>, <span class="number">0x3e</span>, <span class="number">0xa0</span>, <span class="number">0x1e</span>, <span class="number">0x89</span>, <span class="number">0x24</span>, <span class="number">0x38</span>, <span class="number">0xfb</span>, <span class="number">0x3a</span>, <span class="number">0x58</span>, <span class="number">0x7e</span>,</span><br><span class="line">    <span class="number">0x26</span>, <span class="number">0xa4</span>, <span class="number">0x0</span>, <span class="number">0x38</span>, <span class="number">0x98</span>, <span class="number">0x83</span>, <span class="number">0xe8</span>, <span class="number">0x64</span>, <span class="number">0x78</span>, <span class="number">0xb0</span>, <span class="number">0xd5</span>, <span class="number">0xf9</span>, <span class="number">0xf6</span>, <span class="number">0x16</span>, <span class="number">0x63</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>, <span class="number">0xa0</span>, <span class="number">0x60</span>,</span><br><span class="line">    <span class="number">0xf5</span>, <span class="number">0x24</span>, <span class="number">0xf6</span>, <span class="number">0xe0</span>, <span class="number">0x30</span>, <span class="number">0xe4</span>, <span class="number">0xa4</span>, <span class="number">0x26</span>, <span class="number">0x10</span>, <span class="number">0xbf</span>, <span class="number">0x9d</span>, <span class="number">0xdc</span>, <span class="number">0xf4</span>, <span class="number">0xd0</span>, <span class="number">0x38</span>, <span class="number">0xcd</span>, <span class="number">0xa</span>, <span class="number">0x26</span>, <span class="number">0x29</span>,</span><br><span class="line">    <span class="number">0xc</span>, <span class="number">0xd0</span>, <span class="number">0x78</span>, <span class="number">0xe3</span>, <span class="number">0xb0</span>, <span class="number">0x9a</span>, <span class="number">0x73</span>, <span class="number">0x80</span>, <span class="number">0x43</span>, <span class="number">0xa7</span>, <span class="number">0xa3</span>, <span class="number">0x9c</span>, <span class="number">0xc5</span>, <span class="number">0x7c</span>, <span class="number">0x29</span>, <span class="number">0x4a</span>, <span class="number">0x70</span>, <span class="number">0x28</span>, <span class="number">0xac</span>,</span><br><span class="line">    <span class="number">0x87</span>, <span class="number">0xf1</span>, <span class="number">0x50</span>, <span class="number">0xd4</span>, <span class="number">0x11</span>, <span class="number">0xe8</span>, <span class="number">0x32</span>, <span class="number">0xb8</span>, <span class="number">0xb4</span>, <span class="number">0x4c</span>, <span class="number">0x15</span>, <span class="number">0xb4</span>, <span class="number">0x7c</span>, <span class="number">0x51</span>, <span class="number">0x29</span>, <span class="number">0xac</span>, <span class="number">0x90</span>, <span class="number">0x9e</span>, <span class="number">0x12</span>,</span><br><span class="line">    <span class="number">0xd8</span>, <span class="number">0xbe</span>, <span class="number">0xbf</span>, <span class="number">0x10</span>, <span class="number">0x4</span>, <span class="number">0x84</span>, <span class="number">0xe6</span>, <span class="number">0x88</span>, <span class="number">0xdc</span>, <span class="number">0xdb</span>, <span class="number">0xe0</span>, <span class="number">0x0</span>, <span class="number">0x49</span>, <span class="number">0x60</span>, <span class="number">0xc4</span>, <span class="number">0x10</span>, <span class="number">0x72</span>, <span class="number">0x92</span>, <span class="number">0xee</span>,</span><br><span class="line">    <span class="number">0x8c</span>, <span class="number">0x16</span>, <span class="number">0x75</span>, <span class="number">0x6e</span>, <span class="number">0x7e</span>, <span class="number">0x40</span>, <span class="number">0x8</span>, <span class="number">0x94</span>, <span class="number">0x41</span>, <span class="number">0x40</span>, <span class="number">0x60</span>, <span class="number">0x88</span>, <span class="number">0xb</span>, <span class="number">0x0</span>, <span class="number">0x5a</span>, <span class="number">0x2c</span>, <span class="number">0x2e</span>, <span class="number">0xa</span>, <span class="number">0xa</span>, <span class="number">0x4e</span>,</span><br><span class="line">    <span class="number">0x30</span>, <span class="number">0x2a</span>, <span class="number">0x88</span>, <span class="number">0x4e</span>, <span class="number">0x11</span>, <span class="number">0x23</span>, <span class="number">0xbe</span>, <span class="number">0x70</span>, <span class="number">0x80</span>, <span class="number">0xed</span>, <span class="number">0x50</span>, <span class="number">0xb9</span>, <span class="number">0xbb</span>, <span class="number">0x38</span>, <span class="number">0x50</span>, <span class="number">0x1c</span>, <span class="number">0x6c</span>, <span class="number">0x23</span>, <span class="number">0x20</span>,</span><br><span class="line">    <span class="number">0xca</span>, <span class="number">0xa2</span>, <span class="number">0xe6</span>, <span class="number">0x70</span>, <span class="number">0xf8</span>, <span class="number">0x93</span>, <span class="number">0x45</span>, <span class="number">0x80</span>, <span class="number">0x65</span>, <span class="number">0x5f</span>, <span class="number">0x7b</span>, <span class="number">0xcc</span>, <span class="number">0xa0</span>, <span class="number">0xdc</span>, <span class="number">0x30</span>, <span class="number">0xee</span>, <span class="number">0x56</span>, <span class="number">0x86</span>, <span class="number">0xaf</span>,</span><br><span class="line">    <span class="number">0x10</span>, <span class="number">0xfd</span>, <span class="number">0x79</span>, <span class="number">0xdd</span>, <span class="number">0xec</span>, <span class="number">0x91</span>, <span class="number">0x18</span>, <span class="number">0xb0</span>, <span class="number">0x2c</span>, <span class="number">0xa8</span>, <span class="number">0xc0</span>, <span class="number">0x38</span>, <span class="number">0xf1</span>, <span class="number">0x1f</span>, <span class="number">0x80</span>, <span class="number">0x15</span>, <span class="number">0x62</span>, <span class="number">0x29</span>, <span class="number">0x60</span>,</span><br><span class="line">    <span class="number">0xea</span>, <span class="number">0x90</span>, <span class="number">0x97</span>, <span class="number">0x86</span>, <span class="number">0x61</span>, <span class="number">0xe2</span>, <span class="number">0x7c</span>, <span class="number">0x43</span>, <span class="number">0xd5</span>, <span class="number">0xe</span>, <span class="number">0xa8</span>, <span class="number">0x0</span>, <span class="number">0xe4</span>, <span class="number">0x8c</span>, <span class="number">0x10</span>, <span class="number">0xc6</span>, <span class="number">0x10</span>, <span class="number">0x34</span>, <span class="number">0x44</span>,</span><br><span class="line">    <span class="number">0xd8</span>, <span class="number">0xf2</span>, <span class="number">0x18</span>, <span class="number">0xc0</span>, <span class="number">0xd9</span>, <span class="number">0x5c</span>, <span class="number">0xac</span>, <span class="number">0xb6</span>, <span class="number">0xe5</span>, <span class="number">0xd</span>, <span class="number">0xf</span>, <span class="number">0xdd</span>, <span class="number">0x94</span>, <span class="number">0x88</span>, <span class="number">0xa7</span>, <span class="number">0x58</span>, <span class="number">0xfe</span>, <span class="number">0xe2</span>, <span class="number">0xd5</span>,</span><br><span class="line">    <span class="number">0xb0</span>, <span class="number">0x68</span>, <span class="number">0x8a</span>, <span class="number">0x14</span>, <span class="number">0x98</span>, <span class="number">0xa</span>, <span class="number">0x46</span>, <span class="number">0x16</span>, <span class="number">0xe6</span>, <span class="number">0x60</span>, <span class="number">0x3f</span>, <span class="number">0xc8</span>, <span class="number">0x48</span>, <span class="number">0xa4</span>, <span class="number">0x3a</span>, <span class="number">0x3d</span>, <span class="number">0xd2</span>, <span class="number">0x18</span>, <span class="number">0xd6</span>,</span><br><span class="line">    <span class="number">0x3f</span>, <span class="number">0xff</span>, <span class="number">0x24</span>, <span class="number">0x4d</span>, <span class="number">0x8a</span>, <span class="number">0x0</span>, <span class="number">0xac</span>, <span class="number">0x60</span>, <span class="number">0xf6</span>, <span class="number">0xb6</span>, <span class="number">0xe8</span>, <span class="number">0x0</span>, <span class="number">0xf8</span>, <span class="number">0xcc</span>, <span class="number">0xf8</span>, <span class="number">0x0</span>, <span class="number">0x74</span>, <span class="number">0xe</span>, <span class="number">0xfc</span>, <span class="number">0xc0</span>,</span><br><span class="line">    <span class="number">0xf8</span>, <span class="number">0x8b</span>, <span class="number">0xc8</span>, <span class="number">0x55</span>, <span class="number">0x5d</span>, <span class="number">0x1c</span>, <span class="number">0x20</span>, <span class="number">0x4b</span>, <span class="number">0xf8</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0xb0</span>, <span class="number">0x0</span>, <span class="number">0x4e</span>, <span class="number">0x9c</span>, <span class="number">0x89</span>, <span class="number">0x98</span>, <span class="number">0xda</span>, <span class="number">0x30</span>,</span><br><span class="line">    <span class="number">0x12</span>, <span class="number">0x4c</span>, <span class="number">0xcd</span>, <span class="number">0xda</span>, <span class="number">0xab</span>, <span class="number">0x3f</span>, <span class="number">0x50</span>, <span class="number">0x28</span>, <span class="number">0xe0</span>, <span class="number">0x0</span>, <span class="number">0x6</span>, <span class="number">0xf0</span>, <span class="number">0x57</span>, <span class="number">0x80</span>, <span class="number">0xf</span>, <span class="number">0xe9</span>, <span class="number">0x34</span>, <span class="number">0x44</span>, <span class="number">0x31</span>, <span class="number">0xf8</span>,</span><br><span class="line">    <span class="number">0x86</span>, <span class="number">0xc1</span>, <span class="number">0x2f</span>, <span class="number">0x0</span>, <span class="number">0x80</span>, <span class="number">0x1e</span>, <span class="number">0xc2</span>, <span class="number">0x60</span>, <span class="number">0xa7</span>, <span class="number">0xb6</span>, <span class="number">0xe0</span>, <span class="number">0x70</span>, <span class="number">0xca</span>, <span class="number">0xa1</span>, <span class="number">0xce</span>, <span class="number">0x4f</span>, <span class="number">0xbb</span>, <span class="number">0xb0</span>, <span class="number">0xc6</span>,</span><br><span class="line">    <span class="number">0xd4</span>, <span class="number">0x2c</span>, <span class="number">0xc6</span>, <span class="number">0x8b</span>, <span class="number">0x0</span>, <span class="number">0xb0</span>, <span class="number">0x10</span>, <span class="number">0xba</span>, <span class="number">0x8d</span>, <span class="number">0x8b</span>, <span class="number">0x18</span>, <span class="number">0xc</span>, <span class="number">0xfd</span>, <span class="number">0x59</span>, <span class="number">0xc3</span>, <span class="number">0xa0</span>, <span class="number">0xaf</span>, <span class="number">0x17</span>, <span class="number">0x82</span>,</span><br><span class="line">    <span class="number">0x61</span>, <span class="number">0xfe</span>, <span class="number">0x80</span>, <span class="number">0x60</span>, <span class="number">0xeb</span>, <span class="number">0xc0</span>, <span class="number">0x46</span>, <span class="number">0x90</span>, <span class="number">0x42</span>, <span class="number">0x40</span>, <span class="number">0xee</span>, <span class="number">0x48</span>, <span class="number">0xbc</span>, <span class="number">0x40</span>, <span class="number">0xd8</span>, <span class="number">0x58</span>, <span class="number">0x60</span>, <span class="number">0x50</span>, <span class="number">0x97</span>,</span><br><span class="line">    <span class="number">0x44</span>, <span class="number">0xd2</span>, <span class="number">0xe0</span>, <span class="number">0xa1</span>, <span class="number">0x4d</span>, <span class="number">0x16</span>, <span class="number">0x50</span>, <span class="number">0x84</span>, <span class="number">0xf0</span>, <span class="number">0x54</span>, <span class="number">0x15</span>, <span class="number">0x9</span>, <span class="number">0xad</span>, <span class="number">0xc</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x44</span>, <span class="number">0x70</span>, <span class="number">0xe0</span>,</span><br><span class="line">    <span class="number">0x51</span>, <span class="number">0xca</span>, <span class="number">0x34</span>, <span class="number">0x86</span>, <span class="number">0x88</span>, <span class="number">0x12</span>, <span class="number">0x14</span>, <span class="number">0xc7</span>, <span class="number">0x20</span>, <span class="number">0xf4</span>, <span class="number">0xf3</span>, <span class="number">0x6b</span>, <span class="number">0x6c</span>, <span class="number">0x10</span>, <span class="number">0xdc</span>, <span class="number">0x54</span>, <span class="number">0x48</span>, <span class="number">0xec</span>, <span class="number">0x7d</span>,</span><br><span class="line">    <span class="number">0x94</span>, <span class="number">0xb8</span>, <span class="number">0x40</span>, <span class="number">0xb9</span>, <span class="number">0x31</span>, <span class="number">0x58</span>, <span class="number">0x9c</span>, <span class="number">0xf0</span>, <span class="number">0xdd</span>, <span class="number">0xa8</span>, <span class="number">0x50</span>, <span class="number">0x57</span>, <span class="number">0x18</span>, <span class="number">0xd0</span>, <span class="number">0x6c</span>, <span class="number">0xfe</span>, <span class="number">0x20</span>, <span class="number">0x6b</span>, <span class="number">0xb9</span>,</span><br><span class="line">    <span class="number">0x17</span>, <span class="number">0x82</span>, <span class="number">0x4e</span>, <span class="number">0xd9</span>, <span class="number">0x68</span>, <span class="number">0x0</span>, <span class="number">0x93</span>, <span class="number">0x3c</span>, <span class="number">0x52</span>, <span class="number">0xa0</span>, <span class="number">0xe2</span>, <span class="number">0xbb</span>, <span class="number">0x40</span>, <span class="number">0x24</span>, <span class="number">0xe8</span>, <span class="number">0xc4</span>, <span class="number">0x55</span>, <span class="number">0xb6</span>, <span class="number">0x27</span>,</span><br><span class="line">    <span class="number">0xca</span>, <span class="number">0x3f</span>, <span class="number">0x76</span>, <span class="number">0x58</span>, <span class="number">0xc0</span>, <span class="number">0xa9</span>, <span class="number">0x0</span>, <span class="number">0x46</span>, <span class="number">0x8</span>, <span class="number">0x20</span>, <span class="number">0xa6</span>, <span class="number">0x90</span>, <span class="number">0x8b</span>, <span class="number">0x56</span>, <span class="number">0x34</span>, <span class="number">0x11</span>, <span class="number">0x9d</span>, <span class="number">0x1d</span>, <span class="number">0xa0</span>,</span><br><span class="line">    <span class="number">0xe0</span>, <span class="number">0x18</span>, <span class="number">0x7e</span>, <span class="number">0x93</span>, <span class="number">0x94</span>, <span class="number">0xbd</span>, <span class="number">0x9c</span>, <span class="number">0xfa</span>, <span class="number">0xb</span>, <span class="number">0xbd</span>, <span class="number">0x6e</span>, <span class="number">0x44</span>, <span class="number">0x2b</span>, <span class="number">0xb3</span>, <span class="number">0x94</span>, <span class="number">0xfd</span>, <span class="number">0xa7</span>, <span class="number">0xa8</span>, <span class="number">0xf0</span>,</span><br><span class="line">    <span class="number">0x64</span>, <span class="number">0xbe</span>, <span class="number">0x8c</span>, <span class="number">0xfa</span>, <span class="number">0xdd</span>, <span class="number">0x5c</span>, <span class="number">0xe</span>, <span class="number">0x8f</span>, <span class="number">0x80</span>, <span class="number">0x5c</span>, <span class="number">0xa8</span>, <span class="number">0x12</span>, <span class="number">0x77</span>, <span class="number">0x70</span>, <span class="number">0x99</span>, <span class="number">0xdc</span>, <span class="number">0x4a</span>, <span class="number">0x76</span>, <span class="number">0x8</span>,</span><br><span class="line">    <span class="number">0x2e</span>, <span class="number">0x54</span>, <span class="number">0x60</span>, <span class="number">0xba</span>, <span class="number">0xe0</span>, <span class="number">0xad</span>, <span class="number">0xc7</span>, <span class="number">0x99</span>, <span class="number">0x9a</span>, <span class="number">0x0</span>, <span class="number">0x8</span>, <span class="number">0x0</span>, <span class="number">0xb8</span>, <span class="number">0x62</span>, <span class="number">0x94</span>, <span class="number">0x41</span>, <span class="number">0x80</span>, <span class="number">0x9a</span>, <span class="number">0xc4</span>, <span class="number">0x26</span>,</span><br><span class="line">    <span class="number">0xed</span>, <span class="number">0xbf</span>, <span class="number">0x90</span>, <span class="number">0xf5</span>, <span class="number">0x74</span>, <span class="number">0x5b</span>, <span class="number">0x2d</span>, <span class="number">0x49</span>, <span class="number">0x57</span>, <span class="number">0xc0</span>, <span class="number">0x44</span>, <span class="number">0xd0</span>, <span class="number">0x9f</span>, <span class="number">0xf2</span>, <span class="number">0x5e</span>, <span class="number">0x60</span>, <span class="number">0xb3</span>, <span class="number">0x40</span>, <span class="number">0x86</span>,</span><br><span class="line">    <span class="number">0x68</span>, <span class="number">0x6a</span>, <span class="number">0x20</span>, <span class="number">0x30</span>, <span class="number">0x16</span>, <span class="number">0xd0</span>, <span class="number">0xbc</span>, <span class="number">0x60</span>, <span class="number">0x7</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x31</span>, <span class="number">0xb9</span>, <span class="number">0x7d</span>, <span class="number">0x8b</span>, <span class="number">0x10</span>, <span class="number">0xf9</span>, <span class="number">0x70</span>, <span class="number">0x42</span>,</span><br><span class="line">    <span class="number">0x29</span>, <span class="number">0x62</span>, <span class="number">0xe8</span>, <span class="number">0x37</span>, <span class="number">0x50</span>, <span class="number">0xc5</span>, <span class="number">0x90</span>, <span class="number">0x28</span>, <span class="number">0xa7</span>, <span class="number">0x84</span>, <span class="number">0x46</span>, <span class="number">0x34</span>, <span class="number">0x68</span>, <span class="number">0x40</span>, <span class="number">0x6b</span>, <span class="number">0xe4</span>, <span class="number">0x40</span>, <span class="number">0x19</span>, <span class="number">0x20</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0x26</span>, <span class="number">0x94</span>, <span class="number">0xae</span>, <span class="number">0xc4</span>, <span class="number">0xe1</span>, <span class="number">0x32</span>, <span class="number">0x7e</span>, <span class="number">0xaf</span>, <span class="number">0xfd</span>, <span class="number">0x60</span>, <span class="number">0x10</span>, <span class="number">0x64</span>, <span class="number">0xc4</span>, <span class="number">0x98</span>, <span class="number">0x8</span>, <span class="number">0xc0</span>, <span class="number">0xe9</span>, <span class="number">0xdb</span>,</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0xb</span>, <span class="number">0x70</span>, <span class="number">0x96</span>, <span class="number">0x64</span>, <span class="number">0x4</span>, <span class="number">0xe2</span>, <span class="number">0x32</span>, <span class="number">0xba</span>, <span class="number">0x99</span>, <span class="number">0x30</span>, <span class="number">0xe8</span>, <span class="number">0xaa</span>, <span class="number">0x1e</span>, <span class="number">0x8e</span>, <span class="number">0xbd</span>, <span class="number">0xd3</span>, <span class="number">0x8e</span>, <span class="number">0x30</span>,</span><br><span class="line">    <span class="number">0x37</span>, <span class="number">0x7d</span>, <span class="number">0x34</span>, <span class="number">0x49</span>, <span class="number">0xf8</span>, <span class="number">0x0</span>, <span class="number">0x3b</span>, <span class="number">0x5e</span>, <span class="number">0xd3</span>, <span class="number">0x7c</span>, <span class="number">0xc8</span>, <span class="number">0x85</span>, <span class="number">0xb3</span>, <span class="number">0xf3</span>, <span class="number">0x40</span>, <span class="number">0x70</span>, <span class="number">0x80</span>, <span class="number">0x40</span>, <span class="number">0xd3</span>,</span><br><span class="line">    <span class="number">0xc5</span>, <span class="number">0x90</span>, <span class="number">0xa8</span>, <span class="number">0xa2</span>, <span class="number">0xb7</span>, <span class="number">0x80</span>, <span class="number">0x0</span>, <span class="number">0xcc</span>, <span class="number">0xb9</span>, <span class="number">0x28</span>, <span class="number">0xc6</span>, <span class="number">0x85</span>, <span class="number">0xbe</span>, <span class="number">0xc</span>, <span class="number">0x98</span>, <span class="number">0xfa</span>, <span class="number">0xb4</span>, <span class="number">0x79</span>, <span class="number">0x76</span>,</span><br><span class="line">    <span class="number">0xef</span>, <span class="number">0xb0</span>, <span class="number">0x80</span>, <span class="number">0xcb</span>, <span class="number">0x81</span>, <span class="number">0x0</span>, <span class="number">0x48</span>, <span class="number">0x7f</span>, <span class="number">0xf0</span>, <span class="number">0xc8</span>, <span class="number">0x90</span>, <span class="number">0x4e</span>, <span class="number">0x7c</span>, <span class="number">0xf0</span>, <span class="number">0x6b</span>, <span class="number">0x54</span>, <span class="number">0x59</span>, <span class="number">0xd6</span>, <span class="number">0x4b</span>,</span><br><span class="line">    <span class="number">0xe4</span>, <span class="number">0x79</span>, <span class="number">0x51</span>, <span class="number">0x20</span>, <span class="number">0x0</span>, <span class="number">0xc0</span>, <span class="number">0xf6</span>, <span class="number">0xa9</span>, <span class="number">0xd4</span>, <span class="number">0xd4</span>, <span class="number">0xe0</span>, <span class="number">0xfe</span>, <span class="number">0xef</span>, <span class="number">0x1c</span>, <span class="number">0xb2</span>, <span class="number">0xd4</span>, <span class="number">0x72</span>, <span class="number">0x80</span>, <span class="number">0xc2</span>,</span><br><span class="line">    <span class="number">0xea</span>, <span class="number">0xf6</span>, <span class="number">0xdf</span>, <span class="number">0xf0</span>, <span class="number">0x76</span>, <span class="number">0xef</span>, <span class="number">0x78</span>, <span class="number">0xd4</span>, <span class="number">0x98</span>, <span class="number">0xd7</span>, <span class="number">0x72</span>, <span class="number">0x4d</span>, <span class="number">0xeb</span>, <span class="number">0x40</span>, <span class="number">0x47</span>, <span class="number">0x18</span>, <span class="number">0xa8</span>, <span class="number">0x71</span>, <span class="number">0x52</span>,</span><br><span class="line">    <span class="number">0x57</span>, <span class="number">0xa0</span>, <span class="number">0x77</span>, <span class="number">0xc5</span>, <span class="number">0x86</span>, <span class="number">0x0</span>, <span class="number">0xb0</span>, <span class="number">0xa</span>, <span class="number">0x2d</span>, <span class="number">0xa8</span>, <span class="number">0x90</span>, <span class="number">0xdb</span>, <span class="number">0xe8</span>, <span class="number">0xeb</span>, <span class="number">0xf7</span>, <span class="number">0x8</span>, <span class="number">0x44</span>, <span class="number">0x92</span>, <span class="number">0x64</span>, <span class="number">0x61</span>,</span><br><span class="line">    <span class="number">0xfa</span>, <span class="number">0x66</span>, <span class="number">0x22</span>, <span class="number">0xdc</span>, <span class="number">0xf8</span>, <span class="number">0x0</span>, <span class="number">0x5d</span>, <span class="number">0x1a</span>, <span class="number">0xd6</span>, <span class="number">0xb5</span>, <span class="number">0x18</span>, <span class="number">0x0</span>, <span class="number">0xf8</span>, <span class="number">0x7f</span>, <span class="number">0xd8</span>, <span class="number">0x68</span>, <span class="number">0x7</span>, <span class="number">0x9c</span>, <span class="number">0xdc</span>, <span class="number">0xa0</span>,</span><br><span class="line">    <span class="number">0xf9</span>, <span class="number">0xe</span>, <span class="number">0x88</span>, <span class="number">0x25</span>, <span class="number">0xb0</span>, <span class="number">0x90</span>, <span class="number">0x60</span>, <span class="number">0xf1</span>, <span class="number">0x29</span>, <span class="number">0x88</span>, <span class="number">0xcf</span>, <span class="number">0x84</span>, <span class="number">0x3e</span>, <span class="number">0x20</span>, <span class="number">0x98</span>, <span class="number">0x28</span>, <span class="number">0x3a</span>, <span class="number">0x50</span>, <span class="number">0x87</span>,</span><br><span class="line">    <span class="number">0x33</span>, <span class="number">0x2d</span>, <span class="number">0xb0</span>, <span class="number">0x84</span>, <span class="number">0x84</span>, <span class="number">0xd0</span>, <span class="number">0xa4</span>, <span class="number">0x40</span>, <span class="number">0x0</span>, <span class="number">0x78</span>, <span class="number">0xaa</span>, <span class="number">0xfa</span>, <span class="number">0x20</span>, <span class="number">0xda</span>, <span class="number">0xc5</span>, <span class="number">0x2d</span>, <span class="number">0xf</span>, <span class="number">0x38</span>, <span class="number">0x20</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0x3</span>, <span class="number">0xdc</span>, <span class="number">0x43</span>, <span class="number">0x62</span>, <span class="number">0x71</span>, <span class="number">0xb</span>, <span class="number">0xaf</span>, <span class="number">0x20</span>, <span class="number">0x6b</span>, <span class="number">0x0</span>, <span class="number">0xe4</span>, <span class="number">0x58</span>, <span class="number">0xeb</span>, <span class="number">0xc6</span>, <span class="number">0xb8</span>, <span class="number">0xa0</span>, <span class="number">0xa0</span>, <span class="number">0x70</span>, <span class="number">0x10</span>,</span><br><span class="line">    <span class="number">0x76</span>, <span class="number">0x46</span>, <span class="number">0xa0</span>, <span class="number">0xb4</span>, <span class="number">0xd8</span>, <span class="number">0xe2</span>, <span class="number">0x78</span>, <span class="number">0x47</span>, <span class="number">0xe</span>, <span class="number">0x4f</span>, <span class="number">0xc8</span>, <span class="number">0xd4</span>, <span class="number">0x30</span>, <span class="number">0xe4</span>, <span class="number">0x84</span>, <span class="number">0x4c</span>, <span class="number">0xb0</span>, <span class="number">0x91</span>, <span class="number">0xc2</span>,</span><br><span class="line">    <span class="number">0xa0</span>, <span class="number">0xfe</span>, <span class="number">0x70</span>, <span class="number">0xef</span>, <span class="number">0x10</span>, <span class="number">0x40</span>, <span class="number">0x68</span>, <span class="number">0x83</span>, <span class="number">0xd2</span>, <span class="number">0xb4</span>, <span class="number">0x20</span>, <span class="number">0xcd</span>, <span class="number">0xd0</span>, <span class="number">0x0</span>, <span class="number">0xfe</span>, <span class="number">0xb3</span>, <span class="number">0x33</span>, <span class="number">0x37</span>, <span class="number">0x80</span>,</span><br><span class="line">    <span class="number">0x97</span>, <span class="number">0xd7</span>, <span class="number">0xa0</span>, <span class="number">0xc7</span>, <span class="number">0x62</span>, <span class="number">0xbe</span>, <span class="number">0x40</span>, <span class="number">0xff</span>, <span class="number">0xd0</span>, <span class="number">0xc0</span>, <span class="number">0x44</span>, <span class="number">0x94</span>, <span class="number">0xda</span>, <span class="number">0x32</span>, <span class="number">0xb0</span>, <span class="number">0x9c</span>, <span class="number">0xd8</span>, <span class="number">0x5a</span>, <span class="number">0x34</span>,</span><br><span class="line">    <span class="number">0x72</span>, <span class="number">0xe</span>, <span class="number">0x15</span>, <span class="number">0xc</span>, <span class="number">0x80</span>, <span class="number">0xd0</span>, <span class="number">0xc2</span>, <span class="number">0x1a</span>, <span class="number">0xcf</span>, <span class="number">0xfa</span>, <span class="number">0xb2</span>, <span class="number">0x20</span>, <span class="number">0x48</span>, <span class="number">0xc8</span>, <span class="number">0x5e</span>, <span class="number">0x5d</span>, <span class="number">0x62</span>, <span class="number">0xbb</span>, <span class="number">0x26</span>,</span><br><span class="line">    <span class="number">0xa4</span>, <span class="number">0x6b</span>, <span class="number">0x73</span>, <span class="number">0x0</span>, <span class="number">0x8</span>, <span class="number">0xf2</span>, <span class="number">0x8f</span>, <span class="number">0xbb</span>, <span class="number">0x13</span>, <span class="number">0xb6</span>, <span class="number">0x40</span>, <span class="number">0xb</span>, <span class="number">0xf1</span>, <span class="number">0xe9</span>, <span class="number">0xf1</span>, <span class="number">0xf9</span>, <span class="number">0x80</span>, <span class="number">0xf8</span>, <span class="number">0x4c</span>, <span class="number">0xca</span>,</span><br><span class="line">    <span class="number">0x3d</span>, <span class="number">0x60</span>, <span class="number">0xe7</span>, <span class="number">0x9a</span>, <span class="number">0x3e</span>, <span class="number">0xd</span>, <span class="number">0x77</span>, <span class="number">0x83</span>, <span class="number">0x96</span>, <span class="number">0x60</span>, <span class="number">0xa0</span>, <span class="number">0xc4</span>, <span class="number">0x81</span>, <span class="number">0xc4</span>, <span class="number">0xf6</span>, <span class="number">0x20</span>, <span class="number">0x79</span>, <span class="number">0x30</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x42</span>, <span class="number">0x95</span>, <span class="number">0xe4</span>, <span class="number">0xb</span>, <span class="number">0x4a</span>, <span class="number">0x30</span>, <span class="number">0x40</span>, <span class="number">0xaa</span>, <span class="number">0x73</span>, <span class="number">0x91</span>, <span class="number">0xbc</span>, <span class="number">0xa7</span>, <span class="number">0xe8</span>, <span class="number">0xed</span>, <span class="number">0x20</span>, <span class="number">0x4e</span>, <span class="number">0xbc</span>, <span class="number">0x6d</span>, <span class="number">0xbc</span>,</span><br><span class="line">    <span class="number">0xf5</span>, <span class="number">0x22</span>, <span class="number">0xae</span>, <span class="number">0x6b</span>, <span class="number">0x79</span>, <span class="number">0x38</span>, <span class="number">0x81</span>, <span class="number">0x5c</span>, <span class="number">0x88</span>, <span class="number">0x59</span>, <span class="number">0xbc</span>, <span class="number">0x50</span>, <span class="number">0x54</span>, <span class="number">0x6b</span>, <span class="number">0x84</span>, <span class="number">0x61</span>, <span class="number">0xb8</span>, <span class="number">0x20</span>, <span class="number">0xc1</span>,</span><br><span class="line">    <span class="number">0xec</span>, <span class="number">0x8</span>, <span class="number">0xc3</span>, <span class="number">0x9c</span>, <span class="number">0x3a</span>, <span class="number">0x32</span>, <span class="number">0x7</span>, <span class="number">0xd0</span>, <span class="number">0xfb</span>, <span class="number">0xd1</span>, <span class="number">0xd3</span>, <span class="number">0xab</span>, <span class="number">0xbf</span>, <span class="number">0x1c</span>, <span class="number">0xc0</span>, <span class="number">0x93</span>, <span class="number">0x9a</span>, <span class="number">0xe2</span>, <span class="number">0x90</span>,</span><br><span class="line">    <span class="number">0x28</span>, <span class="number">0xa0</span>, <span class="number">0xe0</span>, <span class="number">0xe8</span>, <span class="number">0xf0</span>, <span class="number">0xd1</span>, <span class="number">0xa0</span>, <span class="number">0xcc</span>, <span class="number">0xe0</span>, <span class="number">0xa8</span>, <span class="number">0x5a</span>, <span class="number">0xa0</span>, <span class="number">0x61</span>, <span class="number">0x1a</span>, <span class="number">0xae</span>, <span class="number">0x2e</span>, <span class="number">0xb1</span>, <span class="number">0x19</span>, <span class="number">0x26</span>,</span><br><span class="line">    <span class="number">0x5e</span>, <span class="number">0x0</span>, <span class="number">0xf4</span>, <span class="number">0x5e</span>, <span class="number">0x9c</span>, <span class="number">0xdd</span>, <span class="number">0xb3</span>, <span class="number">0xd0</span>, <span class="number">0x8e</span>, <span class="number">0x80</span>, <span class="number">0x5e</span>, <span class="number">0x6f</span>, <span class="number">0x22</span>, <span class="number">0x28</span>, <span class="number">0x60</span>, <span class="number">0x3e</span>, <span class="number">0xe8</span>, <span class="number">0x9b</span>, <span class="number">0x97</span>,</span><br><span class="line">    <span class="number">0x14</span>, <span class="number">0xe</span>, <span class="number">0xca</span>, <span class="number">0x50</span>, <span class="number">0xc</span>, <span class="number">0x0</span>, <span class="number">0xf</span>, <span class="number">0x40</span>, <span class="number">0x24</span>, <span class="number">0xff</span>, <span class="number">0xf0</span>, <span class="number">0xeb</span>, <span class="number">0xe</span>, <span class="number">0xfa</span>, <span class="number">0x7c</span>, <span class="number">0x74</span>, <span class="number">0x1b</span>, <span class="number">0x6c</span>, <span class="number">0x21</span>, <span class="number">0xb7</span>,</span><br><span class="line">    <span class="number">0xd7</span>, <span class="number">0xb0</span>, <span class="number">0x1b</span>, <span class="number">0x30</span>, <span class="number">0x82</span>, <span class="number">0xbb</span>, <span class="number">0xfa</span>, <span class="number">0x5c</span>, <span class="number">0x3</span>, <span class="number">0xb0</span>, <span class="number">0xc8</span>, <span class="number">0xa0</span>, <span class="number">0x55</span>, <span class="number">0xe1</span>, <span class="number">0xe0</span>, <span class="number">0xb1</span>, <span class="number">0x83</span>, <span class="number">0x34</span>, <span class="number">0xc0</span>,</span><br><span class="line">    <span class="number">0xba</span>, <span class="number">0x50</span>, <span class="number">0xdb</span>, <span class="number">0x44</span>, <span class="number">0x8d</span>, <span class="number">0xd6</span>, <span class="number">0xb1</span>, <span class="number">0x8a</span>, <span class="number">0xbe</span>, <span class="number">0xe7</span>, <span class="number">0x77</span>, <span class="number">0x2</span>, <span class="number">0x88</span>, <span class="number">0x98</span>, <span class="number">0xdd</span>, <span class="number">0x0</span>, <span class="number">0xe1</span>, <span class="number">0xb</span>, <span class="number">0x10</span>, <span class="number">0x18</span>,</span><br><span class="line">    <span class="number">0x4f</span>, <span class="number">0x1</span>, <span class="number">0xc2</span>, <span class="number">0x10</span>, <span class="number">0x70</span>, <span class="number">0x80</span>, <span class="number">0xb3</span>, <span class="number">0x2a</span>, <span class="number">0xc6</span>, <span class="number">0x40</span>, <span class="number">0x4f</span>, <span class="number">0xf9</span>, <span class="number">0x72</span>, <span class="number">0xe</span>, <span class="number">0x21</span>, <span class="number">0xe0</span>, <span class="number">0x7a</span>, <span class="number">0x2c</span>, <span class="number">0xd4</span>,</span><br><span class="line">    <span class="number">0xbc</span>, <span class="number">0x3c</span>, <span class="number">0xf0</span>, <span class="number">0xf2</span>, <span class="number">0xca</span>, <span class="number">0x0</span>, <span class="number">0x72</span>, <span class="number">0x14</span>, <span class="number">0xf0</span>, <span class="number">0xba</span>, <span class="number">0x7f</span>, <span class="number">0x70</span>, <span class="number">0x98</span>, <span class="number">0x80</span>, <span class="number">0x8d</span>, <span class="number">0xa7</span>, <span class="number">0x41</span>, <span class="number">0x54</span>, <span class="number">0x3f</span>,</span><br><span class="line">    <span class="number">0x4d</span>, <span class="number">0xbf</span>, <span class="number">0xc6</span>, <span class="number">0x0</span>, <span class="number">0xc0</span>, <span class="number">0x10</span>, <span class="number">0x30</span>, <span class="number">0x75</span>, <span class="number">0xd6</span>, <span class="number">0x0</span>, <span class="number">0xc0</span>, <span class="number">0x32</span>, <span class="number">0x28</span>, <span class="number">0xe4</span>, <span class="number">0x3f</span>, <span class="number">0xa5</span>, <span class="number">0x94</span>, <span class="number">0x58</span>, <span class="number">0xc8</span>,</span><br><span class="line">    <span class="number">0xd4</span>, <span class="number">0xb6</span>, <span class="number">0x4</span>, <span class="number">0x85</span>, <span class="number">0x38</span>, <span class="number">0x8a</span>, <span class="number">0x49</span>, <span class="number">0x1c</span>, <span class="number">0x26</span>, <span class="number">0xa1</span>, <span class="number">0xec</span>, <span class="number">0xc8</span>, <span class="number">0x86</span>, <span class="number">0x19</span>, <span class="number">0x0</span>, <span class="number">0x58</span>, <span class="number">0x70</span>, <span class="number">0xd1</span>, <span class="number">0xc2</span>,</span><br><span class="line">    <span class="number">0x24</span>, <span class="number">0x6d</span>, <span class="number">0x37</span>, <span class="number">0x2e</span>, <span class="number">0xc0</span>, <span class="number">0x80</span>, <span class="number">0x1c</span>, <span class="number">0x20</span>, <span class="number">0xd5</span>, <span class="number">0x11</span>, <span class="number">0x11</span>, <span class="number">0x44</span>, <span class="number">0x98</span>, <span class="number">0x99</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x15</span>, <span class="number">0x1a</span>, <span class="number">0xde</span>,</span><br><span class="line">    <span class="number">0x98</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x7c</span>, <span class="number">0x6b</span>, <span class="number">0x0</span>, <span class="number">0xed</span>, <span class="number">0x44</span>, <span class="number">0xc3</span>, <span class="number">0xca</span>, <span class="number">0xd8</span>, <span class="number">0xe8</span>, <span class="number">0x80</span>, <span class="number">0x16</span>, <span class="number">0xc4</span>, <span class="number">0xb0</span>, <span class="number">0xd9</span>, <span class="number">0xb8</span>, <span class="number">0xe4</span>, <span class="number">0x5d</span>,</span><br><span class="line">    <span class="number">0xef</span>, <span class="number">0xd3</span>, <span class="number">0x4c</span>, <span class="number">0x60</span>, <span class="number">0xcb</span>, <span class="number">0xdd</span>, <span class="number">0x50</span>, <span class="number">0x91</span>, <span class="number">0xb2</span>, <span class="number">0x40</span>, <span class="number">0x17</span>, <span class="number">0x6c</span>, <span class="number">0xdc</span>, <span class="number">0x20</span>, <span class="number">0x7</span>, <span class="number">0xdc</span>, <span class="number">0x6e</span>, <span class="number">0xff</span>, <span class="number">0xf8</span>,</span><br><span class="line">    <span class="number">0x9d</span>, <span class="number">0x60</span>, <span class="number">0x2f</span>, <span class="number">0xc0</span>, <span class="number">0x94</span>, <span class="number">0x3c</span>, <span class="number">0x9a</span>, <span class="number">0xc0</span>, <span class="number">0x90</span>, <span class="number">0x1a</span>, <span class="number">0x6d</span>, <span class="number">0x70</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xae</span>, <span class="number">0x0</span>, <span class="number">0xc8</span>, <span class="number">0x1</span>, <span class="number">0xc0</span>,</span><br><span class="line">    <span class="number">0xd3</span>, <span class="number">0xa5</span>, <span class="number">0xc8</span>, <span class="number">0xa4</span>, <span class="number">0xb6</span>, <span class="number">0x98</span>, <span class="number">0xe0</span>, <span class="number">0x80</span>, <span class="number">0x4c</span>, <span class="number">0x26</span>, <span class="number">0xf0</span>, <span class="number">0x60</span>, <span class="number">0x51</span>, <span class="number">0x3c</span>, <span class="number">0x55</span>, <span class="number">0x78</span>, <span class="number">0x36</span>, <span class="number">0x5a</span>, <span class="number">0x9e</span>,</span><br><span class="line">    <span class="number">0xf1</span>, <span class="number">0x58</span>, <span class="number">0xd5</span>, <span class="number">0x9</span>, <span class="number">0xd2</span>, <span class="number">0xa6</span>, <span class="number">0xb7</span>, <span class="number">0x7c</span>, <span class="number">0x79</span>, <span class="number">0x8a</span>, <span class="number">0x50</span>, <span class="number">0x13</span>, <span class="number">0x95</span>, <span class="number">0xb3</span>, <span class="number">0x9e</span>, <span class="number">0x32</span>, <span class="number">0x38</span>, <span class="number">0xdd</span>, <span class="number">0xbd</span>,</span><br><span class="line">    <span class="number">0xe4</span>, <span class="number">0xdc</span>, <span class="number">0x8f</span>, <span class="number">0xa0</span>, <span class="number">0x2e</span>, <span class="number">0x40</span>, <span class="number">0xc8</span>, <span class="number">0x34</span>, <span class="number">0x9a</span>, <span class="number">0xff</span>, <span class="number">0xe0</span>, <span class="number">0x49</span>, <span class="number">0x90</span>, <span class="number">0x72</span>, <span class="number">0xd9</span>, <span class="number">0xa4</span>, <span class="number">0xc8</span>, <span class="number">0xaa</span>, <span class="number">0x7c</span>,</span><br><span class="line">    <span class="number">0x41</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x0</span>, <span class="number">0x4c</span>, <span class="number">0xf</span>, <span class="number">0xc0</span>, <span class="number">0xee</span>, <span class="number">0x7c</span>, <span class="number">0x61</span>, <span class="number">0xbc</span>, <span class="number">0xd0</span>, <span class="number">0x0</span>, <span class="number">0x94</span>, <span class="number">0x42</span>, <span class="number">0x78</span>, <span class="number">0xc5</span>, <span class="number">0x98</span>, <span class="number">0xb9</span>, <span class="number">0x1f</span>,</span><br><span class="line">    <span class="number">0x68</span>, <span class="number">0x9b</span>, <span class="number">0x91</span>, <span class="number">0xd7</span>, <span class="number">0x4</span>, <span class="number">0x8</span>, <span class="number">0xbe</span>, <span class="number">0x66</span>, <span class="number">0x0</span>, <span class="number">0xe8</span>, <span class="number">0xfc</span>, <span class="number">0x70</span>, <span class="number">0x40</span>, <span class="number">0x9c</span>, <span class="number">0x3e</span>, <span class="number">0xc0</span>, <span class="number">0xa</span>, <span class="number">0x3c</span>, <span class="number">0x35</span>, <span class="number">0x58</span>,</span><br><span class="line">    <span class="number">0xb7</span>, <span class="number">0xff</span>, <span class="number">0x2d</span>, <span class="number">0x60</span>, <span class="number">0x9a</span>, <span class="number">0x88</span>, <span class="number">0xbe</span>, <span class="number">0x6f</span>, <span class="number">0xd4</span>, <span class="number">0x10</span>, <span class="number">0x9b</span>, <span class="number">0xa0</span>, <span class="number">0x7a</span>, <span class="number">0xee</span>, <span class="number">0xa6</span>, <span class="number">0x56</span>, <span class="number">0x6a</span>, <span class="number">0x7</span>, <span class="number">0x55</span>,</span><br><span class="line">    <span class="number">0x0</span>, <span class="number">0x87</span>, <span class="number">0xd4</span>, <span class="number">0xc5</span>, <span class="number">0x3c</span>, <span class="number">0xef</span>, <span class="number">0xd0</span>, <span class="number">0xfc</span>, <span class="number">0xd6</span>, <span class="number">0x30</span>, <span class="number">0x0</span>, <span class="number">0xf6</span>, <span class="number">0x0</span>, <span class="number">0x6d</span>, <span class="number">0x72</span>, <span class="number">0x18</span>, <span class="number">0x87</span>, <span class="number">0xd8</span>, <span class="number">0xaa</span>, <span class="number">0x98</span>,</span><br><span class="line">    <span class="number">0x96</span>, <span class="number">0x95</span>, <span class="number">0x48</span>, <span class="number">0xb1</span>, <span class="number">0x79</span>, <span class="number">0xf0</span>, <span class="number">0x9e</span>, <span class="number">0x20</span>, <span class="number">0xd7</span>, <span class="number">0x40</span>, <span class="number">0x70</span>, <span class="number">0x50</span>, <span class="number">0xe4</span>, <span class="number">0x54</span>, <span class="number">0x7c</span>, <span class="number">0xcc</span>, <span class="number">0xce</span>, <span class="number">0x10</span>, <span class="number">0x16</span>,</span><br><span class="line">    <span class="number">0xa2</span>, <span class="number">0xfd</span>, <span class="number">0x36</span>, <span class="number">0x86</span>, <span class="number">0x50</span>, <span class="number">0x9a</span>, <span class="number">0xe0</span>, <span class="number">0x9c</span>, <span class="number">0xa4</span>, <span class="number">0x5a</span>, <span class="number">0x62</span>, <span class="number">0xce</span>, <span class="number">0xb1</span>, <span class="number">0x77</span>, <span class="number">0xea</span>, <span class="number">0x45</span>, <span class="number">0x40</span>, <span class="number">0x53</span>, <span class="number">0xaa</span>,</span><br><span class="line">    <span class="number">0x86</span>, <span class="number">0xf0</span>, <span class="number">0xb</span>, <span class="number">0x4</span>, <span class="number">0xb2</span>, <span class="number">0x3b</span>, <span class="number">0x50</span>, <span class="number">0x10</span>, <span class="number">0xf8</span>, <span class="number">0x62</span>, <span class="number">0xd0</span>, <span class="number">0xb6</span>, <span class="number">0xac</span>, <span class="number">0x70</span>, <span class="number">0x80</span>, <span class="number">0x66</span>, <span class="number">0xd8</span>, <span class="number">0x10</span>, <span class="number">0x28</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0x89</span>, <span class="number">0x5</span>, <span class="number">0xf9</span>, <span class="number">0x69</span>, <span class="number">0x98</span>, <span class="number">0x5b</span>, <span class="number">0xe0</span>, <span class="number">0x68</span>, <span class="number">0xf2</span>, <span class="number">0xf5</span>, <span class="number">0xa7</span>, <span class="number">0xab</span>, <span class="number">0x90</span>, <span class="number">0xa8</span>, <span class="number">0xcb</span>, <span class="number">0x40</span>, <span class="number">0xa8</span>, <span class="number">0xb8</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0x8d</span>, <span class="number">0x28</span>, <span class="number">0x53</span>, <span class="number">0x9c</span>, <span class="number">0x52</span>, <span class="number">0xcc</span>, <span class="number">0xfe</span>, <span class="number">0xc0</span>, <span class="number">0x47</span>, <span class="number">0x30</span>, <span class="number">0xff</span>, <span class="number">0x1c</span>, <span class="number">0x58</span>, <span class="number">0xe6</span>, <span class="number">0x69</span>, <span class="number">0x87</span>, <span class="number">0xc0</span>, <span class="number">0x98</span>,</span><br><span class="line">    <span class="number">0x8c</span>, <span class="number">0xc0</span>, <span class="number">0x90</span>, <span class="number">0x8c</span>, <span class="number">0xf9</span>, <span class="number">0xee</span>, <span class="number">0xbe</span>, <span class="number">0x10</span>, <span class="number">0xd0</span>, <span class="number">0x98</span>, <span class="number">0x20</span>, <span class="number">0xa6</span>, <span class="number">0x8e</span>, <span class="number">0xe8</span>, <span class="number">0xd6</span>, <span class="number">0x10</span>, <span class="number">0x32</span>, <span class="number">0x70</span>, <span class="number">0x7e</span>,</span><br><span class="line">    <span class="number">0x42</span>, <span class="number">0xb9</span>, <span class="number">0x14</span>, <span class="number">0x6c</span>, <span class="number">0xe5</span>, <span class="number">0xe</span>, <span class="number">0xc8</span>, <span class="number">0x6c</span>, <span class="number">0x0</span>, <span class="number">0x1</span>, <span class="number">0xca</span>, <span class="number">0x46</span>, <span class="number">0x74</span>, <span class="number">0x98</span>, <span class="number">0x12</span>, <span class="number">0xc7</span>, <span class="number">0xd8</span>, <span class="number">0x60</span>, <span class="number">0x9c</span>, <span class="number">0xd4</span>,</span><br><span class="line">    <span class="number">0xc6</span>, <span class="number">0xf8</span>, <span class="number">0xfc</span>, <span class="number">0x2</span>, <span class="number">0x60</span>, <span class="number">0xc0</span>, <span class="number">0xc4</span>, <span class="number">0x10</span>, <span class="number">0x1a</span>, <span class="number">0xba</span>, <span class="number">0xac</span>, <span class="number">0x23</span>, <span class="number">0x40</span>, <span class="number">0xdf</span>, <span class="number">0x82</span>, <span class="number">0x47</span>, <span class="number">0x7d</span>, <span class="number">0x86</span>, <span class="number">0x6</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0xf2</span>, <span class="number">0x8</span>, <span class="number">0x3</span>, <span class="number">0x9e</span>, <span class="number">0x98</span>, <span class="number">0x70</span>, <span class="number">0xd0</span>, <span class="number">0x9a</span>, <span class="number">0xe</span>, <span class="number">0x35</span>, <span class="number">0x58</span>, <span class="number">0xb1</span>, <span class="number">0x62</span>, <span class="number">0xd0</span>, <span class="number">0x3f</span>, <span class="number">0xe1</span>, <span class="number">0x83</span>, <span class="number">0xb</span>, <span class="number">0x50</span>,</span><br><span class="line">    <span class="number">0x6c</span>, <span class="number">0x3c</span>, <span class="number">0xd1</span>, <span class="number">0xe3</span>, <span class="number">0x48</span>, <span class="number">0x14</span>, <span class="number">0xe0</span>, <span class="number">0x82</span>, <span class="number">0xe9</span>, <span class="number">0x90</span>, <span class="number">0x3e</span>, <span class="number">0x20</span>, <span class="number">0x4b</span>, <span class="number">0x7a</span>, <span class="number">0xb2</span>, <span class="number">0x13</span>, <span class="number">0x24</span>, <span class="number">0x99</span>, <span class="number">0x3c</span>,</span><br><span class="line">    <span class="number">0x5c</span>, <span class="number">0x13</span>, <span class="number">0xb0</span>, <span class="number">0x49</span>, <span class="number">0xbc</span>, <span class="number">0x7</span>, <span class="number">0xb9</span>, <span class="number">0x50</span>, <span class="number">0xaa</span>, <span class="number">0xf4</span>, <span class="number">0x20</span>, <span class="number">0x79</span>, <span class="number">0x88</span>, <span class="number">0x17</span>, <span class="number">0x23</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xe3</span>, <span class="number">0xb3</span>,</span><br><span class="line">    <span class="number">0x50</span>, <span class="number">0xb</span>, <span class="number">0xf3</span>, <span class="number">0x4d</span>, <span class="number">0x40</span>, <span class="number">0xc0</span>, <span class="number">0xd8</span>, <span class="number">0xb1</span>, <span class="number">0x16</span>, <span class="number">0x90</span>, <span class="number">0x54</span>, <span class="number">0x53</span>, <span class="number">0x60</span>, <span class="number">0x49</span>, <span class="number">0xf8</span>, <span class="number">0x60</span>, <span class="number">0xb</span>, <span class="number">0xa9</span>, <span class="number">0xde</span>,</span><br><span class="line">    <span class="number">0xe4</span>, <span class="number">0x0</span>, <span class="number">0xb8</span>, <span class="number">0x70</span>, <span class="number">0x94</span>, <span class="number">0xaf</span>, <span class="number">0x99</span>, <span class="number">0x4</span>, <span class="number">0x38</span>, <span class="number">0xd8</span>, <span class="number">0x1e</span>, <span class="number">0x0</span>, <span class="number">0xc4</span>, <span class="number">0x9c</span>, <span class="number">0x40</span>, <span class="number">0x4</span>, <span class="number">0x4b</span>, <span class="number">0xd9</span>, <span class="number">0xf8</span>, <span class="number">0x70</span>,</span><br><span class="line">    <span class="number">0xc8</span>, <span class="number">0x84</span>, <span class="number">0x34</span>, <span class="number">0x97</span>, <span class="number">0xf7</span>, <span class="number">0xea</span>, <span class="number">0xce</span>, <span class="number">0x3c</span>, <span class="number">0xc0</span>, <span class="number">0x53</span>, <span class="number">0x7c</span>, <span class="number">0xfa</span>, <span class="number">0x78</span>, <span class="number">0xf</span>, <span class="number">0x93</span>, <span class="number">0xda</span>, <span class="number">0x10</span>, <span class="number">0x48</span>, <span class="number">0x4f</span>,</span><br><span class="line">    <span class="number">0xf8</span>, <span class="number">0x2c</span>, <span class="number">0x8e</span>, <span class="number">0x5a</span>, <span class="number">0xe0</span>, <span class="number">0x40</span>, <span class="number">0x55</span>, <span class="number">0x4c</span>, <span class="number">0x9f</span>, <span class="number">0xb8</span>, <span class="number">0x8f</span>, <span class="number">0x57</span>, <span class="number">0x80</span>, <span class="number">0x61</span>, <span class="number">0xe5</span>, <span class="number">0x3</span>, <span class="number">0x87</span>, <span class="number">0x10</span>, <span class="number">0x82</span>,</span><br><span class="line">    <span class="number">0xc2</span>, <span class="number">0xc2</span>, <span class="number">0x45</span>, <span class="number">0xc6</span>, <span class="number">0xe9</span>, <span class="number">0x60</span>, <span class="number">0x0</span>, <span class="number">0xdb</span>, <span class="number">0x18</span>, <span class="number">0xa8</span>, <span class="number">0xb8</span>, <span class="number">0xf6</span>, <span class="number">0xea</span>, <span class="number">0xee</span>, <span class="number">0xe0</span>, <span class="number">0x34</span>, <span class="number">0x30</span>, <span class="number">0x7e</span>, <span class="number">0x14</span>,</span><br><span class="line">    <span class="number">0x9e</span>, <span class="number">0x92</span>, <span class="number">0x9c</span>, <span class="number">0xb3</span>, <span class="number">0x8a</span>, <span class="number">0xf0</span>, <span class="number">0x64</span>, <span class="number">0x91</span>, <span class="number">0x90</span>, <span class="number">0x52</span>, <span class="number">0x28</span>, <span class="number">0xb8</span>, <span class="number">0x4f</span>, <span class="number">0x0</span>, <span class="number">0x4c</span>, <span class="number">0x74</span>, <span class="number">0x0</span>, <span class="number">0xa0</span>, <span class="number">0xaa</span>,</span><br><span class="line">    <span class="number">0xbe</span>, <span class="number">0x30</span>, <span class="number">0x78</span>, <span class="number">0x5d</span>, <span class="number">0x4c</span>, <span class="number">0x30</span>, <span class="number">0xec</span>, <span class="number">0xd2</span>, <span class="number">0x7a</span>, <span class="number">0x98</span>, <span class="number">0xcc</span>, <span class="number">0xfd</span>, <span class="number">0xf1</span>, <span class="number">0x38</span>, <span class="number">0xa6</span>, <span class="number">0xf2</span>, <span class="number">0x78</span>, <span class="number">0xfc</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0xd4</span>, <span class="number">0xc8</span>, <span class="number">0xfb</span>, <span class="number">0xd0</span>, <span class="number">0x6c</span>, <span class="number">0x9c</span>, <span class="number">0x78</span>, <span class="number">0x52</span>, <span class="number">0x4</span>, <span class="number">0xb</span>, <span class="number">0xf7</span>, <span class="number">0x88</span>, <span class="number">0x11</span>, <span class="number">0x62</span>, <span class="number">0xf6</span>, <span class="number">0x28</span>,</span><br><span class="line">    <span class="number">0xf2</span>, <span class="number">0x40</span>, <span class="number">0x90</span>, <span class="number">0x54</span>, <span class="number">0x8e</span>, <span class="number">0xaf</span>, <span class="number">0x2e</span>, <span class="number">0xd4</span>, <span class="number">0xb9</span>, <span class="number">0x2a</span>, <span class="number">0x1f</span>, <span class="number">0xb0</span>, <span class="number">0xdb</span>, <span class="number">0xcd</span>, <span class="number">0x34</span>, <span class="number">0x90</span>, <span class="number">0xd8</span>, <span class="number">0x45</span>, <span class="number">0x80</span>,</span><br><span class="line">    <span class="number">0x5c</span>, <span class="number">0xf0</span>, <span class="number">0x19</span>, <span class="number">0xa9</span>, <span class="number">0xc2</span>, <span class="number">0xd0</span>, <span class="number">0x73</span>, <span class="number">0xb9</span>, <span class="number">0xe</span>, <span class="number">0x6</span>, <span class="number">0xf</span>, <span class="number">0x34</span>, <span class="number">0x4b</span>, <span class="number">0xd4</span>, <span class="number">0x28</span>, <span class="number">0xe0</span>, <span class="number">0xa</span>, <span class="number">0xdc</span>, <span class="number">0x63</span>, <span class="number">0x2a</span>,</span><br><span class="line">    <span class="number">0xb7</span>, <span class="number">0xc4</span>, <span class="number">0xf0</span>, <span class="number">0x40</span>, <span class="number">0x62</span>, <span class="number">0x17</span>, <span class="number">0x6d</span>, <span class="number">0x14</span>, <span class="number">0xcb</span>, <span class="number">0x6f</span>, <span class="number">0xe8</span>, <span class="number">0x4d</span>, <span class="number">0x40</span>, <span class="number">0xfb</span>, <span class="number">0x2</span>, <span class="number">0xc2</span>, <span class="number">0xf3</span>, <span class="number">0x70</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0xc7</span>, <span class="number">0x69</span>, <span class="number">0xa8</span>, <span class="number">0x9d</span>, <span class="number">0xd5</span>, <span class="number">0x33</span>, <span class="number">0xa8</span>, <span class="number">0x1c</span>, <span class="number">0xdf</span>, <span class="number">0x64</span>, <span class="number">0x98</span>, <span class="number">0xb8</span>, <span class="number">0x9d</span>, <span class="number">0xe0</span>, <span class="number">0x84</span>, <span class="number">0xe8</span>, <span class="number">0xe</span>, <span class="number">0x21</span>, <span class="number">0x73</span>,</span><br><span class="line">    <span class="number">0x87</span>, <span class="number">0x2</span>, <span class="number">0xa3</span>, <span class="number">0x6</span>, <span class="number">0x10</span>, <span class="number">0x8f</span>, <span class="number">0x54</span>, <span class="number">0x48</span>, <span class="number">0x65</span>, <span class="number">0x20</span>, <span class="number">0x38</span>, <span class="number">0x54</span>, <span class="number">0xb6</span>, <span class="number">0x2f</span>, <span class="number">0x70</span>, <span class="number">0xa0</span>, <span class="number">0xf4</span>, <span class="number">0x8b</span>, <span class="number">0x27</span>,</span><br><span class="line">    <span class="number">0x20</span>, <span class="number">0x28</span>, <span class="number">0x7</span>, <span class="number">0xe4</span>, <span class="number">0x69</span>, <span class="number">0x3e</span>, <span class="number">0xb0</span>, <span class="number">0x95</span>, <span class="number">0x70</span>, <span class="number">0x78</span>, <span class="number">0xda</span>, <span class="number">0x22</span>, <span class="number">0x50</span>, <span class="number">0x62</span>, <span class="number">0x7</span>, <span class="number">0x8a</span>, <span class="number">0x90</span>, <span class="number">0x1</span>, <span class="number">0x4f</span>, <span class="number">0x1e</span>,</span><br><span class="line">    <span class="number">0x78</span>, <span class="number">0xfd</span>, <span class="number">0x44</span>, <span class="number">0x1c</span>, <span class="number">0x20</span>, <span class="number">0x1b</span>, <span class="number">0x64</span>, <span class="number">0xde</span>, <span class="number">0xdb</span>, <span class="number">0x3</span>, <span class="number">0xd8</span>, <span class="number">0xcd</span>, <span class="number">0x34</span>, <span class="number">0xcf</span>, <span class="number">0x42</span>, <span class="number">0xf0</span>, <span class="number">0xff</span>, <span class="number">0xbc</span>, <span class="number">0xa2</span>,</span><br><span class="line">    <span class="number">0x2c</span>, <span class="number">0x98</span>, <span class="number">0x7d</span>, <span class="number">0xb5</span>, <span class="number">0x70</span>, <span class="number">0x6e</span>, <span class="number">0xb8</span>, <span class="number">0xa4</span>, <span class="number">0x24</span>, <span class="number">0xea</span>, <span class="number">0x50</span>, <span class="number">0x80</span>, <span class="number">0x10</span>, <span class="number">0x8</span>, <span class="number">0x5f</span>, <span class="number">0x90</span>, <span class="number">0x35</span>, <span class="number">0xb2</span>, <span class="number">0xc4</span>,</span><br><span class="line">    <span class="number">0x54</span>, <span class="number">0x38</span>, <span class="number">0xac</span>, <span class="number">0xa6</span>, <span class="number">0x68</span>, <span class="number">0xec</span>, <span class="number">0x40</span>, <span class="number">0xe4</span>, <span class="number">0x2d</span>, <span class="number">0x92</span>, <span class="number">0xb6</span>, <span class="number">0x8</span>, <span class="number">0xa9</span>, <span class="number">0xe0</span>, <span class="number">0x6</span>, <span class="number">0xe4</span>, <span class="number">0xb0</span>, <span class="number">0x48</span>, <span class="number">0x7f</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0xad</span>, <span class="number">0xf6</span>, <span class="number">0xbc</span>, <span class="number">0x14</span>, <span class="number">0xba</span>, <span class="number">0x59</span>, <span class="number">0x2d</span>, <span class="number">0x0</span>, <span class="number">0xe8</span>, <span class="number">0x3f</span>, <span class="number">0xd8</span>, <span class="number">0x2f</span>, <span class="number">0x20</span>, <span class="number">0xc0</span>, <span class="number">0x64</span>, <span class="number">0x29</span>, <span class="number">0xd6</span>, <span class="number">0x65</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0x88</span>, <span class="number">0x6</span>, <span class="number">0x3c</span>, <span class="number">0x21</span>, <span class="number">0xa4</span>, <span class="number">0x43</span>, <span class="number">0xd0</span>, <span class="number">0xf0</span>, <span class="number">0xe6</span>, <span class="number">0xdc</span>, <span class="number">0x0</span>, <span class="number">0xbc</span>, <span class="number">0x87</span>, <span class="number">0x78</span>, <span class="number">0xd7</span>, <span class="number">0x53</span>, <span class="number">0xd4</span>, <span class="number">0xe</span>, <span class="number">0xf0</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0xf8</span>, <span class="number">0x40</span>, <span class="number">0xfc</span>, <span class="number">0x31</span>, <span class="number">0x1</span>, <span class="number">0x62</span>, <span class="number">0xc6</span>, <span class="number">0x74</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x0</span>, <span class="number">0x48</span>, <span class="number">0x2e</span>, <span class="number">0xd2</span>, <span class="number">0xd</span>, <span class="number">0x1c</span>, <span class="number">0x25</span>, <span class="number">0xdc</span>, <span class="number">0x13</span>,</span><br><span class="line">    <span class="number">0x43</span>, <span class="number">0x0</span>, <span class="number">0x9f</span>, <span class="number">0x99</span>, <span class="number">0x3d</span>, <span class="number">0xab</span>, <span class="number">0x37</span>, <span class="number">0x7c</span>, <span class="number">0xdb</span>, <span class="number">0x7f</span>, <span class="number">0x2a</span>, <span class="number">0xed</span>, <span class="number">0xdc</span>, <span class="number">0xfa</span>, <span class="number">0x4d</span>, <span class="number">0x90</span>, <span class="number">0xee</span>, <span class="number">0xd8</span>, <span class="number">0x19</span>,</span><br><span class="line">    <span class="number">0xde</span>, <span class="number">0xb7</span>, <span class="number">0x4c</span>, <span class="number">0x89</span>, <span class="number">0x43</span>, <span class="number">0x28</span>, <span class="number">0xb0</span>, <span class="number">0x9f</span>, <span class="number">0x78</span>, <span class="number">0x4e</span>, <span class="number">0x48</span>, <span class="number">0x3a</span>, <span class="number">0x98</span>, <span class="number">0x20</span>, <span class="number">0x80</span>, <span class="number">0xd0</span>, <span class="number">0xa2</span>, <span class="number">0xf8</span>, <span class="number">0x40</span>,</span><br><span class="line">    <span class="number">0x5b</span>, <span class="number">0x98</span>, <span class="number">0xc0</span>, <span class="number">0x88</span>, <span class="number">0x45</span>, <span class="number">0xbc</span>, <span class="number">0x60</span>, <span class="number">0x11</span>, <span class="number">0xf8</span>, <span class="number">0x48</span>, <span class="number">0xbf</span>, <span class="number">0xe4</span>, <span class="number">0xb2</span>, <span class="number">0x55</span>, <span class="number">0xcf</span>, <span class="number">0x9d</span>, <span class="number">0xb</span>, <span class="number">0xf4</span>, <span class="number">0x12</span>,</span><br><span class="line">    <span class="number">0xca</span>, <span class="number">0x0</span>, <span class="number">0xdc</span>, <span class="number">0xe0</span>, <span class="number">0xfc</span>, <span class="number">0x74</span>, <span class="number">0xdd</span>, <span class="number">0x8e</span>, <span class="number">0xb2</span>, <span class="number">0x9e</span>, <span class="number">0x40</span>, <span class="number">0xfc</span>, <span class="number">0x80</span>, <span class="number">0x7e</span>, <span class="number">0x67</span>, <span class="number">0x50</span>, <span class="number">0x2e</span>, <span class="number">0x4e</span>, <span class="number">0xce</span>,</span><br><span class="line">    <span class="number">0x1d</span>, <span class="number">0x21</span>, <span class="number">0x8a</span>, <span class="number">0x98</span>, <span class="number">0x9b</span>, <span class="number">0x24</span>, <span class="number">0x20</span>, <span class="number">0xe0</span>, <span class="number">0xa2</span>, <span class="number">0x64</span>, <span class="number">0x24</span>, <span class="number">0xa3</span>, <span class="number">0xa2</span>,</span><br><span class="line">]</span><br><span class="line">data.reverse()</span><br><span class="line">array = [</span><br><span class="line">    <span class="number">0x63</span>, <span class="number">0x7C</span>, <span class="number">0x77</span>, <span class="number">0x7B</span>, <span class="number">0xF2</span>, <span class="number">0x6B</span>, <span class="number">0x6F</span>, <span class="number">0xC5</span>, <span class="number">0x30</span>, <span class="number">0x01</span>,</span><br><span class="line">    <span class="number">0x67</span>, <span class="number">0x2B</span>, <span class="number">0xFE</span>, <span class="number">0xD7</span>, <span class="number">0xAB</span>, <span class="number">0x76</span>, <span class="number">0xCA</span>, <span class="number">0x82</span>, <span class="number">0xC9</span>, <span class="number">0x7D</span>,</span><br><span class="line">    <span class="number">0xFA</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0xF0</span>, <span class="number">0xAD</span>, <span class="number">0xD4</span>, <span class="number">0xA2</span>, <span class="number">0xAF</span>, <span class="number">0x9C</span>, <span class="number">0xA4</span>,</span><br><span class="line">    <span class="number">0x72</span>, <span class="number">0xC0</span>, <span class="number">0xB7</span>, <span class="number">0xFD</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3F</span>, <span class="number">0xF7</span>, <span class="number">0xCC</span>,</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0xA5</span>, <span class="number">0xE5</span>, <span class="number">0xF1</span>, <span class="number">0x71</span>, <span class="number">0xD8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>, <span class="number">0x04</span>, <span class="number">0xC7</span>,</span><br><span class="line">    <span class="number">0x23</span>, <span class="number">0xC3</span>, <span class="number">0x18</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x9A</span>, <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xE2</span>,</span><br><span class="line">    <span class="number">0xEB</span>, <span class="number">0x27</span>, <span class="number">0xB2</span>, <span class="number">0x75</span>, <span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0x2C</span>, <span class="number">0x1A</span>, <span class="number">0x1B</span>, <span class="number">0x6E</span>,</span><br><span class="line">    <span class="number">0x5A</span>, <span class="number">0xA0</span>, <span class="number">0x52</span>, <span class="number">0x3B</span>, <span class="number">0xD6</span>, <span class="number">0xB3</span>, <span class="number">0x29</span>, <span class="number">0xE3</span>, <span class="number">0x2F</span>, <span class="number">0x84</span>,</span><br><span class="line">    <span class="number">0x53</span>, <span class="number">0xD1</span>, <span class="number">0x00</span>, <span class="number">0xED</span>, <span class="number">0x20</span>, <span class="number">0xFC</span>, <span class="number">0xB1</span>, <span class="number">0x5B</span>, <span class="number">0x6A</span>, <span class="number">0xCB</span>,</span><br><span class="line">    <span class="number">0xBE</span>, <span class="number">0x39</span>, <span class="number">0x4A</span>, <span class="number">0x4C</span>, <span class="number">0x58</span>, <span class="number">0xCF</span>, <span class="number">0xD0</span>, <span class="number">0xEF</span>, <span class="number">0xAA</span>, <span class="number">0xFB</span>,</span><br><span class="line">    <span class="number">0x43</span>, <span class="number">0x4D</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xF9</span>, <span class="number">0x02</span>, <span class="number">0x7F</span>, <span class="number">0x50</span>, <span class="number">0x3C</span>,</span><br><span class="line">    <span class="number">0x9F</span>, <span class="number">0xA8</span>, <span class="number">0x51</span>, <span class="number">0xA3</span>, <span class="number">0x40</span>, <span class="number">0x8F</span>, <span class="number">0x92</span>, <span class="number">0x9D</span>, <span class="number">0x38</span>, <span class="number">0xF5</span>,</span><br><span class="line">    <span class="number">0xBC</span>, <span class="number">0xB6</span>, <span class="number">0xDA</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xFF</span>, <span class="number">0xF3</span>, <span class="number">0xD2</span>, <span class="number">0xCD</span>, <span class="number">0x0C</span>,</span><br><span class="line">    <span class="number">0x13</span>, <span class="number">0xEC</span>, <span class="number">0x5F</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xC4</span>, <span class="number">0xA7</span>, <span class="number">0x7E</span>, <span class="number">0x3D</span>,</span><br><span class="line">    <span class="number">0x64</span>, <span class="number">0x5D</span>, <span class="number">0x19</span>, <span class="number">0x73</span>, <span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4F</span>, <span class="number">0xDC</span>, <span class="number">0x22</span>, <span class="number">0x2A</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x46</span>, <span class="number">0xEE</span>, <span class="number">0xB8</span>, <span class="number">0x14</span>, <span class="number">0xDE</span>, <span class="number">0x5E</span>, <span class="number">0x0B</span>, <span class="number">0xDB</span>,</span><br><span class="line">    <span class="number">0xE0</span>, <span class="number">0x32</span>, <span class="number">0x3A</span>, <span class="number">0x0A</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x24</span>, <span class="number">0x5C</span>, <span class="number">0xC2</span>, <span class="number">0xD3</span>,</span><br><span class="line">    <span class="number">0xAC</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xE4</span>, <span class="number">0x79</span>, <span class="number">0xE7</span>, <span class="number">0xC8</span>, <span class="number">0x37</span>, <span class="number">0x6D</span>,</span><br><span class="line">    <span class="number">0x8D</span>, <span class="number">0xD5</span>, <span class="number">0x4E</span>, <span class="number">0xA9</span>, <span class="number">0x6C</span>, <span class="number">0x56</span>, <span class="number">0xF4</span>, <span class="number">0xEA</span>, <span class="number">0x65</span>, <span class="number">0x7A</span>,</span><br><span class="line">    <span class="number">0xAE</span>, <span class="number">0x08</span>, <span class="number">0xBA</span>, <span class="number">0x78</span>, <span class="number">0x25</span>, <span class="number">0x2E</span>, <span class="number">0x1C</span>, <span class="number">0xA6</span>, <span class="number">0xB4</span>, <span class="number">0xC6</span>,</span><br><span class="line">    <span class="number">0xE8</span>, <span class="number">0xDD</span>, <span class="number">0x74</span>, <span class="number">0x1F</span>, <span class="number">0x4B</span>, <span class="number">0xBD</span>, <span class="number">0x8B</span>, <span class="number">0x8A</span>, <span class="number">0x70</span>, <span class="number">0x3E</span>,</span><br><span class="line">    <span class="number">0xB5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">0x03</span>, <span class="number">0xF6</span>, <span class="number">0x0E</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xB9</span>,</span><br><span class="line">    <span class="number">0x86</span>, <span class="number">0xC1</span>, <span class="number">0x1D</span>, <span class="number">0x9E</span>, <span class="number">0xE1</span>, <span class="number">0xF8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xD9</span>,</span><br><span class="line">    <span class="number">0x8E</span>, <span class="number">0x94</span>, <span class="number">0x9B</span>, <span class="number">0x1E</span>, <span class="number">0x87</span>, <span class="number">0xE9</span>, <span class="number">0xCE</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xDF</span>,</span><br><span class="line">    <span class="number">0x8C</span>, <span class="number">0xA1</span>, <span class="number">0x89</span>, <span class="number">0x0D</span>, <span class="number">0xBF</span>, <span class="number">0xE6</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>,</span><br><span class="line">    <span class="number">0x2D</span>, <span class="number">0x0F</span>, <span class="number">0xB0</span>, <span class="number">0x54</span>, <span class="number">0xBB</span>, <span class="number">0x16</span></span><br><span class="line">]</span><br><span class="line">charset = [<span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x34</span>, <span class="number">0x35</span>, <span class="number">0x36</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x30</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x65</span>, <span class="number">0x66</span>]</span><br><span class="line">num_array_1 = [</span><br><span class="line">    <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x03</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x02</span>,</span><br><span class="line">    <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x02</span>,</span><br><span class="line">    <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x02</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">num_array_2 = [</span><br><span class="line">    <span class="number">0x61</span>, <span class="number">0x63</span>, <span class="number">0x32</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0x38</span>, <span class="number">0x63</span>, <span class="number">0x39</span>, <span class="number">0x63</span>, <span class="number">0x34</span>,</span><br><span class="line">    <span class="number">0x39</span>, <span class="number">0x34</span>, <span class="number">0x33</span>, <span class="number">0x36</span>, <span class="number">0x65</span>, <span class="number">0x63</span>, <span class="number">0x33</span>, <span class="number">0x31</span>, <span class="number">0x35</span>, <span class="number">0x34</span>,</span><br><span class="line">    <span class="number">0x36</span>, <span class="number">0x39</span>, <span class="number">0x31</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x31</span>, <span class="number">0x64</span>, <span class="number">0x65</span>, <span class="number">0x35</span>,</span><br><span class="line">    <span class="number">0x32</span>, <span class="number">0x63</span>, <span class="number">0x61</span>, <span class="number">0x39</span>, <span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x35</span>, <span class="number">0x31</span>, <span class="number">0x63</span>, <span class="number">0x33</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0x63</span>, <span class="number">0x31</span>, <span class="number">0x33</span>, <span class="number">0x37</span>, <span class="number">0x32</span>, <span class="number">0x32</span>, <span class="number">0x64</span>, <span class="number">0x31</span>, <span class="number">0x31</span>,</span><br><span class="line">    <span class="number">0x61</span>, <span class="number">0x33</span>, <span class="number">0x32</span>, <span class="number">0x35</span>, <span class="number">0x61</span>, <span class="number">0x31</span>, <span class="number">0x38</span>, <span class="number">0x31</span>, <span class="number">0x39</span>, <span class="number">0x38</span>,</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0x31</span>, <span class="number">0x31</span>, <span class="number">0x65</span>, <span class="number">0x39</span>, <span class="number">0x31</span>, <span class="number">0x63</span>, <span class="number">0x61</span>, <span class="number">0x39</span>, <span class="number">0x65</span>,</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0x63</span></span><br><span class="line">]</span><br><span class="line">result = [</span><br><span class="line">    <span class="number">0x376856ABEED8592A</span>, <span class="number">0x3CCF537F7ECA40AB</span>,</span><br><span class="line">    <span class="number">0x92CC25F6240A7A19</span>, <span class="number">0x2DA210592DCCFF78</span></span><br><span class="line">]</span><br><span class="line">r = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    r += struct.pack(<span class="string">&#x27;&lt;Q&#x27;</span>, i)</span><br><span class="line">result = <span class="built_in">list</span>(r)</span><br><span class="line"></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> z <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            new = result[<span class="number">8</span> * j + ((k + <span class="number">1</span>) % <span class="number">8</span>)]</span><br><span class="line">            input_char = result[<span class="number">8</span> * j + k]</span><br><span class="line">            gen_num = data[index]</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">            corp_num = add(gen_num, input_char)</span><br><span class="line">            a_num = array[corp_num]</span><br><span class="line">            shift_num = add(a_num, new)</span><br><span class="line">            shift_num = (shift_num &gt;&gt; <span class="number">7</span>) | ((shift_num &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">            result[<span class="number">8</span> * j + ((k + <span class="number">1</span>) % <span class="number">8</span>)] = shift_num</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    num2 = result[i] &amp; <span class="number">0xF</span></span><br><span class="line">    num1 = result[i] &gt;&gt; <span class="number">4</span></span><br><span class="line">    num1 = change(num1)</span><br><span class="line">    num2 = change(num2)</span><br><span class="line">    num2 = charset.index(num2)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        <span class="keyword">if</span> num2 == (num1 + <span class="number">3</span> * j) % <span class="number">16</span>:</span><br><span class="line">            flag += <span class="built_in">hex</span>(j)[<span class="number">2</span>:]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h1 id="Blast-1"><a href="#Blast-1" class="headerlink" title="Blast"></a>Blast</h1><h2 id="去混淆-1"><a href="#去混淆-1" class="headerlink" title="去混淆"></a>去混淆</h2><p>对于这样的混淆，python脚本去掉一下：</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904154409708.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">patch</span>(<span class="params">start, end</span>):</span><br><span class="line">i = start</span><br><span class="line"><span class="keyword">while</span> i &lt; end:</span><br><span class="line"><span class="keyword">if</span> GetMnem(i) == <span class="string">&#x27;jnz&#x27;</span> <span class="keyword">and</span> GetMnem(i + <span class="number">6</span>) == <span class="string">&#x27;jmp&#x27;</span> <span class="keyword">and</span> GetOpnd(i + <span class="number">0xb</span>, <span class="number">0</span>) == <span class="string">&#x27;$+5&#x27;</span> <span class="keyword">and</span> GetMnem(i + <span class="number">0xb</span>) == <span class="string">&#x27;jmp&#x27;</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(i))</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, i + <span class="number">0x10</span>):</span><br><span class="line">PatchByte(j, <span class="number">0x90</span>)</span><br><span class="line">i += <span class="number">0xf</span></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> seg <span class="keyword">in</span> Segments():</span><br><span class="line"><span class="keyword">if</span> SegName(seg) == <span class="string">&#x27;.text&#x27;</span>:</span><br><span class="line">patch(seg, <span class="number">0x40B7E4</span>)</span><br></pre></td></tr></table></figure><h2 id="主要逻辑"><a href="#主要逻辑" class="headerlink" title="主要逻辑"></a>主要逻辑</h2><p>Findcrypt发现md5特征，都在一个函数中：</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904154646217.png"></p><p>主逻辑通过动调猜测是md5，且是单个字符的md5：</p><p>init_key函数就是上面的md5特征的函数。</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904154836442.png"></p><p>这里估计是双重md5：</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904155044648.png"></p><p>最后和一堆md5值进行比较：</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/image-20230904155209395.png"></p><h2 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算字符串的 MD5 散列值</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_md5_string</span>(<span class="params">input_string</span>):</span><br><span class="line">    md5_hash = hashlib.md5()</span><br><span class="line">    md5_hash.update(input_string.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> md5_hash.hexdigest()</span><br><span class="line">md5 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>, <span class="number">128</span>):</span><br><span class="line">    md5_str = calculate_md5_string(calculate_md5_string(<span class="built_in">chr</span>(i)))</span><br><span class="line">    md5.append(md5_str)</span><br><span class="line">result = [</span><br><span class="line">    <span class="string">&#x27;14d89c38cd0fb23a14be2798d449c182&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;297e7ca127d2eef674c119331fe30dff&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;b5d2099e49bdb07b8176dff5e23b3c14&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;83be264eb452fcf0a1c322f2c7cbf987&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;71b0438bf46aa26928c7f5a371d619e1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ac49073a7165f41c57eb2c1806a7092e&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ed108f6919ebadc8e809f8b86ef40b05&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;65c162f7c43612ba1bdf4d0f2912bbc0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;557460d317ae874c924e9be336a83cbe&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;9203d8a26e241e63e4b35b3527440998&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;f91b2663febba8a884487f7de5e1d249&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;d7afde3e7059cd0a0fe09eec4b0008cd&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;488c428cd4a8d916deee7c1613c8b2fd&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;45cf8ddfae1d78741d8f1c622689e4af&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3cfd436919bc3107d68b912ee647f341&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;37327bb06c83cb29cefde1963ea588aa&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a705e8280082f93f07e3486636f3827a&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;23e65a679105b85c5dc7034fded4fb5f&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;10e21da237a4a1491e769df6f4c3b419&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;71b0438bf46aa26928c7f5a371d619e1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;af85d512594fc84a5c65ec9970956ea5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(md5)):</span><br><span class="line">        <span class="keyword">if</span> result[i] == md5[j]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j + <span class="number">30</span>), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="CSGO"><a href="#CSGO" class="headerlink" title="CSGO"></a>CSGO</h1><p>动调发现是换表base64.</p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/3.png"></p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/2.png"></p><p><img src="/2023/09/05/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/123.png"></p><h1 id="vm-wo"><a href="#vm-wo" class="headerlink" title="vm_wo"></a>vm_wo</h1><p>根据指令码解释一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 26 0 input    body[0] = input</span><br><span class="line"># 25 1 1        body[1] = body[0] &gt;&gt; 1</span><br><span class="line"># 13 2 7        body[2] = body[0] &lt;&lt; 7</span><br><span class="line"># 24 1 2        body[0] = body[1] | body[2]</span><br><span class="line"># 1 0 3         body[0] = body[0] ^ body[3]</span><br><span class="line"># 26 0 body[0]  body[0] = body[0]</span><br><span class="line"># 25 1 2        body[1] = body[0] &gt;&gt; 2</span><br><span class="line"># 13 2 6        body[2] = body[0] &lt;&lt; 6</span><br><span class="line"># 24 1 2        body[0] = body[1] | body[2]</span><br><span class="line"># 1 0 4         body[0] = body[0] ^ body[4]</span><br><span class="line"># 26 0 body[0]  body[0] = body[0]</span><br><span class="line"># 25 1 3        body[1] = body[0] &gt;&gt; 3</span><br><span class="line"># 13 2 5        body[2] = body[0] &lt;&lt; 5</span><br><span class="line"># 24 1 2        body[0] = body[1] | body[2]</span><br><span class="line"># 1 0 5         body[0] = body[0] ^ body[5]</span><br><span class="line"># 26 0 body[0]  body[0] = body[0]</span><br><span class="line"># 25 1 4        body[1] = body[0] &gt;&gt; 4</span><br><span class="line"># 13 2 4        body[2] = body[0] &lt;&lt; 4</span><br><span class="line"># 24 1 2        body[0] = body[1] | body[2]</span><br><span class="line"># 1 0 6         body[0] = body[0] ^ body[6]</span><br></pre></td></tr></table></figure><h2 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">result = [<span class="number">0xDF</span>, <span class="number">0xD5</span>, <span class="number">0xF1</span>, <span class="number">0xD1</span>, <span class="number">0xFF</span>, <span class="number">0xDB</span>, <span class="number">0xA1</span>, <span class="number">0xA5</span>, <span class="number">0x89</span>, <span class="number">0xBD</span>, <span class="number">0xE9</span>, <span class="number">0x95</span>, <span class="number">0xB3</span>, <span class="number">0x9D</span>, <span class="number">0xE9</span>, <span class="number">0xB3</span>, <span class="number">0x85</span>, <span class="number">0x99</span>, <span class="number">0x87</span>, <span class="number">0xBF</span>, <span class="number">0xE9</span>, <span class="number">0xB1</span>, <span class="number">0x89</span>, <span class="number">0xE9</span>, <span class="number">0x91</span>, <span class="number">0x89</span>, <span class="number">0x89</span>, <span class="number">0x8F</span>, <span class="number">0xAD</span>]</span><br><span class="line">key = struct.pack(<span class="string">&#x27;&lt;I&#x27;</span>, <span class="number">0xBEEDBEEF</span>)</span><br><span class="line"><span class="built_in">print</span>(key)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    num = result[i]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">3</span>) | ((num &lt;&lt; <span class="number">5</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    num ^= key[<span class="number">3</span>]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">4</span>) | ((num &lt;&lt; <span class="number">4</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    num ^= key[<span class="number">2</span>]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">5</span>) | ((num &lt;&lt; <span class="number">3</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    num ^= key[<span class="number">1</span>]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">6</span>) | ((num &lt;&lt; <span class="number">2</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    num ^= key[<span class="number">0</span>]</span><br><span class="line">    num = (num &gt;&gt; <span class="number">7</span>) | ((num &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    result[i] = num</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytearray</span>(result))</span><br></pre></td></tr></table></figure><h1 id="Ez加密器"><a href="#Ez加密器" class="headerlink" title="Ez加密器"></a>Ez加密器</h1><h2 id><a href="#" class="headerlink" title></a></h2><p>a &#x3D; a + b</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">args: a, b</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    t = a &amp; b;</span><br><span class="line">    a ^= b;</span><br><span class="line">    b = <span class="number">2</span> * t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ( <span class="number">2</span> * t );</span><br></pre></td></tr></table></figure><p>对应汇编：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">loc_7FF73D0A1AF8:</span><br><span class="line">mov     ebp, ecx</span><br><span class="line">and     ebp, eax</span><br><span class="line">xor     eax, ecx</span><br><span class="line">mov     ecx, ebp</span><br><span class="line">add     ecx, ecx  // add：如果加法结果为0，更改zf寄存器为1</span><br><span class="line">jnz     short loc_7FF73D0A1AF8</span><br></pre></td></tr></table></figure><p>可简化为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addeax, ecx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PYC文件解析</title>
      <link href="/2023/08/27/PYC%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/08/27/PYC%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="PyCodeObject"><a href="#PyCodeObject" class="headerlink" title="PyCodeObject"></a>PyCodeObject</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    PyObject_HEAD<span class="comment">/* 头部信息, 我们看到真的一切皆对象, 字节码也是个对象 */</span></span><br><span class="line">    <span class="type">int</span> co_argcount;            <span class="comment">/* 可以通过位置参数传递的参数个数 */</span></span><br><span class="line">    <span class="type">int</span> co_posonlyargcount;     <span class="comment">/* 只能通过位置参数传递的参数个数,  Python3.8新增 */</span></span><br><span class="line">    <span class="type">int</span> co_kwonlyargcount;      <span class="comment">/* 只能通过关键字参数传递的参数个数 */</span></span><br><span class="line">    <span class="type">int</span> co_nlocals;             <span class="comment">/* 代码块中局部变量的个数，也包括参数 */</span></span><br><span class="line">    <span class="type">int</span> co_stacksize;           <span class="comment">/* 执行该段代码块需要的栈空间 */</span></span><br><span class="line">    <span class="type">int</span> co_flags;               <span class="comment">/* 参数类型标识 */</span></span><br><span class="line">    <span class="type">int</span> co_firstlineno;         <span class="comment">/* 代码块在对应文件的行号 */</span></span><br><span class="line">    PyObject *co_code;          <span class="comment">/* 指令集, 也就是字节码, 它是一个bytes对象 */</span></span><br><span class="line">    PyObject *co_consts;        <span class="comment">/* 常量池, 一个元组，保存代码块中的所有常量。 */</span></span><br><span class="line">    PyObject *co_names;         <span class="comment">/* 一个元组,保存代码块中引用的其它作用域的变量 */</span></span><br><span class="line">    PyObject *co_varnames;      <span class="comment">/* 一个元组,保存当前作用域中的变量 */</span></span><br><span class="line">    PyObject *co_freevars;      <span class="comment">/* 内层函数引用的外层函数的作用域中的变量 */</span></span><br><span class="line">    PyObject *co_cellvars;      <span class="comment">/* 外层函数中作用域中被内层函数引用的变量，本质上和co_freevars是一样的 */</span></span><br><span class="line">    Py_ssize_t *co_cell2arg;    <span class="comment">/* 无需关注 */</span></span><br><span class="line">    PyObject *co_filename;      <span class="comment">/* 代码块所在的文件名 */</span></span><br><span class="line">    PyObject *co_name;          <span class="comment">/* 代码块的名字，通常是函数名或者类名 */</span></span><br><span class="line">    PyObject *co_lnotab;        <span class="comment">/* 字节码指令与python源代码的行号之间的对应关系，以PyByteObject的形式存在 */</span></span><br><span class="line">    <span class="type">void</span> *co_zombieframe;       <span class="comment">/* for optimization only (see frameobject.c) */</span></span><br><span class="line">    PyObject *co_weakreflist;   <span class="comment">/* to support weakrefs to code objects */</span></span><br><span class="line">    <span class="type">void</span> *co_extra;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> *co_opcache_map;</span><br><span class="line">    _PyOpcache *co_opcache;</span><br><span class="line">    <span class="type">int</span> co_opcache_flag; </span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> co_opcache_size; </span><br><span class="line">&#125; PyCodeObject;</span><br></pre></td></tr></table></figure><p>在Python中通过<code>PyObject.__code__.xxx</code>获取。</p><h2 id="部分解释"><a href="#部分解释" class="headerlink" title="部分解释"></a>部分解释</h2><h3 id="posonlyargcount、kwonlyargcount"><a href="#posonlyargcount、kwonlyargcount" class="headerlink" title="posonlyargcount、kwonlyargcount"></a>posonlyargcount、kwonlyargcount</h3><p><img src="/2023/08/27/PYC%E8%A7%A3%E6%9E%90/image-20230829165642115.png"></p><h3 id="nlocals"><a href="#nlocals" class="headerlink" title="nlocals"></a>nlocals</h3><p><img src="/2023/08/27/PYC%E8%A7%A3%E6%9E%90/image-20230829165719587.png"></p><h3 id="names"><a href="#names" class="headerlink" title="names"></a>names</h3><p><img src="/2023/08/27/PYC%E8%A7%A3%E6%9E%90/image-20230829165809236.png"></p><h3 id="freevars、cellvars"><a href="#freevars、cellvars" class="headerlink" title="freevars、cellvars"></a>freevars、cellvars</h3><p><img src="/2023/08/27/PYC%E8%A7%A3%E6%9E%90/image-20230829165905182.png"></p><h3 id="lnotab"><a href="#lnotab" class="headerlink" title="lnotab"></a>lnotab</h3><p><a href="https://svn.python.org/projects/python/branches/pep-0384/Objects/lnotab_notes.txt">svn.python.org&#x2F;projects&#x2F;python&#x2F;branches&#x2F;pep-0384&#x2F;Objects&#x2F;lnotab_notes.txt</a></p><blockquote><p>co_lnotab: 字节码指令与python源代码的行号之间的对应关系，以PyByteObject的形式存在</p><p>然而事实上，Python不会直接记录这些信息，而是会记录增量值。</p><p>比如说： </p><p>字节码在co_code中的偏移量            .py文件中源代码的行号 </p><p>0                                                         1   </p><p>6                                                         2 </p><p>50                                                       7 </p><p>那么co_lnotab就应该是: 0 1 6 1 44 5。</p><p>0和1很好理解, 就是co_code和.py文件的起始位置，而6和1表示字节码的偏移量是6，.py文件的行号增加了1，而44和5表示字节码的偏移量是44，.py文件的行号增加了5</p></blockquote><p><img src="/2023/08/27/PYC%E8%A7%A3%E6%9E%90/image-20230829201134957.png"></p><h1 id="Code字节码"><a href="#Code字节码" class="headerlink" title="Code字节码"></a>Code字节码</h1><p>具体可在pycdc&#x2F;bytes&#x2F;python_310.map中（mingw64\opt\include\python2.7\opcode.h也有）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">0x1 POP_TOP</span><br><span class="line">0x2 ROT_TWO</span><br><span class="line">0x3 ROT_THREE</span><br><span class="line">0x4 DUP_TOP</span><br><span class="line">0x5 DUP_TOP_TWO</span><br><span class="line">0x6 ROT_FOUR</span><br><span class="line">0x9 NOP</span><br><span class="line">0xa UNARY_POSITIVE</span><br><span class="line">0xb UNARY_NEGATIVE</span><br><span class="line">0xc UNARY_NOT</span><br><span class="line">0xf UNARY_INVERT</span><br><span class="line">0x10 BINARY_MATRIX_MULTIPLY</span><br><span class="line">0x11 INPLACE_MATRIX_MULTIPLY</span><br><span class="line">0x13 BINARY_POWER</span><br><span class="line">0x14 BINARY_MULTIPLY</span><br><span class="line">0x16 BINARY_MODULO</span><br><span class="line">0x17 BINARY_ADD</span><br><span class="line">0x18 BINARY_SUBTRACT</span><br><span class="line">0x19 BINARY_SUBSCR</span><br><span class="line">0x1a BINARY_FLOOR_DIVIDE</span><br><span class="line">0x1b BINARY_TRUE_DIVIDE</span><br><span class="line">0x1c INPLACE_FLOOR_DIVIDE</span><br><span class="line">0x1d INPLACE_TRUE_DIVIDE</span><br><span class="line">0x1e GET_LEN</span><br><span class="line">0x1f MATCH_MAPPING</span><br><span class="line">0x20 MATCH_SEQUENCE</span><br><span class="line">0x21 MATCH_KEYS</span><br><span class="line">0x22 COPY_DICT_WITHOUT_KEYS</span><br><span class="line">0x31 WITH_EXCEPT_START</span><br><span class="line">0x32 GET_AITER</span><br><span class="line">0x33 GET_ANEXT</span><br><span class="line">0x34 BEFORE_ASYNC_WITH</span><br><span class="line">0x36 END_ASYNC_FOR</span><br><span class="line">0x37 INPLACE_ADD</span><br><span class="line">0x38 INPLACE_SUBTRACT</span><br><span class="line">0x39 INPLACE_MULTIPLY</span><br><span class="line">0x3b INPLACE_MODULO</span><br><span class="line">0x3c STORE_SUBSCR</span><br><span class="line">0x3d DELETE_SUBSCR</span><br><span class="line">0x3e BINARY_LSHIFT</span><br><span class="line">0x3f BINARY_RSHIFT</span><br><span class="line">0x40 BINARY_AND</span><br><span class="line">0x41 BINARY_XOR</span><br><span class="line">0x42 BINARY_OR</span><br><span class="line">0x43 INPLACE_POWER</span><br><span class="line">0x44 GET_ITER</span><br><span class="line">0x45 GET_YIELD_FROM_ITER</span><br><span class="line">0x46 PRINT_EXPR</span><br><span class="line">0x47 LOAD_BUILD_CLASS</span><br><span class="line">0x48 YIELD_FROM</span><br><span class="line">0x49 GET_AWAITABLE</span><br><span class="line">0x4a LOAD_ASSERTION_ERROR</span><br><span class="line">0x4b INPLACE_LSHIFT</span><br><span class="line">0x4c INPLACE_RSHIFT</span><br><span class="line">0x4d INPLACE_AND</span><br><span class="line">0x4e INPLACE_XOR</span><br><span class="line">0x4f INPLACE_OR</span><br><span class="line">0x52 LIST_TO_TUPLE</span><br><span class="line">0x53 RETURN_VALUE</span><br><span class="line">0x54 IMPORT_STAR</span><br><span class="line">0x55 SETUP_ANNOTATIONS</span><br><span class="line">0x56 YIELD_VALUE</span><br><span class="line">0x57 POP_BLOCK</span><br><span class="line">0x59 POP_EXCEPT</span><br><span class="line">0x5a STORE_NAME</span><br><span class="line">0x5b DELETE_NAME</span><br><span class="line">0x5c UNPACK_SEQUENCE</span><br><span class="line">0x5d FOR_ITER</span><br><span class="line">0x5e UNPACK_EX</span><br><span class="line">0x5f STORE_ATTR</span><br><span class="line">0x60 DELETE_ATTR</span><br><span class="line">0x61 STORE_GLOBAL</span><br><span class="line">0x62 DELETE_GLOBAL</span><br><span class="line">0x63 ROT_N</span><br><span class="line">0x64 LOAD_CONST</span><br><span class="line">0x65 LOAD_NAME</span><br><span class="line">0x66 BUILD_TUPLE</span><br><span class="line">0x67 BUILD_LIST</span><br><span class="line">0x68 BUILD_SET</span><br><span class="line">0x69 BUILD_MAP</span><br><span class="line">0x6a LOAD_ATTR</span><br><span class="line">0x6b COMPARE_OP</span><br><span class="line">0x6c IMPORT_NAME</span><br><span class="line">0x6d IMPORT_FROM</span><br><span class="line">0x6e JUMP_FORWARD</span><br><span class="line">0x6f JUMP_IF_FALSE_OR_POP</span><br><span class="line">0x70 JUMP_IF_TRUE_OR_POP</span><br><span class="line">0x71 JUMP_ABSOLUTE</span><br><span class="line">0x72 POP_JUMP_IF_FALSE</span><br><span class="line">0x73 POP_JUMP_IF_TRUE</span><br><span class="line">0x74 LOAD_GLOBAL</span><br><span class="line">0x75 IS_OP</span><br><span class="line">0x76 CONTAINS_OP</span><br><span class="line">0x77 RERAISE</span><br><span class="line">0x79 JUMP_IF_NOT_EXC_MATCH</span><br><span class="line">0x7a SETUP_FINALLY</span><br><span class="line">0x7c LOAD_FAST</span><br><span class="line">0x7d STORE_FAST</span><br><span class="line">0x7e DELETE_FAST</span><br><span class="line">0x81 GEN_START</span><br><span class="line">0x82 RAISE_VARARGS</span><br><span class="line">0x83 CALL_FUNCTION</span><br><span class="line">0x84 MAKE_FUNCTION</span><br><span class="line">0x85 BUILD_SLICE</span><br><span class="line">0x87 LOAD_CLOSURE</span><br><span class="line">0x88 LOAD_DEREF</span><br><span class="line">0x89 STORE_DEREF</span><br><span class="line">0x8a DELETE_DEREF</span><br><span class="line">0x8d CALL_FUNCTION_KW</span><br><span class="line">0x8e CALL_FUNCTION_EX</span><br><span class="line">0x8f SETUP_WITH</span><br><span class="line">0x90 EXTENDED_ARG</span><br><span class="line">0x91 LIST_APPEND</span><br><span class="line">0x92 SET_ADD</span><br><span class="line">0x93 MAP_ADD</span><br><span class="line">0x94 LOAD_CLASSDEREF</span><br><span class="line">0x98 MATCH_CLASS</span><br><span class="line">0x9a SETUP_ASYNC_WITH</span><br><span class="line">0x9b FORMAT_VALUE</span><br><span class="line">0x9c BUILD_CONST_KEY_MAP</span><br><span class="line">0x9d BUILD_STRING</span><br><span class="line">0xa0 LOAD_METHOD</span><br><span class="line">0xa1 CALL_METHOD</span><br><span class="line">0xa2 LIST_EXTEND</span><br><span class="line">0xa3 SET_UPDATE</span><br><span class="line">0xa4 DICT_MERGE</span><br><span class="line">0xa5 DICT_UPDATE</span><br></pre></td></tr></table></figure><p>或者执行脚本获得：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> opcode</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> opcode.opmap:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">hex</span>(opcode.opmap[i]), i)</span><br></pre></td></tr></table></figure><h1 id="对象类型"><a href="#对象类型" class="headerlink" title="对象类型"></a>对象类型</h1><p>具体可在pycdc&#x2F;PythonBytecode.txt中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">                       3.0     3.4</span><br><span class="line">TYPE_NULL               &#x27;0&#x27;     &#x27;0&#x27;</span><br><span class="line">TYPE_NONE               &#x27;N&#x27;     &#x27;N&#x27;</span><br><span class="line">TYPE_FALSE              &#x27;F&#x27;     &#x27;F&#x27;</span><br><span class="line">TYPE_TRUE               &#x27;T&#x27;     &#x27;T&#x27;</span><br><span class="line">TYPE_STOPITER           &#x27;S&#x27;     &#x27;S&#x27;</span><br><span class="line">TYPE_ELLIPSIS           &#x27;.&#x27;     &#x27;.&#x27;</span><br><span class="line">TYPE_INT                &#x27;i&#x27;     &#x27;i&#x27;</span><br><span class="line">TYPE_INT64              &#x27;I&#x27;</span><br><span class="line">TYPE_FLOAT              &#x27;f&#x27;     &#x27;f&#x27;</span><br><span class="line">TYPE_BINARY_FLOAT       &#x27;g&#x27;     &#x27;g&#x27;</span><br><span class="line">TYPE_COMPLEX            &#x27;x&#x27;     &#x27;x&#x27;</span><br><span class="line">TYPE_BINARY_COMPLEX     &#x27;y&#x27;     &#x27;y&#x27;</span><br><span class="line">TYPE_LONG               &#x27;l&#x27;     &#x27;l&#x27;</span><br><span class="line">TYPE_STRING             &#x27;s&#x27;     &#x27;s&#x27;</span><br><span class="line">TYPE_INTERNED                   &#x27;t&#x27;</span><br><span class="line">TYPE_REF                        &#x27;r&#x27;</span><br><span class="line">TYPE_TUPLE              &#x27;(&#x27;     &#x27;(&#x27;</span><br><span class="line">TYPE_LIST               &#x27;[&#x27;     &#x27;[&#x27;</span><br><span class="line">TYPE_DICT               &#x27;&#123;&#x27;     &#x27;&#123;&#x27;</span><br><span class="line">TYPE_CODE               &#x27;c&#x27;     &#x27;c&#x27;</span><br><span class="line">TYPE_UNICODE            &#x27;u&#x27;     &#x27;u&#x27;</span><br><span class="line">TYPE_UNKNOWN            &#x27;?&#x27;     &#x27;?&#x27;</span><br><span class="line">TYPE_SET                &#x27;&lt;&#x27;     &#x27;&lt;&#x27;</span><br><span class="line">TYPE_FROZENSET          &#x27;&gt;&#x27;     &#x27;&gt;&#x27;</span><br><span class="line">TYPE_ASCII                      &#x27;a&#x27;</span><br><span class="line">TYPE_ASCII_INTERNED             &#x27;A&#x27;</span><br><span class="line">TYPE_SMALL_TUPLE                &#x27;)&#x27;</span><br><span class="line">TYPE_SHORT_ASCII                &#x27;z&#x27;</span><br><span class="line">TYPE_SHORT_ASCII_INTERNED       &#x27;Z&#x27;</span><br></pre></td></tr></table></figure><p>pyc文件中每个类型的对象都有着固定的形式：</p><ol><li>数值类型：type（1 byte）+ num<ol><li><code>E9 0A 00 00 00</code>：10</li><li><code>69 11 01 00 00</code>：111</li><li><code>67 a4 70 3d 0a d7 a3 0a 40</code>：3.33 （<a href="https://www.toolhelper.cn/Digit/FractionConvert">IEEE 754 浮点数转化</a>）</li><li>大于0x80000000的数，type为0x6C。<ol><li><code>6C 03 00 00 00 90 78 AC 68 48 00</code>：0x1234567890</li><li><code>6C 03 00 00 00 00 00 00 00 02 00</code>：0x80000000</li></ol></li></ol></li><li>字符串类型：type（1 byte）+ 长度（1 byte）+ string<ol><li><code>DA 05 70 72 69 6E 74</code>：“print”</li><li><code>FA 07 74 65 73 74 2E 70 79</code>：“test.py”</li><li><code>7a 10 74 68 69 73 20 69 73 20 73 74 72 20 74 79 70 65</code>：“this is str type”</li><li><code>5a 03 61 67 65 </code>：“age”</li></ol></li><li>元组（tuple）<strong>0x29</strong>：type（1 byte）+ 元素数量（1 byte）+ 元素<ol><li><code>29 + 03 + a + b + c</code>：（a，b，c）</li></ol></li><li>集合（set）：type（1 byte）+ 元素数量（1 byte）+ 元素<ol><li><code>3e 03 00 00 00 + a + b + c</code>：{a，b，c}</li></ol></li><li>字典（dict）：<ol><li><code>5a 05 41 6c 69 63 65 + e9 1e 00 00 00 + 29 02 + da 04 6e 61 6d 65 + 5a 03 61 67 65 </code>：{‘name’: ‘Alice’, ‘age’: 30}</li></ol></li><li>代码（code）<strong>0x73</strong>：type（1 byte）+ 长度（4 byte）+ code</li><li><code>72 + xx xx xx xx</code>：获取已声明的对象<ol><li>若<code>72 05 00 00 00</code>，则获取已声明的第五个对象（从先到后）</li></ol></li><li><code>TYPE_NONE = 0x4E; TYPE_FALSE = 0x46; TYPE_TRUE = 0x54</code></li><li><code>73 04 00 00 00 0C 01 0C 02</code>：lnotab: type + length +lnotab</li></ol><h1 id="具体pyc文件"><a href="#具体pyc文件" class="headerlink" title="具体pyc文件"></a>具体pyc文件</h1><p>分析一下python代码的pyc文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b, /, c</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">funtest</span>():</span><br><span class="line">        <span class="built_in">print</span>(a)</span><br><span class="line">    <span class="keyword">return</span> a + b + c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(add(<span class="number">10</span>, <span class="number">12</span>, c=<span class="number">3</span>))</span><br></pre></td></tr></table></figure><p>pyc文件对象：</p><p><img src="/2023/08/27/PYC%E8%A7%A3%E6%9E%90/image-20230829164418774.png"></p><p>add函数对象：</p><p><img src="/2023/08/27/PYC%E8%A7%A3%E6%9E%90/image-20230829164729301.png"></p><p>funtest函数对象：</p><p><img src="/2023/08/27/PYC%E8%A7%A3%E6%9E%90/image-20230829164756260.png"></p><p>其中，按先后顺序声明的对象为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1. “printf”</span><br><span class="line">2. A9 00 (应该是类似null，其他对象为空的属性都是：72 02 00 00 00)</span><br><span class="line">3. (“a”, )</span><br><span class="line">4. “a”</span><br><span class="line">5. “test.py”</span><br><span class="line">6. “funtest”</span><br><span class="line">7. “b”</span><br><span class="line">8. “c”</span><br><span class="line">9. “add”</span><br><span class="line">10. “__main__”</span><br><span class="line">11. 10</span><br><span class="line">12. 12</span><br><span class="line">13. 3</span><br><span class="line">14. “__name__”</span><br></pre></td></tr></table></figure><p>解析的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> marshal</span><br><span class="line"><span class="keyword">import</span> dis</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> types</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_metadata</span>(<span class="params">fp</span>):</span><br><span class="line">    magic = struct.unpack(<span class="string">&#x27;&lt;l&#x27;</span>, fp.read(<span class="number">4</span>))[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;magic number = <span class="subst">&#123;<span class="built_in">hex</span>(magic)&#125;</span>&quot;</span>)</span><br><span class="line">    bit_field = struct.unpack(<span class="string">&#x27;&lt;l&#x27;</span>, fp.read(<span class="number">4</span>))[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;bit filed = <span class="subst">&#123;bit_field&#125;</span>&quot;</span>)</span><br><span class="line">    t = struct.unpack(<span class="string">&#x27;&lt;l&#x27;</span>, fp.read(<span class="number">4</span>))[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;time = <span class="subst">&#123;time.asctime(time.localtime(t))&#125;</span>&quot;</span>)</span><br><span class="line">    file_size = struct.unpack(<span class="string">&#x27;&lt;l&#x27;</span>, fp.read(<span class="number">4</span>))[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;file size = <span class="subst">&#123;file_size&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_code</span>(<span class="params">code, indent=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%scode&quot;</span> % indent)</span><br><span class="line">    indent += <span class="string">&#x27;   &#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%sargcount %d&quot;</span> % (indent, code.co_argcount))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%sposonlyargcount %d&quot;</span> % (indent, code.co_posonlyargcount))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%skwonlyargcount %d&quot;</span> % (indent, code.co_kwonlyargcount))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%snlocals %d&quot;</span> % (indent, code.co_nlocals))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%sstacksize %d&quot;</span> % (indent, code.co_stacksize))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%sflags %04x&quot;</span> % (indent, code.co_flags))</span><br><span class="line">    show_hex(<span class="string">&quot;code&quot;</span>, code.co_code, indent=indent)</span><br><span class="line">    dis.disassemble(code)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%sconsts&quot;</span> % indent)</span><br><span class="line">    <span class="keyword">for</span> const <span class="keyword">in</span> code.co_consts:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(const) == types.CodeType:</span><br><span class="line">            show_code(const, indent + <span class="string">&#x27;   &#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;   %s%r&quot;</span> % (indent, const))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%snames %r&quot;</span> % (indent, code.co_names))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%svarnames %r&quot;</span> % (indent, code.co_varnames))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%sfreevars %r&quot;</span> % (indent, code.co_freevars))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%scellvars %r&quot;</span> % (indent, code.co_cellvars))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%sfilename %r&quot;</span> % (indent, code.co_filename))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%sname %r&quot;</span> % (indent, code.co_name))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%sfirstlineno %d&quot;</span> % (indent, code.co_firstlineno))</span><br><span class="line">    show_hex(<span class="string">&quot;lnotab&quot;</span>, code.co_lnotab, indent=indent)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_hex</span>(<span class="params">label, h, indent</span>):</span><br><span class="line">    h = binascii.hexlify(h)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(h) &lt; <span class="number">60</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s%s %s&quot;</span> % (indent, label, h))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s%s&quot;</span> % (indent, label))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(h), <span class="number">60</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;%s   %s&quot;</span> % (indent, h[i:i + <span class="number">60</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    filename = <span class="string">&quot;./__pycache__/rev_RightBack.pyc&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        print_metadata(fp)</span><br><span class="line">        code_object = marshal.load(fp)</span><br><span class="line">        show_code(code_object)</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/traditional/p/13507329.html">《深度剖析CPython解释器》10. Python中的PyCodeObject对象与pyc文件 - 古明地盆 - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>陕西省赛2023</title>
      <link href="/2023/07/02/%E9%99%95%E8%A5%BF%E7%9C%81%E8%B5%9B2023/"/>
      <url>/2023/07/02/%E9%99%95%E8%A5%BF%E7%9C%81%E8%B5%9B2023/</url>
      
        <content type="html"><![CDATA[<h1 id="BadCoffee"><a href="#BadCoffee" class="headerlink" title="BadCoffee"></a>BadCoffee</h1><p>js混淆逆向</p><p>反混淆后的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">table</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0x293934 = [<span class="string">&#x27;8QWULJr&#x27;</span>, <span class="string">&#x27;414933buASiW&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;uuIPk&#x27;</span>, <span class="string">&#x27;2hWBkZw&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;50830UgfzNJ&#x27;</span>, <span class="string">&#x27;search&#x27;</span>, <span class="string">&#x27;toString&#x27;</span>, <span class="string">&#x27;nPakj&#x27;</span>, <span class="string">&#x27;118810yaFCRd&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;apply&#x27;</span>, <span class="string">&#x27;YES&#x27;</span>, <span class="string">&#x27;3279144wTrqht&#x27;</span>, <span class="string">&#x27;FRwAT&#x27;</span>, <span class="string">&#x27;204nSqkLC&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;kGYrv&#x27;</span>, <span class="string">&#x27;XmyuE&#x27;</span>, <span class="string">&#x27;2810463LgnfkD&#x27;</span>, <span class="string">&#x27;qGnaj&#x27;</span>, <span class="string">&#x27;1665531censkz&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;flag&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span>, <span class="string">&#x27;1166JQjGyF&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;(((.+)+)+)+$&#x27;</span>, <span class="string">&#x27;TKKGW&#x27;</span>, <span class="string">&#x27;charAt&#x27;</span>, <span class="string">&#x27;constructor&#x27;</span>, <span class="string">&#x27;5882863UAzTOx&#x27;</span>];</span><br><span class="line">    table = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> _0x293934;</span><br><span class="line">    &#125;</span><br><span class="line">    ;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">table</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">table_arg_sub_307</span>(<span class="params">_0x21da69, _0x31c369</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0x1d6e59 = <span class="title function_">table</span>();</span><br><span class="line">    <span class="keyword">return</span> table_arg_sub_307 = <span class="keyword">function</span>(<span class="params">_0x52956b, _0x1581c3</span>) &#123;</span><br><span class="line">        _0x52956b = _0x52956b - (<span class="number">307</span>);</span><br><span class="line">        <span class="keyword">var</span> _0x62d41 = _0x1d6e59[_0x52956b];</span><br><span class="line">        <span class="keyword">return</span> _0x62d41;</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    <span class="title function_">table_arg_sub_307</span>(_0x21da69, _0x31c369);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">xorFunction</span>(<span class="params">_0x53b7bb, _0x590286</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0xafde9a = table_arg_sub_307</span><br><span class="line">      , _0x324e3a = &#123;&#125;;</span><br><span class="line">    _0x324e3a[<span class="string">&#x27;toString&#x27;</span>] = <span class="keyword">function</span>(<span class="params">_0x318579, _0x2c8042</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> _0x318579 ^ _0x2c8042;</span><br><span class="line">    &#125;</span><br><span class="line">    ;</span><br><span class="line">    <span class="keyword">var</span> _0x3ba534 = _0x324e3a;</span><br><span class="line">    <span class="keyword">return</span> _0x3ba534[<span class="string">&#x27;nPakj&#x27;</span>](_0x53b7bb, _0x590286);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">enc</span>(<span class="params">flag</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0x137834 = table_arg_sub_307</span><br><span class="line">      , _0x3aaed1 = &#123;</span><br><span class="line">        <span class="string">&#x27;XmyuE&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x57b977, _0x20fa18, _0x570bf6</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_0x57b977</span>(_0x20fa18, _0x570bf6);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      , xor_array = []</span><br><span class="line">      , array1 = [<span class="number">233</span>, <span class="number">129</span>, <span class="number">127</span>, <span class="number">238</span>, <span class="number">145</span>, <span class="number">144</span>, <span class="number">11</span>, <span class="number">43</span>, <span class="number">87</span>, <span class="number">134</span>, <span class="number">243</span>, <span class="number">158</span>, <span class="number">197</span>, <span class="number">216</span>, <span class="number">111</span>, <span class="number">136</span>, <span class="number">152</span>, <span class="number">29</span>, <span class="number">204</span>, <span class="number">31</span>, <span class="number">26</span>, <span class="number">228</span>, <span class="number">39</span>, <span class="number">148</span>, <span class="number">215</span>, <span class="number">220</span>, <span class="number">90</span>, <span class="number">76</span>, <span class="number">251</span>, <span class="number">57</span>, <span class="number">183</span>, <span class="number">184</span>, <span class="number">150</span>, <span class="number">157</span>, <span class="number">156</span>, <span class="number">176</span>, <span class="number">13</span>, <span class="number">41</span>, <span class="number">30</span>, <span class="number">86</span>, <span class="number">244</span>, <span class="number">8</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// xor_array[i] = _0x3aaed1[_0x137834(0x142)](xorFunction, array1[&#x27;at&#x27;](i), flag[_0x137834(0x14a)](i)[&#x27;charCodeAt&#x27;]());</span></span><br><span class="line">        xor_array[i] = <span class="title class_">XmyuE</span>(xorFunction, array1[<span class="string">&#x27;at&#x27;</span>](i), flag[<span class="string">&#x27;charAt&#x27;</span>](i)[<span class="string">&#x27;charCodeAt&#x27;</span>]());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span>; i++) &#123;</span><br><span class="line">        xor_array[i] = <span class="title function_">xorFunction</span>(xor_array[<span class="string">&#x27;at&#x27;</span>](i), array1[<span class="string">&#x27;at&#x27;</span>](<span class="number">41</span> - i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(xor_array);</span><br><span class="line">    <span class="keyword">return</span> xor_array;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fff</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> table_arg_sub_307_ = table_arg_sub_307</span><br><span class="line">      , functionTable = &#123;</span><br><span class="line">        <span class="string">&#x27;uuIPk&#x27;</span>: <span class="title function_">table_arg_sub_307_</span>(<span class="number">0x148</span>),</span><br><span class="line">        <span class="string">&#x27;qGnaj&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x5bc07b, _0x400faa, _0x441f85</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_0x5bc07b</span>(_0x400faa, _0x441f85);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;BnVXl&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x189883</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_0x189883</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;dhkyF&#x27;</span>: <span class="title function_">table_arg_sub_307_</span>(<span class="number">0x146</span>),</span><br><span class="line">        <span class="string">&#x27;FRwAT&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x3ab36f, _0x124b7f</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_0x3ab36f</span>(_0x124b7f);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;kGYrv&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x127f5c, _0x4a909c</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> _0x127f5c &lt; _0x4a909c;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;MrEod&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x3d6620, _0x297ded</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> _0x3d6620 != _0x297ded;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;arYUV&#x27;</span>: <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;TKKGW&#x27;</span>: <span class="title function_">table_arg_sub_307_</span>(<span class="number">0x13d</span>)</span><br><span class="line">    &#125;</span><br><span class="line">      , _0x5a5ca7 = (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> _0x201045 = !![];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">_0x69fca7, _0x2b8ad0</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> _0x5c3c95 = _0x201045 ? <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> _0x579f2d = table_arg_sub_307;</span><br><span class="line">                <span class="keyword">if</span> (_0x2b8ad0) &#123;</span><br><span class="line">                    <span class="keyword">var</span> _0xd4d9a8 = _0x2b8ad0[<span class="title function_">_0x579f2d</span>(<span class="number">0x13c</span>)](_0x69fca7, <span class="variable language_">arguments</span>);</span><br><span class="line">                    <span class="keyword">return</span> _0x2b8ad0 = <span class="literal">null</span>,</span><br><span class="line">                    _0xd4d9a8;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            : <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">            ;</span><br><span class="line">            <span class="keyword">return</span> _0x201045 = ![],</span><br><span class="line">            _0x5c3c95;</span><br><span class="line">        &#125;</span><br><span class="line">        ;</span><br><span class="line">    &#125;())</span><br><span class="line">      , _0x59c26e = functionTable[<span class="title function_">table_arg_sub_307_</span>(<span class="number">0x144</span>)](_0x5a5ca7, <span class="variable language_">this</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> _0x25f3ae = table_arg_sub_307_;</span><br><span class="line">        <span class="keyword">return</span> _0x59c26e[<span class="string">&#x27;toString&#x27;</span>]()[<span class="title function_">_0x25f3ae</span>(<span class="number">0x138</span>)](functionTable[<span class="string">&#x27;uuIPk&#x27;</span>])[<span class="title function_">_0x25f3ae</span>(<span class="number">0x139</span>)]()[<span class="title function_">_0x25f3ae</span>(<span class="number">0x14b</span>)](_0x59c26e)[<span class="title function_">_0x25f3ae</span>(<span class="number">0x138</span>)](functionTable[<span class="title function_">_0x25f3ae</span>(<span class="number">0x135</span>)]);</span><br><span class="line">    &#125;);</span><br><span class="line">    functionTable[<span class="string">&#x27;BnVXl&#x27;</span>](_0x59c26e);</span><br><span class="line">    <span class="comment">// var _0xe4960c = functionTable[&#x27;dhkyF&#x27;]</span></span><br><span class="line">     <span class="keyword">var</span> _0xe4960c = <span class="string">&quot;flag&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#125;&quot;</span></span><br><span class="line">      <span class="comment">// , _0x55dae6 = functionTable[table_arg_sub_307_(0x13f)](enc, _0xe4960c)</span></span><br><span class="line">      , _0x55dae6 = <span class="title function_">enc</span>(_0xe4960c)</span><br><span class="line">      , _0xbb5ecd = [ <span class="number">135</span>, <span class="number">25</span>, <span class="number">72</span>, <span class="number">151</span>, <span class="number">195</span>, <span class="number">212</span>, <span class="number">228</span>, <span class="number">212</span>, <span class="number">250</span>, <span class="number">101</span>, <span class="number">39</span>, <span class="number">77</span>, <span class="number">163</span>, <span class="number">77</span>, <span class="number">70</span>, <span class="number">167</span>, <span class="number">119</span>, <span class="number">184</span>, <span class="number">7</span>, <span class="number">77</span>, <span class="number">144</span>, <span class="number">154</span>, <span class="number">93</span>, <span class="number">10</span>, <span class="number">185</span>, <span class="number">48</span>, <span class="number">179</span>, <span class="number">77</span>, <span class="number">71</span>, <span class="number">163</span>, <span class="number">67</span>, <span class="number">61</span>, <span class="number">113</span>, <span class="number">156</span>, <span class="number">196</span>, <span class="number">136</span>, <span class="number">239</span>, <span class="number">241</span>, <span class="number">128</span>, <span class="number">93</span>, <span class="number">84</span>, <span class="number">156</span>];</span><br><span class="line">    <span class="comment">// for (let i = -0x15a * -0x4 + -0x709 * 0x2 + 0x8aa * 0x1; functionTable[table_arg_sub_307_(0x141)](i, -0x2351 * 0x1 + 0x67f + 0x1cfc); i++) &#123;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span> ; i++) &#123;</span><br><span class="line">        <span class="comment">// if (functionTable[&#x27;MrEod&#x27;](_0x55dae6[&#x27;at&#x27;](i), _0xbb5ecd[&#x27;at&#x27;](i))) &#123;</span></span><br><span class="line">           <span class="keyword">if</span> (_0x55dae6[<span class="string">&#x27;at&#x27;</span>](i) != _0xbb5ecd[<span class="string">&#x27;at&#x27;</span>](i)) &#123; </span><br><span class="line">            <span class="variable language_">console</span>[<span class="title function_">table_arg_sub_307_</span>(<span class="number">0x134</span>)](functionTable[<span class="string">&#x27;arYUV&#x27;</span>]);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>[<span class="title function_">table_arg_sub_307_</span>(<span class="number">0x134</span>)](functionTable[<span class="title function_">table_arg_sub_307_</span>(<span class="number">0x149</span>)]);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fff</span>();</span><br></pre></td></tr></table></figure><p>函数表：(部分函数的调用通过这个函数表获取)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">table</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0x293934 = [<span class="string">&#x27;8QWULJr&#x27;</span>, <span class="string">&#x27;414933buASiW&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;uuIPk&#x27;</span>, <span class="string">&#x27;2hWBkZw&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;50830UgfzNJ&#x27;</span>, <span class="string">&#x27;search&#x27;</span>, <span class="string">&#x27;toString&#x27;</span>, <span class="string">&#x27;nPakj&#x27;</span>, <span class="string">&#x27;118810yaFCRd&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;apply&#x27;</span>, <span class="string">&#x27;YES&#x27;</span>, <span class="string">&#x27;3279144wTrqht&#x27;</span>, <span class="string">&#x27;FRwAT&#x27;</span>, <span class="string">&#x27;204nSqkLC&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;kGYrv&#x27;</span>, <span class="string">&#x27;XmyuE&#x27;</span>, <span class="string">&#x27;2810463LgnfkD&#x27;</span>, <span class="string">&#x27;qGnaj&#x27;</span>, <span class="string">&#x27;1665531censkz&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;flag&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span>, <span class="string">&#x27;1166JQjGyF&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;(((.+)+)+)+$&#x27;</span>, <span class="string">&#x27;TKKGW&#x27;</span>, <span class="string">&#x27;charAt&#x27;</span>, <span class="string">&#x27;constructor&#x27;</span>, <span class="string">&#x27;5882863UAzTOx&#x27;</span>];</span><br><span class="line">    table = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> _0x293934;</span><br><span class="line">    &#125;</span><br><span class="line">    ;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">table</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">table_arg_sub_307</span>(<span class="params">_0x21da69, _0x31c369</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0x1d6e59 = <span class="title function_">table</span>();</span><br><span class="line">    <span class="keyword">return</span> table_arg_sub_307 = <span class="keyword">function</span>(<span class="params">_0x52956b, _0x1581c3</span>) &#123;</span><br><span class="line">        _0x52956b = _0x52956b - (<span class="number">307</span>);</span><br><span class="line">        <span class="keyword">var</span> _0x62d41 = _0x1d6e59[_0x52956b];</span><br><span class="line">        <span class="keyword">return</span> _0x62d41;</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    <span class="title function_">table_arg_sub_307</span>(_0x21da69, _0x31c369);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主逻辑函数：</p><p>同样也有一个局部变量的函数表。</p><p>主逻辑为先enc函数加密<code>_0xe4960c</code>，即flag，然后与结果比对。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fff</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> table_arg_sub_307_ = table_arg_sub_307</span><br><span class="line">      , functionTable = &#123;</span><br><span class="line">        <span class="string">&#x27;uuIPk&#x27;</span>: <span class="title function_">table_arg_sub_307_</span>(<span class="number">0x148</span>),</span><br><span class="line">        <span class="string">&#x27;qGnaj&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x5bc07b, _0x400faa, _0x441f85</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_0x5bc07b</span>(_0x400faa, _0x441f85);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;BnVXl&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x189883</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_0x189883</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;dhkyF&#x27;</span>: <span class="title function_">table_arg_sub_307_</span>(<span class="number">0x146</span>),</span><br><span class="line">        <span class="string">&#x27;FRwAT&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x3ab36f, _0x124b7f</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_0x3ab36f</span>(_0x124b7f);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;kGYrv&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x127f5c, _0x4a909c</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> _0x127f5c &lt; _0x4a909c;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;MrEod&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x3d6620, _0x297ded</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> _0x3d6620 != _0x297ded;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;arYUV&#x27;</span>: <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;TKKGW&#x27;</span>: <span class="title function_">table_arg_sub_307_</span>(<span class="number">0x13d</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// var _0xe4960c = functionTable[&#x27;dhkyF&#x27;]</span></span><br><span class="line">     <span class="keyword">var</span> _0xe4960c = <span class="string">&quot;flag&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#125;&quot;</span></span><br><span class="line">      <span class="comment">// , _0x55dae6 = functionTable[table_arg_sub_307_(0x13f)](enc, _0xe4960c)</span></span><br><span class="line">      , _0x55dae6 = <span class="title function_">enc</span>(_0xe4960c)</span><br><span class="line">      , _0xbb5ecd = [ <span class="number">135</span>, <span class="number">25</span>, <span class="number">72</span>, <span class="number">151</span>, <span class="number">195</span>, <span class="number">212</span>, <span class="number">228</span>, <span class="number">212</span>, <span class="number">250</span>, <span class="number">101</span>, <span class="number">39</span>, <span class="number">77</span>, <span class="number">163</span>, <span class="number">77</span>, <span class="number">70</span>, <span class="number">167</span>, <span class="number">119</span>, <span class="number">184</span>, <span class="number">7</span>, <span class="number">77</span>, <span class="number">144</span>, <span class="number">154</span>, <span class="number">93</span>, <span class="number">10</span>, <span class="number">185</span>, <span class="number">48</span>, <span class="number">179</span>, <span class="number">77</span>, <span class="number">71</span>, <span class="number">163</span>, <span class="number">67</span>, <span class="number">61</span>, <span class="number">113</span>, <span class="number">156</span>, <span class="number">196</span>, <span class="number">136</span>, <span class="number">239</span>, <span class="number">241</span>, <span class="number">128</span>, <span class="number">93</span>, <span class="number">84</span>, <span class="number">156</span>];</span><br><span class="line">    <span class="comment">// for (let i = -0x15a * -0x4 + -0x709 * 0x2 + 0x8aa * 0x1; functionTable[table_arg_sub_307_(0x141)](i, -0x2351 * 0x1 + 0x67f + 0x1cfc); i++) &#123;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span> ; i++) &#123;</span><br><span class="line">        <span class="comment">// if (functionTable[&#x27;MrEod&#x27;](_0x55dae6[&#x27;at&#x27;](i), _0xbb5ecd[&#x27;at&#x27;](i))) &#123;</span></span><br><span class="line">           <span class="keyword">if</span> (_0x55dae6[<span class="string">&#x27;at&#x27;</span>](i) != _0xbb5ecd[<span class="string">&#x27;at&#x27;</span>](i)) &#123; </span><br><span class="line">            <span class="variable language_">console</span>[<span class="title function_">table_arg_sub_307_</span>(<span class="number">0x134</span>)](functionTable[<span class="string">&#x27;arYUV&#x27;</span>]);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>[<span class="title function_">table_arg_sub_307_</span>(<span class="number">0x134</span>)](functionTable[<span class="title function_">table_arg_sub_307_</span>(<span class="number">0x149</span>)]);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>enc函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">xorFunction</span>(<span class="params">_0x53b7bb, _0x590286</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0xafde9a = table_arg_sub_307</span><br><span class="line">      , _0x324e3a = &#123;&#125;;</span><br><span class="line">    _0x324e3a[<span class="string">&#x27;toString&#x27;</span>] = <span class="keyword">function</span>(<span class="params">_0x318579, _0x2c8042</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> _0x318579 ^ _0x2c8042;</span><br><span class="line">    &#125;</span><br><span class="line">    ;</span><br><span class="line">    <span class="keyword">var</span> _0x3ba534 = _0x324e3a;</span><br><span class="line">    <span class="keyword">return</span> _0x3ba534[<span class="string">&#x27;nPakj&#x27;</span>](_0x53b7bb, _0x590286);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">enc</span>(<span class="params">flag</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0x137834 = table_arg_sub_307</span><br><span class="line">      , _0x3aaed1 = &#123;</span><br><span class="line">        <span class="string">&#x27;XmyuE&#x27;</span>: <span class="keyword">function</span>(<span class="params">_0x57b977, _0x20fa18, _0x570bf6</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">_0x57b977</span>(_0x20fa18, _0x570bf6);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      , xor_array = []</span><br><span class="line">      , array1 = [<span class="number">233</span>, <span class="number">129</span>, <span class="number">127</span>, <span class="number">238</span>, <span class="number">145</span>, <span class="number">144</span>, <span class="number">11</span>, <span class="number">43</span>, <span class="number">87</span>, <span class="number">134</span>, <span class="number">243</span>, <span class="number">158</span>, <span class="number">197</span>, <span class="number">216</span>, <span class="number">111</span>, <span class="number">136</span>, <span class="number">152</span>, <span class="number">29</span>, <span class="number">204</span>, <span class="number">31</span>, <span class="number">26</span>, <span class="number">228</span>, <span class="number">39</span>, <span class="number">148</span>, <span class="number">215</span>, <span class="number">220</span>, <span class="number">90</span>, <span class="number">76</span>, <span class="number">251</span>, <span class="number">57</span>, <span class="number">183</span>, <span class="number">184</span>, <span class="number">150</span>, <span class="number">157</span>, <span class="number">156</span>, <span class="number">176</span>, <span class="number">13</span>, <span class="number">41</span>, <span class="number">30</span>, <span class="number">86</span>, <span class="number">244</span>, <span class="number">8</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// xor_array[i] = _0x3aaed1[_0x137834(0x142)](xorFunction, array1[&#x27;at&#x27;](i), flag[_0x137834(0x14a)](i)[&#x27;charCodeAt&#x27;]());</span></span><br><span class="line">        xor_array[i] = <span class="title class_">XmyuE</span>(xorFunction, array1[<span class="string">&#x27;at&#x27;</span>](i), flag[<span class="string">&#x27;charAt&#x27;</span>](i)[<span class="string">&#x27;charCodeAt&#x27;</span>]());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span>; i++) &#123;</span><br><span class="line">        xor_array[i] = <span class="title function_">xorFunction</span>(xor_array[<span class="string">&#x27;at&#x27;</span>](i), array1[<span class="string">&#x27;at&#x27;</span>](<span class="number">41</span> - i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(xor_array);</span><br><span class="line">    <span class="keyword">return</span> xor_array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">array1 = [<span class="number">233</span>, <span class="number">129</span>, <span class="number">127</span>, <span class="number">238</span>, <span class="number">145</span>, <span class="number">144</span>, <span class="number">11</span>, <span class="number">43</span>, <span class="number">87</span>, <span class="number">134</span>, <span class="number">243</span>, <span class="number">158</span>, <span class="number">197</span>, <span class="number">216</span>, <span class="number">111</span>, <span class="number">136</span>, <span class="number">152</span>, <span class="number">29</span>, <span class="number">204</span>, <span class="number">31</span>, <span class="number">26</span>, <span class="number">228</span>, <span class="number">39</span>, <span class="number">148</span>, <span class="number">215</span>, <span class="number">220</span>, <span class="number">90</span>, <span class="number">76</span>, <span class="number">251</span>, <span class="number">57</span>, <span class="number">183</span>, <span class="number">184</span>, <span class="number">150</span>, <span class="number">157</span>, <span class="number">156</span>, <span class="number">176</span>, <span class="number">13</span>, <span class="number">41</span>, <span class="number">30</span>, <span class="number">86</span>, <span class="number">244</span>, <span class="number">8</span>]</span><br><span class="line">result = [<span class="number">135</span>, <span class="number">25</span>, <span class="number">72</span>, <span class="number">151</span>, <span class="number">195</span>, <span class="number">212</span>, <span class="number">228</span>, <span class="number">212</span>, <span class="number">250</span>, <span class="number">101</span>, <span class="number">39</span>, <span class="number">77</span>, <span class="number">163</span>, <span class="number">77</span>, <span class="number">70</span>, <span class="number">167</span>, <span class="number">119</span>, <span class="number">184</span>, <span class="number">7</span>, <span class="number">77</span>, <span class="number">144</span>, <span class="number">154</span>, <span class="number">93</span>, <span class="number">10</span>, <span class="number">185</span>, <span class="number">48</span>, <span class="number">179</span>, <span class="number">77</span>, <span class="number">71</span>, <span class="number">163</span>, <span class="number">67</span>, <span class="number">61</span>, <span class="number">113</span>, <span class="number">156</span>, <span class="number">196</span>, <span class="number">136</span>, <span class="number">239</span>, <span class="number">241</span>, <span class="number">128</span>, <span class="number">93</span>, <span class="number">84</span>, <span class="number">156</span>]</span><br><span class="line"><span class="keyword">let</span> flag = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span>; i++) &#123; </span><br><span class="line">    flag.<span class="title function_">push</span>(result[i] ^ array1[i] ^ array1[<span class="number">41</span> - i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(...flag))</span><br></pre></td></tr></table></figure><h2 id="其他师傅的思路技巧"><a href="#其他师傅的思路技巧" class="headerlink" title="其他师傅的思路技巧"></a>其他师傅的思路技巧</h2><p><img src="/2023/07/02/%E9%99%95%E8%A5%BF%E7%9C%81%E8%B5%9B2023/image-20230702175838424.png" alt="其他师傅的思路技巧"></p><h1 id="Web-amp-Assembly"><a href="#Web-amp-Assembly" class="headerlink" title="Web&amp;Assembly"></a>Web&amp;Assembly</h1><h2 id="两种逆向方法"><a href="#两种逆向方法" class="headerlink" title="两种逆向方法"></a>两种逆向方法</h2><h3 id="wabt"><a href="#wabt" class="headerlink" title="wabt"></a>wabt</h3><p><code>./wasm2c index.wasm -o index.c</code></p><p><code>gcc -c index.c -o index.o</code></p><p>将.wasm文件转为.o文件，进入IDA分析。</p><h3 id="JEB-Ghidra"><a href="#JEB-Ghidra" class="headerlink" title="JEB + Ghidra"></a>JEB + Ghidra</h3><p><img src="/2023/07/02/%E9%99%95%E8%A5%BF%E7%9C%81%E8%B5%9B2023/image-20230702211829629.png" alt="JEB查看main函数"></p><p>Ghidra需要安装<a href="https://github.com/nneonneo/ghidra-wasm-plugin">ghidra-wasm-plugin</a>插件。</p><p><img src="/2023/07/02/%E9%99%95%E8%A5%BF%E7%9C%81%E8%B5%9B2023/image-20230702211921280.png" alt="Ghidra查看check函数"></p><p><img src="/2023/07/02/%E9%99%95%E8%A5%BF%E7%9C%81%E8%B5%9B2023/image-20230702211949839.png" alt="Ghidra查看do_something函数"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>由提示可知，check函数的输入：</p><p><img src="/2023/07/02/%E9%99%95%E8%A5%BF%E7%9C%81%E8%B5%9B2023/image-20230702212048106.png" alt="题目"></p><p>先看<code>do_something</code>，逻辑为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">do_something</span>(<span class="params">par, a, b, c, d</span>):</span><br><span class="line">par[d] = (par[d] ^ par[a] + par[c]) &amp; <span class="number">0xFF</span></span><br><span class="line">par[c] = (par[c] ^ par[a] + par[b]) &amp; <span class="number">0xFF</span></span><br><span class="line">par[b] = (par[b] ^ par[c] + par[d]) &amp; <span class="number">0xFF</span></span><br><span class="line">par[a] = (par[a] ^ par[b] + par[d]) &amp; <span class="number">0xFF</span></span><br></pre></td></tr></table></figure><p>再看<code>main</code>，逻辑为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">secret, pwd, account</span>):</span><br><span class="line">    s = <span class="string">&quot;0123456789abcdef&quot;</span></span><br><span class="line">    var = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(pwd), <span class="number">8</span>):</span><br><span class="line">        array = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            array.append((secret[j] ^ pwd[j + i]) &amp; <span class="number">0xFF</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x72</span>):</span><br><span class="line">        do_something(array, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">        do_something(array, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line">        do_something(array, <span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">        do_something(array, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            num = array[j]</span><br><span class="line">            var = var | s[num/<span class="number">16</span>] == account[(j + i) * <span class="number">2</span>] | s[num%<span class="number">16</span>] == account[(j + i) * <span class="number">2</span> + <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> var</span><br></pre></td></tr></table></figure><h2 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">re_do</span>(<span class="params">par, a, b, c, d</span>):</span><br><span class="line">    par[a] = (par[a] ^ par[b] + par[d]) &amp; <span class="number">0xFF</span></span><br><span class="line">    par[b] = (par[b] ^ par[c] + par[d]) &amp; <span class="number">0xFF</span></span><br><span class="line">    par[c] = (par[c] ^ par[a] + par[b]) &amp; <span class="number">0xFF</span></span><br><span class="line">    par[d] = (par[d] ^ par[a] + par[c]) &amp; <span class="number">0xFF</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">&quot;0123456789abcdef&quot;</span></span><br><span class="line">key = <span class="string">&quot;114!514!&quot;</span></span><br><span class="line">result = <span class="string">&quot;91fba5ccfef6e0905eeeb47940d25543c286b10de778fbb268ab7580414c0758&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">array = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result) // <span class="number">2</span>):</span><br><span class="line">    array.append(s.index(result[i * <span class="number">2</span>]) * <span class="number">16</span> + s.index((result[i * <span class="number">2</span> + <span class="number">1</span>])))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(array), <span class="number">8</span>):</span><br><span class="line">    a = array[i:i+<span class="number">8</span>]</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x72</span>):</span><br><span class="line">        re_do(a, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line">        re_do(a, <span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">        re_do(a, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line">        re_do(a, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(key)):</span><br><span class="line">        a[j] = (a[j] ^ <span class="built_in">ord</span>(key[j])) &amp; <span class="number">0xFF</span></span><br><span class="line">    flag += <span class="string">&quot;&quot;</span>.join(<span class="built_in">chr</span>(j) <span class="keyword">for</span> j <span class="keyword">in</span> a)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ciscn2023</title>
      <link href="/2023/06/27/ciscn2023/"/>
      <url>/2023/06/27/ciscn2023/</url>
      
        <content type="html"><![CDATA[<h1 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h1><p>snap.berkeley.edu打开xml文件。</p><p>修改设置<code>secret</code>变量的流程：</p><p><img src="/2023/06/27/ciscn2023/image-20230528171633929.png" alt="数据生成"></p><p>在其设置完<code>secret</code>后展示：</p><p><img src="/2023/06/27/ciscn2023/image-20230528171717916.png" alt="展示"></p><p>得到<code>secret</code>：</p><p><img src="/2023/06/27/ciscn2023/image-20230528171755771.png" alt="数据"></p><p>逆向如图所示的算法：</p><p><img src="/2023/06/27/ciscn2023/image-20230528171838714.png" alt="比对算法"></p><p>具体流程就是将输入的每两个字符进行异或，放置到<code>test</code>中，然后将<code>test[1:-1]</code>与<code>secret</code>比对</p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data=[<span class="number">102</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">28</span>,<span class="number">74</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">85</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">75</span>,<span class="number">20</span>,<span class="number">92</span>,<span class="number">92</span>,<span class="number">8</span>,<span class="number">28</span>,<span class="number">25</span>,<span class="number">81</span>,<span class="number">83</span>,<span class="number">7</span>,<span class="number">28</span>,<span class="number">76</span>,<span class="number">88</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">29</span>,<span class="number">73</span>,<span class="number">0</span>,<span class="number">86</span>,<span class="number">4</span>,<span class="number">87</span>,<span class="number">87</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">4</span>,<span class="number">85</span>,<span class="number">87</span>,<span class="number">30</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(data)):</span><br><span class="line">    data[i]^=data[i-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytes</span>(data))</span><br></pre></td></tr></table></figure><h1 id="ezbyte"><a href="#ezbyte" class="headerlink" title="ezbyte"></a>ezbyte</h1><p><img src="/2023/06/27/ciscn2023/image-20230627181710006.png" alt="比对逻辑"></p><p>查看程序可以知道flag的前五位和后五位，然后将中间的分别放入r12、r13、r14、r15中，但之后的程序没有对r12有处理。</p><p>使用<code>readelf --debug-dump=frame ezbyte</code>或<code>readelf -Wwr ezbyte</code>获取Dwarf调试信息。</p><p><img src="/2023/06/27/ciscn2023/image-20230627181143587.png" alt="r12处理过程"></p><p>逻辑：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">r12, r13, r14, r15 = 0, 0, 0, 0</span><br><span class="line">r12 = (r12 + 1892739) ^ 1237891274917891239 ^ 2616514329260088143</span><br><span class="line">r13 = (r13 + 8971237) ^ 1209847170981118947 ^ 8502251781212277489</span><br><span class="line">r14 = (r14 + 1512312) ^ 1098791727398412397 ^ 2451795628338718684</span><br><span class="line">r15 = (r15 + 9123704) ^ 1890878197237214971 ^ 8722213363631027234</span><br><span class="line">r12 = r12 | r13 | r14 | r15</span><br></pre></td></tr></table></figure><p>最后结果应该是0。</p><h1 id="moveAside"><a href="#moveAside" class="headerlink" title="moveAside"></a>moveAside</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>mov混淆，我不会。</p><p>但看wp和调试可以发现，程序应该是一个个字符变换，且用strcmp比较，在strcmp下断点，可以在栈中找到要比较的两个字符。</p><p>也可以使用<code>ltrace</code>获取程序的系统调用：</p><p>执行了一次<code>strcmp</code>就结束了：</p><p><img src="/2023/06/27/ciscn2023/image-20230628132748435.png" alt="输入1234567890"></p><p>执行了六次<code>strcmp</code>才结束：</p><p><img src="/2023/06/27/ciscn2023/image-20230628132910371.png" alt="输入flag{...}"></p><h3 id="构造输入输出表"><a href="#构造输入输出表" class="headerlink" title="构造输入输出表"></a>构造输入输出表</h3><p>可以输入<code>0123456789abcdefghijklmnopqrstuvwxyz&#123;&#125;-111</code>尝试获取输入输出表，且记录要比较的字符，并且每次比较时将更改变换后的字符使其比较成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;table:&quot;,Byte(0x8600154),Byte(0x860014C))</span><br><span class="line">PatchByte(0x8600154,Byte(0x860014C))</span><br></pre></td></tr></table></figure><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">table = []</span><br><span class="line">final = []</span><br><span class="line"><span class="built_in">input</span> = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&#123;&#125;-&quot;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./out.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        line = f.readline()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> line:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> line.startswith(<span class="string">&quot;table&quot;</span>):</span><br><span class="line">            lines = line.split()</span><br><span class="line">            table.append(<span class="built_in">int</span>(lines[<span class="number">1</span>]))</span><br><span class="line">            final.append(<span class="built_in">int</span>(lines[<span class="number">2</span>]))</span><br><span class="line"><span class="built_in">print</span>(table)</span><br><span class="line"><span class="built_in">print</span>(final)</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(final)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(table) - <span class="number">3</span>):</span><br><span class="line">        <span class="keyword">if</span> final[i] == table[j]:</span><br><span class="line">            flag += <span class="built_in">input</span>[j]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># flag&#123;781dda4e-d910-4f06-8f5b-5c3755182337&#125;</span></span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>[<a href="https://www.bilibili.com/video/BV198411v7tg/?spm_id_from=333.1007.0.0&vd_source=1e92ba19a2288fc56c35e0d3dcf15345">CTF][Reverse] 使用LD_PRELOAD进行hook，逐位爆破_哔哩哔哩_bilibili</a></p><p>使用LD_PRELOAD hook掉strcmp。</p><p><img src="/2023/06/27/ciscn2023/image-20231001130357347.png" alt="LD_PRELOAD思路"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">strcmp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* s1, <span class="type">const</span> <span class="type">char</span>* s2)</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;strcmp called!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(*s1 &amp;&amp; (*s1 == *s2))&#123;</span><br><span class="line">        s1++;</span><br><span class="line">        s2++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *s1 - *s2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后编译使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -m32 -shared -02 mystrcmp.c -o mystrcmp.so</span><br><span class="line">LD_PRELOAD=./mystrcmp.so ./moveAside</span><br></pre></td></tr></table></figure><p>这样就会使程序每次使用strcmp的时候都会打印“strcmp called!” ，可利用这个来爆破。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> string.printable:</span><br><span class="line">        current_flag = ans + ch</span><br><span class="line">        <span class="built_in">print</span>(current_flag)</span><br><span class="line">        p = process(<span class="string">&quot;./moveAside&quot;</span>, enc=&#123;<span class="string">&#x27;LD_PRELOAD&#x27;</span>: <span class="string">&#x27;./mystrcmp.so&#x27;</span>&#125;)</span><br><span class="line">        p.recvline()</span><br><span class="line">        p.sendline(current_flag.encode())</span><br><span class="line">        recv = p.recvall(timeout=<span class="number">0.01</span>)</span><br><span class="line">        recvs = recv.splitlines()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(revcs) &gt; <span class="built_in">len</span>(ans) + <span class="number">2</span>:</span><br><span class="line">            ans += ch</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h1 id="ezAndroid"><a href="#ezAndroid" class="headerlink" title="ezAndroid"></a>ezAndroid</h1><p>不会，做的时候完全不知道要干嘛，看了wp才稍微懂些。</p><p>贴个其他师傅的wp👉[CISCN2023 wp | 心流 (natro92.github.io)](<a href="https://natro92.github.io/2023/05/29/CISCN2023">https://natro92.github.io/2023/05/29/CISCN2023</a> wp&#x2F;index.html)</p><h1 id="flutterror"><a href="#flutterror" class="headerlink" title="flutterror"></a>flutterror</h1><p>不会，再贴个其他师傅比较取巧的思路👉<a href="https://www.cnblogs.com/lordtianqiyi/articles/17438974.html">CISCN 2023 RE WP</a></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF2023二进制</title>
      <link href="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
      <url>/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="careful"><a href="#careful" class="headerlink" title="careful"></a>careful</h1><p>直接上传微步云沙箱</p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230604203710296.png" alt="url"></p><h1 id="babyRe"><a href="#babyRe" class="headerlink" title="babyRe"></a>babyRe</h1><p>调试一下了解主要逻辑：</p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/2.PNG" alt="主逻辑"></p><p>v17的位置是处理输入字符串的；</p><p>StartAddress是最后进行比较的；</p><p>v17的位置的数据是经过前面有个函数异或解开的，带有一点混淆，处理后可以得到：</p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/1.PNG" alt="加密逻辑"></p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">key = [</span><br><span class="line">    <span class="number">93</span>, <span class="number">66</span>, <span class="number">98</span>, <span class="number">41</span>, <span class="number">3</span>, <span class="number">54</span>, <span class="number">71</span>, <span class="number">65</span>, <span class="number">21</span>, <span class="number">54</span></span><br><span class="line">]</span><br><span class="line">data = [</span><br><span class="line">    <span class="number">0xF7</span>, <span class="number">0x2E</span>, <span class="number">0x34</span>, <span class="number">0xF0</span>, <span class="number">0x72</span>, <span class="number">0xCF</span>, <span class="number">0x5E</span>, <span class="number">0x0A</span>, <span class="number">0xBB</span>, <span class="number">0xEC</span>,</span><br><span class="line">    <span class="number">0xB1</span>, <span class="number">0x2B</span>, <span class="number">0x70</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0xED</span>, <span class="number">0x46</span>, <span class="number">0x38</span>, <span class="number">0xDB</span>, <span class="number">0xDA</span>,</span><br><span class="line">    <span class="number">0x6C</span>, <span class="number">0xBD</span>, <span class="number">0xD4</span>, <span class="number">0x06</span>, <span class="number">0x77</span>, <span class="number">0xF2</span>, <span class="number">0xCF</span>, <span class="number">0x56</span>, <span class="number">0x88</span>, <span class="number">0xC6</span>,</span><br><span class="line">    <span class="number">0x31</span>, <span class="number">0xD2</span>, <span class="number">0xB7</span>, <span class="number">0x5A</span>, <span class="number">0xC1</span>, <span class="number">0x42</span>, <span class="number">0xB0</span>, <span class="number">0xF4</span>, <span class="number">0x48</span>, <span class="number">0x37</span>,</span><br><span class="line">    <span class="number">0xF5</span>, <span class="number">0x2C</span>, <span class="number">0xF5</span>, <span class="number">0x58</span></span><br><span class="line">]</span><br><span class="line">v4 = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x100</span>)]</span><br><span class="line"></span><br><span class="line">v7 = <span class="number">0</span></span><br><span class="line">v6 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x100</span>):</span><br><span class="line">    v6 = (key[v7 % <span class="number">10</span>] + v4[i] + <span class="number">2</span> * v6) % <span class="number">0x100</span></span><br><span class="line">    v7 += <span class="number">1</span></span><br><span class="line">    v4[i], v4[v6] = v4[v6], v4[i]</span><br><span class="line"></span><br><span class="line">v7, v6 = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    v6 = (v7 + v6) % <span class="number">0x100</span></span><br><span class="line">    v7 = (v4[v6] + v7) % <span class="number">0x100</span></span><br><span class="line">    v4[v6], v4[v7] = v4[v7], v4[v6]</span><br><span class="line">    v12 = v4[(v4[v6] + v7 + v4[v7]) % <span class="number">0x100</span>]</span><br><span class="line">    data[i] -= i % <span class="number">0xD</span></span><br><span class="line">    data[i] %= <span class="number">0x100</span></span><br><span class="line">    data[i] ^= v12</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;</span>.join(<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> data))</span><br></pre></td></tr></table></figure><h1 id="ez-exe"><a href="#ez-exe" class="headerlink" title="ez_exe"></a>ez_exe</h1><h2 id="获取bin2"><a href="#获取bin2" class="headerlink" title="获取bin2"></a>获取bin2</h2><p>用pyinstxtractor生成pyc，再用pycdc反编译一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> wintypes</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_STARTUPINFO</span>(<span class="title class_ inherited__">Structure</span>):</span><br><span class="line">    _fields_ = [</span><br><span class="line">        (<span class="string">&#x27;cb&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;lpReserved&#x27;</span>, c_char_p),</span><br><span class="line">        (<span class="string">&#x27;lpDesktop&#x27;</span>, c_char_p),</span><br><span class="line">        (<span class="string">&#x27;lpTitle&#x27;</span>, c_char_p),</span><br><span class="line">        (<span class="string">&#x27;dwX&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;dwY&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;dwXSize&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;dwYSize&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;dwXCountChars&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;dwYCountChars&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;dwFillAttribute&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;dwFlags&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;wShowWindow&#x27;</span>, c_ushort),</span><br><span class="line">        (<span class="string">&#x27;cbReserved2&#x27;</span>, c_ushort),</span><br><span class="line">        (<span class="string">&#x27;lpReserved2&#x27;</span>, c_char_p),</span><br><span class="line">        (<span class="string">&#x27;hStdInput&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;hStdOutput&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;hStdError&#x27;</span>, c_ulong)]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_PROCESS_INFORMATION</span>(<span class="title class_ inherited__">Structure</span>):</span><br><span class="line">    _fields_ = [</span><br><span class="line">        (<span class="string">&#x27;hProcess&#x27;</span>, c_void_p),</span><br><span class="line">        (<span class="string">&#x27;hThread&#x27;</span>, c_void_p),</span><br><span class="line">        (<span class="string">&#x27;dwProcessId&#x27;</span>, c_ulong),</span><br><span class="line">        (<span class="string">&#x27;dwThreadId&#x27;</span>, c_ulong)]</span><br><span class="line"> </span><br><span class="line">StartupInfo = _STARTUPINFO()</span><br><span class="line">ProcessInfo = _PROCESS_INFORMATION()</span><br><span class="line">key1 = <span class="built_in">bytes</span>(md5(<span class="string">b&#x27;bin1bin1bin1&#x27;</span>).hexdigest().encode())</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;bin1&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">arr = <span class="built_in">range</span>(<span class="built_in">len</span>(file))()</span><br><span class="line"><span class="built_in">open</span>(<span class="string">&#x27;bin1&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>).write(<span class="built_in">bytes</span>(arr))</span><br><span class="line">sleep(<span class="number">0</span>)</span><br><span class="line">bet = ctypes.windll.kernel32.CreateProcessA(<span class="string">b&#x27;bin1&#x27;</span>, ctypes.c_int(<span class="number">0</span>), ctypes.c_int(<span class="number">0</span>), ctypes.c_int(<span class="number">0</span>), ctypes.c_int(<span class="number">0</span>), ctypes.c_int(<span class="number">0</span>), ctypes.c_int(<span class="number">0</span>), ctypes.c_int(<span class="number">0</span>), byref(StartupInfo), byref(ProcessInfo))</span><br><span class="line">ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ProcessInfo.hProcess), ctypes.c_int(-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">open</span>(<span class="string">&#x27;bin1&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>).write(file)</span><br></pre></td></tr></table></figure><p>很明显，<code>arr = range(len(file))() 和 open(&#39;bin1&#39;, &#39;wb&#39;).write(bytes(arr))</code>是有些奇怪的，可能是无法彻底地反编译，于是用pycdas得到python字节码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">b&#x27;bin1bin1bin1&#x27;</span><br><span class="line">&#x27;bin1&#x27;</span><br><span class="line">&#x27;rb&#x27;</span><br><span class="line">[Code]</span><br><span class="line">    File Name: ez_py.py</span><br><span class="line">    Object Name: &lt;listcomp&gt;</span><br><span class="line">    Qualified Name: &lt;listcomp&gt;</span><br><span class="line">    Arg Count: 1</span><br><span class="line">    Pos Only Arg Count: 0</span><br><span class="line">    KW Only Arg Count: 0</span><br><span class="line">    Stack Size: 7</span><br><span class="line">    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)</span><br><span class="line">    [Names]</span><br><span class="line">        &#x27;key1&#x27;</span><br><span class="line">        &#x27;len&#x27;</span><br><span class="line">        &#x27;file&#x27;</span><br><span class="line">    [Constants]</span><br><span class="line">    [Disassembly]</span><br><span class="line">        0       RESUME                        0</span><br><span class="line">        2       BUILD_LIST                    0</span><br><span class="line">        4       LOAD_FAST                     0: .0</span><br><span class="line">        6       FOR_ITER                      50 (to 108)</span><br><span class="line">        8       STORE_FAST                    1: i</span><br><span class="line">        10      LOAD_GLOBAL                   0: key1</span><br><span class="line">        22      LOAD_FAST                     1: i</span><br><span class="line">        24      LOAD_GLOBAL                   3: NULL + len</span><br><span class="line">        36      LOAD_GLOBAL                   0: key1</span><br><span class="line">        48      PRECALL                       1</span><br><span class="line">        52      CALL                          1</span><br><span class="line">        62      BINARY_OP                     6</span><br><span class="line">        66      BINARY_SUBSCR                 </span><br><span class="line">        76      LOAD_GLOBAL                   4: file</span><br><span class="line">        88      LOAD_FAST                     1: i</span><br><span class="line">        90      BINARY_SUBSCR                 </span><br><span class="line">        100     BINARY_OP                     12</span><br><span class="line">        104     LIST_APPEND                   2</span><br><span class="line">        106     JUMP_BACKWARD                 51</span><br><span class="line">        108     RETURN_VALUE                  </span><br><span class="line">&#x27;wb&#x27;</span><br><span class="line">b&#x27;bin1&#x27;</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><p>可以使用dis来获取python字节码，但得使用python3.11版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Disassembly of &lt;code object &lt;listcomp&gt; at 0x00000160F71B8FA0, file &quot;ez_py.py&quot;, line 59&gt;:</span><br><span class="line"> 59           0 RESUME                   0</span><br><span class="line">              2 BUILD_LIST               0</span><br><span class="line">              4 LOAD_FAST                0 (.0)</span><br><span class="line">        &gt;&gt;    6 FOR_ITER                50 (to 108)</span><br><span class="line">              8 STORE_FAST               1 (i)</span><br><span class="line">             10 LOAD_GLOBAL              0 (key1)</span><br><span class="line">             22 LOAD_FAST                1 (i)</span><br><span class="line">             24 LOAD_GLOBAL              3 (NULL + len)</span><br><span class="line">             36 LOAD_GLOBAL              0 (key1)</span><br><span class="line">             48 PRECALL                  1</span><br><span class="line">             52 CALL                     1</span><br><span class="line">             62 BINARY_OP                6 (%)</span><br><span class="line">             66 BINARY_SUBSCR</span><br><span class="line">             76 LOAD_GLOBAL              4 (file)</span><br><span class="line">             88 LOAD_FAST                1 (i)</span><br><span class="line">             90 BINARY_SUBSCR</span><br><span class="line">            100 BINARY_OP               12 (^)</span><br><span class="line">            104 LIST_APPEND              2</span><br><span class="line">            106 JUMP_BACKWARD           51 (to 6)</span><br><span class="line">        &gt;&gt;  108 RETURN_VALUE</span><br></pre></td></tr></table></figure><p>逆出逻辑，并将其改为bin2来解密bin2文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line">key1 = <span class="built_in">bytes</span>(md5(<span class="string">b&quot;bin2bin2bin2&quot;</span>).hexdigest().encode())</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;bin2&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line">arr = [key1[i % <span class="built_in">len</span>(key1)] ^ file[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(file))]</span><br><span class="line"><span class="built_in">open</span>(<span class="string">&quot;bin_dump&quot;</span>, <span class="string">&quot;wb&quot;</span>).write(<span class="built_in">bytes</span>(arr))</span><br></pre></td></tr></table></figure><h2 id="解密bin2"><a href="#解密bin2" class="headerlink" title="解密bin2"></a>解密bin2</h2><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230623123050061.png" alt="bin2主逻辑"></p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230623123109217.png" alt="btea函数"></p><p>可以直接写脚本了：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DELTA 0x7937B99E</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MX (((z&gt;&gt;5^y<span class="string">&lt;&lt;2) + (y&gt;</span>&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">btea</span><span class="params">(<span class="type">uint32_t</span>* v, <span class="type">int</span> n, <span class="type">uint32_t</span> <span class="type">const</span> key[<span class="number">4</span>])</span> </span>&#123;</span><br><span class="line">    <span class="type">uint32_t</span> y, z, sum;</span><br><span class="line">    <span class="type">unsigned</span> p, rounds, e;</span><br><span class="line">    rounds = <span class="number">52</span> / n;</span><br><span class="line">    sum = rounds * DELTA;</span><br><span class="line">    y = v[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span> (p = n - <span class="number">1</span>; p &gt; <span class="number">0</span>; p--) &#123;</span><br><span class="line">            z = v[p - <span class="number">1</span>];</span><br><span class="line">            y = v[p] -= MX;</span><br><span class="line">        &#125;</span><br><span class="line">        z = v[n - <span class="number">1</span>];</span><br><span class="line">        y = v[<span class="number">0</span>] -= MX;</span><br><span class="line">    &#125; <span class="keyword">while</span> ((sum -= DELTA) != <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">uint32_t</span> <span class="type">const</span> key[<span class="number">4</span>] = &#123; <span class="number">0x4B5F</span>, <span class="number">0xDEAD</span>, <span class="number">0x11ED</span>, <span class="number">0xB3CC</span> &#125;;</span><br><span class="line">    <span class="type">uint32_t</span> data[<span class="number">11</span>] = &#123; <span class="number">0xCC45699D</span>, <span class="number">0x683D5352</span>,<span class="number">0xB8BB71A0</span>,<span class="number">0xD3817AD</span>,<span class="number">0x7547E79E</span>,<span class="number">0x4BDD8C7C</span>,<span class="number">0x95E25A81</span>,<span class="number">0xC4525103</span>,<span class="number">0x7049B46F</span>,<span class="number">0x5417F77C</span>,<span class="number">0x65567138</span> &#125;;</span><br><span class="line">    <span class="type">uint32_t</span>* sent = data;</span><br><span class="line">    <span class="built_in">btea</span>(sent, <span class="number">11</span>, key);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, sent[i] &amp; <span class="number">0xff</span>);</span><br><span class="line">            sent[i] &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="cap"><a href="#cap" class="headerlink" title="cap"></a>cap</h1><p>主逻辑：程序截图并进行处理保存为cap.bin。</p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230623163326221.png" alt="主逻辑"></p><p>动态调试可得，</p><p>这部分处理bin文件的1-14个字节：</p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230623193403249.png" alt="0-14"></p><p>这部分处理bin文件的15-40个字节：</p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230623194710994.png" alt="15-40"></p><p>这部分处理bin文件的剩余字节，且下标起始于3：</p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230623193603271.png" alt="41-..."></p><h2 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">handle</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">        a[i] ^= ((b &gt;&gt; i * <span class="number">8</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key = [<span class="number">0x65</span>, <span class="number">0x6E</span>, <span class="number">0x63</span>, <span class="number">0x5F</span>, <span class="number">0x62</span>, <span class="number">0x79</span>, <span class="number">0x5F</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x73</span>, <span class="number">0x63</span>, <span class="number">0x74</span>, <span class="number">0x66</span>]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./cap.bin&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data1 = <span class="built_in">bytearray</span>(f.read(<span class="number">14</span>))</span><br><span class="line">    data2 = <span class="built_in">bytearray</span>(f.read(<span class="number">40</span>))</span><br><span class="line">    data3 = <span class="built_in">bytearray</span>(f.read())</span><br><span class="line"><span class="comment"># data1[0] ^= 0x6E</span></span><br><span class="line"><span class="comment"># data1[1] ^= 0x63</span></span><br><span class="line"><span class="comment"># data1[2] ^= 0x5f</span></span><br><span class="line"><span class="comment"># data1[3] ^= 0x62</span></span><br><span class="line"><span class="comment"># data1[4] ^= 0x79</span></span><br><span class="line"><span class="comment"># data1[5] ^= 0x5f</span></span><br><span class="line"><span class="comment"># data1[6] ^= 0x64</span></span><br><span class="line"><span class="comment"># data1[7] ^= 0x61</span></span><br><span class="line"><span class="comment"># data1[8] ^= 0x73</span></span><br><span class="line"><span class="comment"># data1[9] ^= 0x63</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data1)):</span><br><span class="line">    data1[i] ^= key[(i + <span class="number">1</span>) % <span class="number">13</span>]</span><br><span class="line">data2[:<span class="number">4</span>] = handle(data2[:<span class="number">4</span>], <span class="number">0x79625f63</span>)</span><br><span class="line">data2[<span class="number">4</span>:<span class="number">8</span>] = handle(data2[<span class="number">4</span>:<span class="number">8</span>], <span class="number">0x7361645f</span>)</span><br><span class="line">data2[<span class="number">8</span>:<span class="number">12</span>] = handle(data2[<span class="number">8</span>:<span class="number">12</span>], <span class="number">0x65667463</span>)</span><br><span class="line">data2[<span class="number">12</span>:<span class="number">20</span>] = handle(data2[<span class="number">12</span>:<span class="number">20</span>], <span class="number">0x61645f79625f636e</span>)</span><br><span class="line">data2[<span class="number">20</span>:<span class="number">28</span>] = handle(data2[<span class="number">20</span>:<span class="number">28</span>], <span class="number">0x5f636e6566746373</span>)</span><br><span class="line">data2[<span class="number">28</span>:<span class="number">36</span>] = handle(data2[<span class="number">28</span>:<span class="number">36</span>], <span class="number">0x74637361645f7962</span>)</span><br><span class="line">data2[<span class="number">36</span>:<span class="number">40</span>] = handle(data2[<span class="number">36</span>:<span class="number">40</span>], <span class="number">0x636e6566</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data3)):</span><br><span class="line">    data3[i] ^= key[(i + <span class="number">3</span>) % <span class="number">13</span>]</span><br><span class="line"><span class="built_in">print</span>(data1[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag.bmp&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="built_in">bytes</span>(data1 + data2 + data3))</span><br></pre></td></tr></table></figure><h1 id="unsym"><a href="#unsym" class="headerlink" title="unsym"></a>unsym</h1><p>这题还是我有点迷，看wp知晓流程:</p><ol><li>输入密钥</li><li>用RSA解密，n&#x3D;0x1d884d54d21694ccd120f145c8344b729b301e782c69a8f3073325b9c5，e&#x3D;0x10001，分解n，求出d</li><li>结果应该是0xfad53ce897d2c26f8cad910417fbdd1f0f9a18f6c1748faca10299dc8</li><li>将结果当作密钥和IV进行AES CBC模式解密解encrypted.bin</li></ol><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230623232435870.png"></p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230623232502821.png"></p><p><img src="/2023/06/23/DASCTF2023%E4%BA%8C%E8%BF%9B%E5%88%B6/image-20230623232520446.png" alt="result"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵杯2023-wp</title>
      <link href="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/"/>
      <url>/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/</url>
      
        <content type="html"><![CDATA[<h1 id="ez-cpp"><a href="#ez-cpp" class="headerlink" title="ez_cpp"></a>ez_cpp</h1><h2 id="正向逻辑："><a href="#正向逻辑：" class="headerlink" title="正向逻辑："></a>正向逻辑：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_bit</span>(<span class="params">num, bit</span>):</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(bit):</span><br><span class="line">        result |= ((num &gt;&gt; i) &amp; <span class="number">1</span>) &lt;&lt; (bit - i - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">b = <span class="string">&quot;SYC&#123;xxxxxxxxxxxxxxxxxxxxxxxx&#125;&quot;</span></span><br><span class="line">d = []</span><br><span class="line">c = <span class="number">0x1EF035</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">    eax = (c &amp; <span class="number">0xFFFF00</span>) + <span class="built_in">ord</span>(b[i]) - <span class="number">0x3D</span></span><br><span class="line">    <span class="keyword">if</span> eax &amp; <span class="number">0xFF</span> &lt; <span class="number">0x3E</span>:</span><br><span class="line">        v7 = <span class="built_in">ord</span>(b[i]) + <span class="number">13</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">ord</span>(b[i]) &gt; <span class="number">0x5A</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">ord</span>(b[i]) + <span class="number">13</span> &lt;= <span class="number">0x7A</span>:</span><br><span class="line">                d.append(<span class="built_in">ord</span>(b[i]) + <span class="number">13</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                d.append(<span class="built_in">ord</span>(b[i]) - <span class="number">13</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">ord</span>(b[i]) + <span class="number">13</span> &lt;= <span class="number">0x5A</span>:</span><br><span class="line">                d.append(<span class="built_in">ord</span>(b[i]) + <span class="number">13</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                d.append(<span class="built_in">ord</span>(b[i]) - <span class="number">13</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        d.append(<span class="built_in">ord</span>(b[i]))</span><br><span class="line">str2 = []</span><br><span class="line">v6 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">16</span>:</span><br><span class="line">        str2.append(d[i] ^ <span class="number">4</span>)</span><br><span class="line">    <span class="keyword">elif</span> i &lt; <span class="number">16</span>:</span><br><span class="line">        <span class="keyword">if</span> v6[i] == <span class="number">1</span>:</span><br><span class="line">            str2.append(d[i] ^ <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            str2.append(d[i] - <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elif</span> i &gt; <span class="number">16</span>:</span><br><span class="line">        <span class="keyword">if</span> v6[i] == <span class="number">1</span>:</span><br><span class="line">            str2.append(d[i] ^ <span class="number">6</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            str2.append(d[i] - <span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    str2[i] = <span class="number">1</span> ^ (reverse_bit(str2[i], <span class="number">8</span>) + <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;</span>.join(<span class="built_in">hex</span>(i)[<span class="number">2</span>:] + <span class="string">&quot; &quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> str2))</span><br></pre></td></tr></table></figure><h2 id="逆向逻辑"><a href="#逆向逻辑" class="headerlink" title="逆向逻辑"></a>逆向逻辑</h2><p>其中第一个加密用可见字符输入得到可见字符输出来逆，因此可能产生一个字符对应多个，所以筛掉看上去不像的就好了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_bit</span>(<span class="params">num, bit</span>):</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(bit):</span><br><span class="line">        result |= ((num &gt;&gt; i) &amp; <span class="number">1</span>) &lt;&lt; (bit - i - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">v6 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">result = [<span class="number">0x00000022</span>, <span class="number">0xFFFFFFA2</span>, <span class="number">0x00000072</span>, <span class="number">0xFFFFFFE6</span>, <span class="number">0x00000052</span>, <span class="number">0xFFFFFF8C</span>, <span class="number">0xFFFFFFF2</span>, <span class="number">0xFFFFFFD4</span>, <span class="number">0xFFFFFFA6</span>,</span><br><span class="line">          <span class="number">0x0000000A</span>, <span class="number">0x0000003C</span>, <span class="number">0x00000024</span>, <span class="number">0xFFFFFFA6</span>, <span class="number">0xFFFFFF9C</span>, <span class="number">0xFFFFFF86</span>, <span class="number">0x00000024</span>, <span class="number">0x00000042</span>, <span class="number">0xFFFFFFD4</span>,</span><br><span class="line">          <span class="number">0x00000022</span>, <span class="number">0xFFFFFFB6</span>, <span class="number">0x00000014</span>, <span class="number">0x00000042</span>, <span class="number">0xFFFFFFCE</span>, <span class="number">0xFFFFFFAC</span>, <span class="number">0x00000014</span>, <span class="number">0x0000006A</span>, <span class="number">0x0000002C</span>,</span><br><span class="line">          <span class="number">0x0000007C</span>, <span class="number">0xFFFFFFE4</span>, <span class="number">0xFFFFFFE4</span>, <span class="number">0xFFFFFFE4</span>, <span class="number">0x0000001E</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    result[i] = result[i] &amp; <span class="number">0xFF</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    result[i] = reverse_bit((result[i] ^ <span class="number">1</span>) - <span class="number">1</span>, <span class="number">8</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">16</span>:</span><br><span class="line">        result[i] ^= <span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> i &lt; <span class="number">16</span>:</span><br><span class="line">        <span class="keyword">if</span> v6[i] == <span class="number">1</span>:</span><br><span class="line">            result[i] ^= <span class="number">9</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[i] += <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> v6[i] == <span class="number">1</span>:</span><br><span class="line">            result[i] ^= <span class="number">6</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[i] += <span class="number">5</span></span><br><span class="line">flag = []</span><br><span class="line">c1 = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">128</span>)]</span><br><span class="line">c2 = [<span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>, <span class="number">35</span>, <span class="number">36</span>, <span class="number">37</span>, <span class="number">38</span>, <span class="number">39</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">43</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">46</span>, <span class="number">47</span>, <span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">58</span>, <span class="number">59</span>,</span><br><span class="line">      <span class="number">60</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>, <span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">74</span>,</span><br><span class="line">      <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">106</span>, <span class="number">107</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">113</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">118</span>, <span class="number">119</span>, <span class="number">120</span>, <span class="number">121</span>, <span class="number">122</span>, <span class="number">97</span>,</span><br><span class="line">      <span class="number">98</span>, <span class="number">99</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">102</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">106</span>, <span class="number">107</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">123</span>, <span class="number">124</span>, <span class="number">125</span>, <span class="number">126</span>, <span class="number">127</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c2)):</span><br><span class="line">        <span class="keyword">if</span> result[i] == c2[j]:</span><br><span class="line">            flag.append(c1[j])</span><br><span class="line">    flag.append(<span class="built_in">ord</span>(<span class="string">&quot;\n&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;</span>.join(<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> flag))</span><br><span class="line"><span class="comment"># SYC&#123;Y3S-yE5-y0u-S0Ve-Th3-C9P!!!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="其他师傅WP的思路"><a href="#其他师傅WP的思路" class="headerlink" title="其他师傅WP的思路"></a>其他师傅WP的思路</h2><p>具体可看 👉 <a href="https://mp.weixin.qq.com/s?__biz=Mzg4MjcxMTAwMQ==&mid=2247487028&idx=1&sn=4a73d839a64b6c1071c519ed2195aa25&chksm=cf53ce82f8244794da9dd9b9034709ee5e71d8b3931a75fd87ac31d450869f87411054ea3ed9&mpshare=1&scene=23&srcid=0611rfRKf6I8RnGhn24J0TzY&sharer_sharetime=1686452556948&sharer_shareid=6eea79ff6da57fc6752ab0bc570bf392#rd">2023 安洵杯SYCTF writeup by Arr3stY0u</a></p><p>由于整体的加密过程是单个字符的加密，因此可以通过爆破一个个字符来得到flag。</p><p>方法：patch掉部分代码，使<code>exitcode</code>为符合条件的字符数。</p><p>原代码：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611132142148.png" alt="原代码"></p><p>patch后的代码：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611132025951.png" alt="patch后的代码"></p><p>爆破脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">table = string.ascii_letters+string.digits+<span class="string">&#x27;!-&#123;&#125;&#x27;</span></span><br><span class="line">theflag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(theflag) &lt; <span class="number">32</span>:</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> table:</span><br><span class="line">        flag = (theflag+ch).ljust(<span class="number">32</span>, <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">        exitcode = os.system(<span class="string">f&quot;echo <span class="subst">&#123;flag&#125;</span> | ez_cpp.exe 1&gt;&amp;0&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;try: &quot;</span> + theflag + ch + <span class="string">&quot; exitcode:&quot;</span> + <span class="built_in">hex</span>(exitcode))</span><br><span class="line">        <span class="keyword">if</span> exitcode &gt;= <span class="built_in">len</span>(theflag) + <span class="number">1</span>:</span><br><span class="line">            theflag += ch</span><br><span class="line">            <span class="built_in">print</span>(theflag, exitcode)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(theflag + <span class="string">&#x27;not found&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><h1 id="3D-Maze"><a href="#3D-Maze" class="headerlink" title="3D_Maze"></a>3D_Maze</h1><p>了解逻辑，获取迷宫后手动走走（注意：z的顺序是有要求的）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">maze = [</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(maze)):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\nz=&quot;</span>+ <span class="built_in">str</span>(i//<span class="number">100</span>))</span><br><span class="line">    <span class="keyword">match</span> maze[i]:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;*&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> _:</span><br><span class="line">            <span class="built_in">print</span>(maze[i], end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># z=0</span></span><br><span class="line"><span class="comment"># ==1=======</span></span><br><span class="line"><span class="comment"># ==1====1==</span></span><br><span class="line"><span class="comment"># ==1=1111==</span></span><br><span class="line"><span class="comment"># ==1=1=====</span></span><br><span class="line"><span class="comment"># ==1=111111</span></span><br><span class="line"><span class="comment"># ==1=1=====</span></span><br><span class="line"><span class="comment"># ==11111111</span></span><br><span class="line"><span class="comment"># ==5=1=====</span></span><br><span class="line"><span class="comment"># ===*======</span></span><br><span class="line"><span class="comment"># ===1======</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># wddwwdddddD</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># z=1</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># =1111=====</span></span><br><span class="line"><span class="comment"># =1==111111</span></span><br><span class="line"><span class="comment"># =1========</span></span><br><span class="line"><span class="comment"># 11========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># 11111=====</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># dwwwdddsdddddD</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># z=2</span></span><br><span class="line"><span class="comment"># 1=========</span></span><br><span class="line"><span class="comment"># 1=========</span></span><br><span class="line"><span class="comment"># 1==1=1===1</span></span><br><span class="line"><span class="comment"># ==1=1=1=1=</span></span><br><span class="line"><span class="comment"># ==1====1==</span></span><br><span class="line"><span class="comment"># ===1===1==</span></span><br><span class="line"><span class="comment"># ====1==1==</span></span><br><span class="line"><span class="comment"># ==1=1==1==</span></span><br><span class="line"><span class="comment"># ===1===1==</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># wwW</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># z=4</span></span><br><span class="line"><span class="comment"># ========11</span></span><br><span class="line"><span class="comment"># ========1=</span></span><br><span class="line"><span class="comment"># 111111111=</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># assaaaaaaaaA</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># z=3</span></span><br><span class="line"><span class="comment"># ==1=======</span></span><br><span class="line"><span class="comment"># ==1=======</span></span><br><span class="line"><span class="comment"># ==1=11====</span></span><br><span class="line"><span class="comment"># ==11==1===</span></span><br><span class="line"><span class="comment"># ==11======</span></span><br><span class="line"><span class="comment"># ==11======</span></span><br><span class="line"><span class="comment"># ==11==1===</span></span><br><span class="line"><span class="comment"># ==1=11====</span></span><br><span class="line"><span class="comment"># ==1=======</span></span><br><span class="line"><span class="comment"># ==1=======</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># sssssssssS</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># z=5</span></span><br><span class="line"><span class="comment"># ===1======</span></span><br><span class="line"><span class="comment"># ===1======</span></span><br><span class="line"><span class="comment"># ===1======</span></span><br><span class="line"><span class="comment"># ===1======</span></span><br><span class="line"><span class="comment"># ===1======</span></span><br><span class="line"><span class="comment"># ==11======</span></span><br><span class="line"><span class="comment"># ==1=======</span></span><br><span class="line"><span class="comment"># 111=======</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment"># ==========</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># dddwwdwwwwwW</span></span><br><span class="line"><span class="comment"># w</span></span><br><span class="line"><span class="comment"># wddwwdddddDdwwwdddsdddddDwwWassaaaaaaaaAsssssssssSddwwdwwwwwWw</span></span><br></pre></td></tr></table></figure><h1 id="ezr3"><a href="#ezr3" class="headerlink" title="ezr3"></a>ezr3</h1><h2 id="脱壳"><a href="#脱壳" class="headerlink" title="脱壳"></a>脱壳</h2><p>加了壳，但是特征码被覆盖了，改回UPX，然后脱壳：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611140348555.png" alt="特征码1"></p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611140524739.png" alt="特征码2"></p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611140408937.png" alt="特征码3"></p><p>其中 ‘#’ 的数据：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611140504793.png" alt="‘#’ 的数据——来自其他用UPX加壳的ELF"></p><h2 id="程序逻辑"><a href="#程序逻辑" class="headerlink" title="程序逻辑"></a>程序逻辑</h2><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611232914599.png" alt="主逻辑1"></p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611232937745.png" alt="主逻辑2"></p><p>主要函数为<code>v(), p()</code>。</p><p><code>v()</code>：更改一些数据。</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611234030720.png" alt="v函数"></p><p><code>p()</code>：处理输入然后比对。</p><ul><li>处理输入：<ul><li><code>input[i] = (input[i] &gt;&gt; 4) || (input[i] &lt;&lt; 4)</code></li><li><code>input[i] = input[i] ^ input[len(input) - i]</code></li></ul></li></ul><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611234055600.png" alt="p函数"></p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">auth32 = [</span><br><span class="line">    <span class="number">0x0003BC69</span>, <span class="number">0x000D3FA0</span>, <span class="number">0x0003A94A</span>, <span class="number">0x00044AFF</span>, <span class="number">0x00045254</span>, <span class="number">0x0000CDD1</span>,</span><br><span class="line">    <span class="number">0x00001815</span>, <span class="number">0x00003B08</span>, <span class="number">0x00070868</span>, <span class="number">0x000C6560</span>, <span class="number">0x00065662</span>, <span class="number">0x000855C8</span>,</span><br><span class="line">    <span class="number">0x0000DCF6</span>, <span class="number">0x00004CE6</span>, <span class="number">0x0014EEC2</span>, <span class="number">0x0002CFD6</span>, <span class="number">0x00032766</span>, <span class="number">0x0014F6BA</span>,</span><br><span class="line">    <span class="number">0x00025E69</span>, <span class="number">0x0006A9A3</span>, <span class="number">0x00121EBD</span>, <span class="number">0x0005991C</span>, <span class="number">0x00050016</span>, <span class="number">0x00004A3D</span>,</span><br><span class="line">    <span class="number">0x00097485</span>, <span class="number">0x0008D0A0</span>, <span class="number">0x0003B916</span>, <span class="number">0x00054C58</span>, <span class="number">0x00096F94</span>, <span class="number">0x00010334</span>,</span><br><span class="line">    <span class="number">0x000DAD22</span>, <span class="number">0x0004B234</span>, <span class="number">0x0002FE96</span>, <span class="number">0x000F33CC</span>, <span class="number">0x0012C1E8</span>, <span class="number">0x00148F9E</span></span><br><span class="line">]</span><br><span class="line">data32 = [</span><br><span class="line">    <span class="number">0x00000D21</span>, <span class="number">0x00000000</span>, <span class="number">0x0000009D</span>, <span class="number">0x00000000</span>, <span class="number">0x0000094B</span>, <span class="number">0x00000000</span>, <span class="number">0x000003C9</span>, <span class="number">0x00000000</span>, <span class="number">0x00000C3F</span>,</span><br><span class="line">    <span class="number">0x00000000</span>, <span class="number">0x000017E9</span>, <span class="number">0x00000000</span>, <span class="number">0x0000130E</span>, <span class="number">0x00000000</span>, <span class="number">0x00000088</span>, <span class="number">0x00000000</span>, <span class="number">0x00000486</span>, <span class="number">0x00000000</span>,</span><br><span class="line">    <span class="number">0x0000202F</span>, <span class="number">0x00000000</span>, <span class="number">0x00002230</span>, <span class="number">0x00000000</span>, <span class="number">0x000024B4</span>, <span class="number">0x00000000</span>, <span class="number">0x000008B1</span>, <span class="number">0x00000000</span>, <span class="number">0x00000A9F</span>,</span><br><span class="line">    <span class="number">0x00000000</span>, <span class="number">0x00001AD2</span>, <span class="number">0x00000000</span>, <span class="number">0x000023EB</span>, <span class="number">0x00000000</span>, <span class="number">0x00000C7E</span>, <span class="number">0x00000000</span>, <span class="number">0x0000042B</span>, <span class="number">0x00000000</span>,</span><br><span class="line">    <span class="number">0x000005BF</span>, <span class="number">0x00000000</span>, <span class="number">0x0000113C</span>, <span class="number">0x00000000</span>, <span class="number">0x00000449</span>, <span class="number">0x00000000</span>, <span class="number">0x00001751</span>, <span class="number">0x00000000</span>, <span class="number">0x00000ACE</span>,</span><br><span class="line">    <span class="number">0x00000000</span>, <span class="number">0x00001894</span>, <span class="number">0x00000000</span>, <span class="number">0x0000208A</span>, <span class="number">0x00000000</span>, <span class="number">0x00000E82</span>, <span class="number">0x00000000</span>, <span class="number">0x000006BD</span>, <span class="number">0x00000000</span>,</span><br><span class="line">    <span class="number">0x00000CEE</span>, <span class="number">0x00000000</span>, <span class="number">0x00002386</span>, <span class="number">0x00000000</span>, <span class="number">0x000013D4</span>, <span class="number">0x00000000</span>, <span class="number">0x00000111</span>, <span class="number">0x00000000</span>, <span class="number">0x00000D1C</span>,</span><br><span class="line">    <span class="number">0x00000000</span>, <span class="number">0x0000238E</span>, <span class="number">0x00000000</span>, <span class="number">0x00001759</span>, <span class="number">0x00000000</span>, <span class="number">0x0000012B</span>, <span class="number">0x00000000</span>, <span class="number">0x0000214D</span>, <span class="number">0x00000000</span></span><br><span class="line">]</span><br><span class="line">v2 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">        auth32[i * <span class="number">6</span> + j] ^= data32[v2 + <span class="number">12</span> * j]</span><br><span class="line">    v2 += <span class="number">2</span></span><br><span class="line">v2 = <span class="number">0</span></span><br><span class="line">flag = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">        flag.append(auth32[i * <span class="number">6</span> + j] // data32[v2 + j * <span class="number">12</span>])</span><br><span class="line">    v2 += <span class="number">2</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(flag)):</span><br><span class="line">    flag[<span class="built_in">len</span>(flag) - <span class="number">1</span> - i] ^= flag[i]</span><br><span class="line">    flag[<span class="built_in">len</span>(flag) - <span class="number">1</span> - i] = (flag[<span class="built_in">len</span>(flag) - <span class="number">1</span> - i] &gt;&gt; <span class="number">4</span>) | (flag[<span class="built_in">len</span>(flag) - <span class="number">1</span> - i] &lt;&lt; <span class="number">4</span>) &amp; <span class="number">0xFF</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytes</span>(flag))</span><br></pre></td></tr></table></figure><h1 id="snake"><a href="#snake" class="headerlink" title="snake"></a>snake</h1><p>一个贪吃蛇游戏，死后会生成一个flag，只有蛇到361长度生成的flag才是真的flag（比赛的时候一直不知道这题要干嘛），看了其他师傅的wp才知道。</p><h2 id="程序主逻辑"><a href="#程序主逻辑" class="headerlink" title="程序主逻辑"></a>程序主逻辑</h2><p>由于获取flag的过程与游戏关系不大，所以游戏部分逻辑不阐述。</p><p>main函数中，初始化蛇，身子用链表来实现，每节身子有它的位置x、y以及其他信息。</p><p>蛇的身子长度一开始为3，可通过动调得到。</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611151313654.png" alt="初始化蛇"></p><p>获取随机数序列，在之后的果实生成以及加密会用到：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611151725890.png" alt="随机数序列"></p><p>在程序游戏每轮的进行中，都会更新分数以及其它细节：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611152126183.png" alt="游戏更新"></p><p>当蛇吃到果实时，就会进入if语句，最后<code>CxxThrowException</code>抛出一个异常，具体处理在汇编代码处可以看出：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611152426840.png" alt="处理异常"></p><p>抛出异常执行的地方应该是<code>0x401E92</code>处，将前面跳到<code>0x401F92</code>的跳转指令改成跳转至<code>0x401E92</code>处，可以获取反汇编代码：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611181440981.png" alt="蛇吃到果实的处理"></p><ol><li><p>程序更新最后将会被生成md5的数据为目前的蛇的各节点的第五个数据。</p></li><li><p>对数据进行一次RC4加密。</p></li><li><p>倒转蛇节点的数据，即将加密后的<code>will_be_md5</code>反转放入蛇的节点。（<code>dword_C1DEA4</code>的下一个地址就是<code>will_be_md5</code>）</p></li><li><p>新增一个蛇节点<code>node</code>，其<code>node[5]</code>为<code>index_data</code>，同时更新<code>index_data</code>（最开始为0x92）为<code>(index_data - 1) ^ (final_node[5] - 1)</code>，其中final_node为蛇最后一个节点（不包括新增的）。</p></li></ol><p>新的果实的生成：</p><p>由于<code>dowrd_4BDEA4</code>当蛇吃到果实时为0，因此当走果实生成的条件分支时，蛇的位置和果实的位置一定相同，因此会走第一个条件分支：由随机数序列的一个数作为种子来生成果实位置。</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611170551372.png" alt="果实生成"></p><h2 id="RC4-for-data的逻辑"><a href="#RC4-for-data的逻辑" class="headerlink" title="RC4_for_data的逻辑"></a>RC4_for_data的逻辑</h2><p>整体流程就是RC4。</p><p>RC4的key是以蛇的位置作为种子，连续生成的随机数，而由于只有蛇吃到果实才能进入这个函数，因此也是果实的位置。</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611165503791.png" alt="RC4初始化"></p><p>先将RC4加密异或的值存储下来，然后在下面异或数据，异或的处理无论走哪个条件分支都将数据与上面保存的异或数据进行异或。</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611163658407.png" alt="加密"></p><h2 id="flag生成"><a href="#flag生成" class="headerlink" title="flag生成"></a>flag生成</h2><p>获取数据，生成md5：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611164021052.png" alt="flag生成函数"></p><h2 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h2><p>贴一个其他师傅的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ARC4</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">libc = ctypes.CDLL(<span class="string">&quot;ucrtbase.dll&quot;</span>)</span><br><span class="line">libc.srand.argtypes = [ctypes.c_uint]</span><br><span class="line">libc.rand.restype = ctypes.c_int</span><br><span class="line"></span><br><span class="line">srand = libc.srand</span><br><span class="line">rand = libc.rand</span><br><span class="line"></span><br><span class="line">srand(<span class="number">0x94307F97</span>)</span><br><span class="line">seed_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">361</span>):</span><br><span class="line">    seed_list.append(rand())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">enc</span>(<span class="params">buf, size, seed</span>):</span><br><span class="line">    srand(seed)</span><br><span class="line">    keysize = <span class="built_in">int</span>(rand()*<span class="number">1.0</span>/<span class="number">32767.0</span> * <span class="number">256.0</span>)</span><br><span class="line">    table = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\x00&#x27;</span></span><br><span class="line">    pwd = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(keysize):</span><br><span class="line">        idx = <span class="built_in">int</span>(rand()*<span class="number">1.0</span> / <span class="number">32767.0</span> * <span class="number">63.0</span>)</span><br><span class="line">        pwd += table[idx]</span><br><span class="line"></span><br><span class="line">    cipher = ARC4.ARC4Cipher(pwd.encode())</span><br><span class="line">    xorstream = <span class="string">b&#x27;\x00&#x27;</span>*size</span><br><span class="line">    xorstream = cipher.encrypt(xorstream)</span><br><span class="line">    outbuf = <span class="built_in">bytearray</span>(buf)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">        outbuf[i] ^= xorstream[i]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(outbuf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">foods = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">361</span>):</span><br><span class="line">    srand(seed_list[i])</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        y = rand() % <span class="number">20</span></span><br><span class="line">        x = rand() % <span class="number">20</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (x == <span class="number">0</span> <span class="keyword">or</span> x == <span class="number">19</span> <span class="keyword">or</span> y == <span class="number">0</span> <span class="keyword">or</span> y == <span class="number">19</span>):</span><br><span class="line">            <span class="comment"># print(i, y, x)</span></span><br><span class="line">            foods.append((y, x))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tmp = <span class="number">0x92</span></span><br><span class="line"></span><br><span class="line">data = <span class="string">b&#x27;\x02&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">    data += <span class="built_in">bytes</span>([data[-<span class="number">1</span>] ^ <span class="number">0xBE</span>])</span><br><span class="line"><span class="comment"># print(data.hex())</span></span><br><span class="line"></span><br><span class="line">flag_data = data[:]</span><br><span class="line">eat_count = <span class="number">361</span> <span class="comment"># 初始长度就是3, 但是要求吃361个 ???</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(eat_count):</span><br><span class="line">    y, x = foods[i]</span><br><span class="line">    pos = y &lt;&lt; <span class="number">8</span> | x</span><br><span class="line">    data = enc(data, <span class="number">3</span>+i, pos)</span><br><span class="line">    <span class="comment"># print(data.hex())</span></span><br><span class="line"></span><br><span class="line">    _tmp = tmp</span><br><span class="line">    <span class="comment"># print(hex(tmp-1), hex(data[0]-1))</span></span><br><span class="line">    tmp = ((tmp-<span class="number">1</span>) ^ (data[<span class="number">0</span>]-<span class="number">1</span>)) &amp; <span class="number">0xFF</span></span><br><span class="line">    flag_data = data[:]</span><br><span class="line">    data = data[::-<span class="number">1</span>]</span><br><span class="line">    data += <span class="built_in">bytes</span>([_tmp])</span><br><span class="line">    <span class="comment"># print(hex(tmp))</span></span><br><span class="line"></span><br><span class="line">s = flag_data.ljust(<span class="number">361</span>, <span class="string">b&#x27;\x00&#x27;</span>).<span class="built_in">hex</span>().encode()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag_data&#x27;</span>, <span class="built_in">len</span>(flag_data))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;SYC&#123;&#x27;</span>+md5(s[:<span class="number">722</span>]).hexdigest()+<span class="string">&#x27;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="babyThread"><a href="#babyThread" class="headerlink" title="babyThread"></a>babyThread</h1><h2 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h2><p>流程很明显，就是加密和比对，主要是判断生成密钥的字符串是哪一个。</p><p>加密过程：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611200355369.png" alt="加密过程"></p><p>主过程：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611200429997.png" alt="主过程"></p><p>三个密钥（三个只有一个是被用到的）：</p><ol><li><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611200618444.png" alt="第一个密钥"></li><li><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611200531434.png" alt="第二个密钥"></li><li><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611200559786.png" alt="第三个密钥"></li></ol><p>所以直接三个都试一下。</p><h2 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">rc4_init</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span>*key, <span class="type">unsigned</span> <span class="type">long</span> Len, <span class="type">unsigned</span> <span class="type">char</span>*s)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> k[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">s[i] = i;</span><br><span class="line">k[i] = (<span class="type">unsigned</span> <span class="type">char</span>)key[i%Len];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">        j = (j + s[i] + k[i]) % <span class="number">256</span>;</span><br><span class="line">tmp = s[i];</span><br><span class="line">s[i] = s[j];</span><br><span class="line">s[j] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">rc4_crypt</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span>*s, <span class="type">unsigned</span> <span class="type">char</span>*Data, <span class="type">unsigned</span> <span class="type">long</span> Len)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> tmp;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k&lt;Len; k++)</span><br><span class="line">&#123;</span><br><span class="line">i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">j = (j + s[i]) % <span class="number">256</span>;</span><br><span class="line">tmp = s[i];</span><br><span class="line">s[i] = s[j];</span><br><span class="line">s[j] = tmp;</span><br><span class="line">t = (s[i] + s[j]) % <span class="number">256</span>;</span><br><span class="line">Data[k] ^= s[t];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> v8[<span class="number">7</span>];</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, i_ = <span class="number">0</span>, j = <span class="number">0</span>, j_, t;</span><br><span class="line">    <span class="type">int</span> v4, v9;</span><br><span class="line">    <span class="comment">// char Str[100] = &quot;FD,B0?YORg@:*VTCLnY4&quot;;</span></span><br><span class="line">    <span class="comment">// char Str[100] = &quot;D..^!ARBIh@;K:dAU-K`&quot;;</span></span><br><span class="line">    <span class="comment">// char Str[100] = &quot;!This_program_cannot&quot;;</span></span><br><span class="line">    <span class="type">char</span> Str[<span class="number">21</span>];</span><br><span class="line">    FILE * f = fopen(<span class="string">&quot;./babyThread.exe&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    fseek(f, <span class="number">0x4D</span>, <span class="number">0</span>);</span><br><span class="line">    fread(Str, <span class="number">1</span>, <span class="number">0x14</span>, f);</span><br><span class="line">    fclose(f);</span><br><span class="line">    </span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> key[<span class="number">24</span>];</span><br><span class="line">    v8[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    v8[<span class="number">1</span>] = <span class="number">85</span>;</span><br><span class="line">    v8[<span class="number">2</span>] = <span class="number">0x1C39</span>;</span><br><span class="line">    v8[<span class="number">3</span>] = <span class="number">0x95EED</span>;</span><br><span class="line">    v8[<span class="number">4</span>] = <span class="number">0x31C84B1</span>;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>, i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(Str); j += <span class="number">4</span>, i += <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v9 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (t = <span class="number">0</span>; t &lt; <span class="number">5</span>; ++t)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Str[t + i] == <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">                key[t + j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                v9 += v8[<span class="number">4</span> - t] * (Str[t + i] - <span class="number">33</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        key[j + <span class="number">3</span>] = (*((<span class="type">char</span> *)&amp;v9));</span><br><span class="line">        key[j + <span class="number">2</span>] = (*((<span class="type">char</span> *)&amp;v9 + <span class="number">1</span>));</span><br><span class="line">        key[j + <span class="number">1</span>] = (*((<span class="type">char</span> *)&amp;v9 + <span class="number">2</span>));</span><br><span class="line">        key[j] = (*((<span class="type">char</span> *)&amp;v9 + <span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> data[<span class="number">32</span>] = &#123;</span><br><span class="line">        <span class="number">0xDE</span>, <span class="number">0x1C</span>, <span class="number">0x22</span>, <span class="number">0x27</span>, <span class="number">0x1D</span>, <span class="number">0xAE</span>, <span class="number">0xAD</span>, <span class="number">0x65</span>, <span class="number">0xAD</span>, <span class="number">0xEF</span>, </span><br><span class="line">        <span class="number">0x6E</span>, <span class="number">0x41</span>, <span class="number">0x4C</span>, <span class="number">0x34</span>, <span class="number">0x75</span>, <span class="number">0xF1</span>, <span class="number">0x16</span>, <span class="number">0x50</span>, <span class="number">0x50</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0x48</span>, <span class="number">0x69</span>, <span class="number">0x6D</span>, <span class="number">0x93</span>, <span class="number">0x36</span>, <span class="number">0x1C</span>, <span class="number">0x86</span>, <span class="number">0x3B</span>, <span class="number">0xBB</span>, <span class="number">0xD0</span>, </span><br><span class="line">        <span class="number">0x4C</span>, <span class="number">0x91</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">264</span>];</span><br><span class="line">    rc4_init(key, <span class="number">16</span>, s);</span><br><span class="line">    rc4_crypt(s, data, <span class="number">32</span>);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;<span class="number">32</span> ; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="gowhere"><a href="#gowhere" class="headerlink" title="gowhere"></a>gowhere</h1><p>用IDAGolang脚本还原符号、函数名称。</p><p>大概的逻辑是输入30个字符的字符串，进行三轮三个函数加密然后与密文比对。</p><h2 id="函数一逻辑"><a href="#函数一逻辑" class="headerlink" title="函数一逻辑"></a>函数一逻辑</h2><p>逻辑：<code>input = (input + enc1_key) ^ 0x17</code></p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611210036323.png" alt="加密一"></p><p>主要是寻找<code>enc1_key</code>的变化。</p><p><code>enc_key1</code>初始为9。</p><p>每次进入<code>main_enc1()</code>时，<code>enc_key1</code>会加一：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611210240590.png" alt="enc_key1变化"></p><p>每次进入<code>main_enc2()</code>时，<code>enc_key1</code>也会加一：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611210358258.png" alt="enc_key1变化"></p><p>每次进入<code>main_enc3()</code>时，<code>enc_key1</code>也会加一：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611210443173.png" alt="enc_key1变化"></p><h2 id="函数二逻辑"><a href="#函数二逻辑" class="headerlink" title="函数二逻辑"></a>函数二逻辑</h2><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611210608263.png" alt="函数二"></p><h2 id="函数三逻辑"><a href="#函数三逻辑" class="headerlink" title="函数三逻辑"></a>函数三逻辑</h2><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611211829162.png" alt="函数三"></p><h2 id="主逻辑"><a href="#主逻辑" class="headerlink" title="主逻辑"></a>主逻辑</h2><p>三个加密的代码片段都弄懂了，但调用的顺序却没有，程序的具体逻辑我还没有弄懂。</p><p>分别为三个加密的代码片段走过且每次加密只走一次的代码下条件断点，打印一些信息：</p><p><img src="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF2023-wp/image-20230611215638395.png" alt="断点信息"></p><p>可以知晓加密流程：enc1-2-3-2-3-1-2-3-2-3</p><h2 id="脚本-3"><a href="#脚本-3" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dec1</span>(<span class="params">data, key</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">        data[i] = (data[i] ^ <span class="number">0x17</span>) - key</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dec2</span>(<span class="params"><span class="built_in">input</span></span>):</span><br><span class="line">    <span class="built_in">input</span>[<span class="number">0</span>] -= <span class="number">2</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">1</span>] += <span class="number">28</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">2</span>] ^= <span class="number">0x47</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">3</span>] -= <span class="built_in">input</span>[<span class="number">4</span>]</span><br><span class="line">    <span class="built_in">input</span>[<span class="number">5</span>] -= <span class="number">73</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">6</span>] -= <span class="number">12</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">8</span>] ^= <span class="number">0x5A</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">7</span>] += <span class="built_in">input</span>[<span class="number">8</span>]</span><br><span class="line">    <span class="built_in">input</span>[<span class="number">9</span>] ^= <span class="number">0x22</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">10</span>] -= <span class="number">20</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">12</span>] += <span class="number">84</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">13</span>] ^= <span class="number">4</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">14</span>] ^= <span class="number">0x1C</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">17</span>] += <span class="number">1</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">27</span>] ^= <span class="number">0x11</span></span><br><span class="line">    <span class="built_in">input</span>[<span class="number">28</span>] ^= <span class="number">3</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="built_in">input</span>)):</span><br><span class="line">        <span class="built_in">input</span>[i] &amp;= <span class="number">0xff</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">input</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dec3</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data) // <span class="number">2</span>):</span><br><span class="line">        data[i], data[<span class="number">29</span>-i] = data[<span class="number">29</span>-i], data[i]</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = [</span><br><span class="line">    <span class="number">0x4D</span>, <span class="number">0x63</span>, <span class="number">0x5D</span>, <span class="number">0x34</span>, <span class="number">0x43</span>, <span class="number">0x09</span>, <span class="number">0xA2</span>, <span class="number">0x77</span>, <span class="number">0x0A</span>, <span class="number">0xBF</span>,</span><br><span class="line">    <span class="number">0xC9</span>, <span class="number">0xB3</span>, <span class="number">0xE9</span>, <span class="number">0x6F</span>, <span class="number">0x79</span>, <span class="number">0x7D</span>, <span class="number">0x7B</span>, <span class="number">0xE8</span>, <span class="number">0x99</span>, <span class="number">0x90</span>,</span><br><span class="line">    <span class="number">0x43</span>, <span class="number">0x08</span>, <span class="number">0xBB</span>, <span class="number">0x99</span>, <span class="number">0x0E</span>, <span class="number">0x2E</span>, <span class="number">0xD4</span>, <span class="number">0x7B</span>, <span class="number">0x27</span>, <span class="number">0xB7</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">flag = dec3(flag)</span><br><span class="line">flag = dec2(flag)</span><br><span class="line">flag = dec3(flag)</span><br><span class="line">flag = dec2(flag)</span><br><span class="line">flag = dec1(flag, <span class="number">16</span>)</span><br><span class="line">flag = dec3(flag)</span><br><span class="line">flag = dec2(flag)</span><br><span class="line">flag = dec3(flag)</span><br><span class="line">flag = dec2(flag)</span><br><span class="line">flag = dec1(flag, <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;</span>.join(<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> flag))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天堂之门原理</title>
      <link href="/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/"/>
      <url>/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇文章仅为看wp学习到的天堂之门技术做个总结。</p><p>具体学习，看看这些✌：</p><p>👉<a href="http://blog.bluesadi.cn:4000/2021/11/06/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8-Heaven-s-Gate-C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0/">天堂之门 (Heaven’s Gate) C语言实现 | 34r7hm4n’s blog (bluesadi.cn)</a> 👈讲得很细，看完就懂</p><p>👉<a href="http://s0rry.cn/archives/tian-tang-zhi-men-heavensgate#toc-head-2">天堂之门 (Heaven’s Gate) - s0rry’s Blog</a></p><h1 id="WoW64"><a href="#WoW64" class="headerlink" title="WoW64"></a>WoW64</h1><p>WOW64（Windows-On-Windows 64bit）是X64 Windows操作系统的一个子系统，为32位应用程序提供运行环境。类似的还有WOW32子系统，负责在32位Windows系统上运行16位应用程序。</p><p>在64位系统中，32位的应用程序运行在一个WoW64的子系统中，这个子系统为32位程序提供了一个类似沙箱的运行环境。事实上这个32位程序运行的环境也是一个64位的运行环境，系统在创建32位进程时，首先创建一个64位的进程，然后再在其中创建一个32位的子环境。32位程序所调用的系统函数，最终都要通过64位的动态链接库而实现。</p><p>Winodws系统中，CS段寄存器用来标识目前所运行的代码是32位的，还是64位的。</p><p>以一个使用天堂之门的程序为例，其为64位程序。</p><p>一开始为64位模式：</p><p><img src="/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/image-20230510114220317.png" alt="64位程序的CS寄存器"></p><p>切换到32位模式后：</p><p><img src="/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/image-20230510114530659.png" alt="切换到32位模式"></p><h1 id="天堂之门实现"><a href="#天堂之门实现" class="headerlink" title="天堂之门实现"></a>天堂之门实现</h1><h2 id="32位和64位之间的转化"><a href="#32位和64位之间的转化" class="headerlink" title="32位和64位之间的转化"></a>32位和64位之间的转化</h2><p>32位 → 64位：</p><ul><li>将<code>0x33</code>入栈</li><li>将64位指令地址入栈</li><li><code>retf</code> 远返回：先取返回地址，再取<code>0x33</code>作为CS寄存器，因此跳转的地址为<code>0x33:64位指令地址</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">push 0x33</span><br><span class="line">push _next_x64_code</span><br><span class="line">retf</span><br></pre></td></tr></table></figure><p>64位 → 32位：</p><ul><li>将<code>0x23</code>入栈</li><li>将32位指令地址入栈</li><li><code>retfq</code> 远返回：先取返回地址，再取<code>0x23</code>作为CS寄存器，因此跳转的地址为<code>0x23:32位指令地址</code><ul><li><code>retq</code>相当于<code>pop ip; pop cs</code></li><li><code>retfq</code>是按64位进行<code>pop</code>，<code>retf</code>是按32位进行<code>pop</code></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">push 0x23</span><br><span class="line">push _nexr_x86_code</span><br><span class="line">retfq</span><br></pre></td></tr></table></figure><p>其实实现的方式应该并不是那么固定，虽然大差不差，比如举例的程序为64位 → 32位，其流程为：</p><p><img src="/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/image-20230509193351163.png" alt="64FC1628函数"></p><ul><li><code>call $+5</code>：跳到下一条指令，call指令大小为5，同时将<code>0x666C1642</code>地址入栈；<ul><li><img src="/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/image-20230510121041395.png" alt="call $+5"></li></ul></li><li><code>mov [rsp+0xA8-0xA4], 23h</code>：将栈顶32位数据的前八位变成0x23<ul><li><img src="/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/image-20230510121350591.png" alt="更改返回地址的cs"></li></ul></li><li><code>add [rsp+0xA8-0xA8], 0Dh</code>：将栈顶64位数据 +&#x3D; 0x0D，使其retf返回地址指向<code>0x23:0x666C164E</code><ul><li><img src="/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/image-20230510121638859.png" alt="更改返回地址"></li></ul></li><li><code>retf</code>：远返回，该指令会从栈顶取出一个返回地址，再取出一个cs段选择子，这里的CS段变成了0x23，返回地址为<code>0x23:0x666C164E</code>，然后开始以32位模式开始<code>0x666C164E</code>处的指令<ul><li><img src="/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/image-20230510121804080.png" alt="CS更改了"></li></ul></li></ul><p>它32位 → 64位就更差不多了：</p><p>将<code>push 返回地址</code>拆成<code>call + add</code>。</p><p><img src="/2023/05/10/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8%E5%8E%9F%E7%90%86/image-20230510122409063.png" alt="32 → 64"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>实现步骤：</p><ol><li>实现模式的切换</li><li>代码（可以是仅指令代码，也可以是调用相对应位数的函数，但这会麻烦一些）</li><li>切换回原来的模式</li></ol><p>字节码与汇编的转换可以通过<code>keystone</code>和<code>capstone</code>获取。</p><p>这一部分就没有实践了，看看各位✌的代码：</p><p>以下是<a href="http://blog.bluesadi.cn:4000/2021/11/06/%E5%A4%A9%E5%A0%82%E4%B9%8B%E9%97%A8-Heaven-s-Gate-C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0/">32位下可运行的64位memcpy函数</a>：</p><blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">memcpy64</span><span class="params">(<span class="type">uint64_t</span> dst, <span class="type">uint64_t</span> src, <span class="type">uint64_t</span> sz)</span> &#123;</span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> code[] = &#123;</span><br><span class="line"><span class="comment">/*[bits 32]</span></span><br><span class="line"><span class="comment">push 0x33</span></span><br><span class="line"><span class="comment">push _next_x64_code</span></span><br><span class="line"><span class="comment">retf</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="number">0x6A</span>, <span class="number">0x33</span>, <span class="number">0x68</span>, <span class="number">0x78</span>, <span class="number">0x56</span>, <span class="number">0x34</span>, <span class="number">0x12</span>, <span class="number">0xCB</span>,</span><br><span class="line"><span class="comment">/*[bits 64]</span></span><br><span class="line"><span class="comment">push rsi</span></span><br><span class="line"><span class="comment">push rdi</span></span><br><span class="line"><span class="comment">mov rsi, src</span></span><br><span class="line"><span class="comment">mov rdi, dst</span></span><br><span class="line"><span class="comment">mov rcx, sz</span></span><br><span class="line"><span class="comment">rep movsb</span></span><br><span class="line"><span class="comment">pop rsi</span></span><br><span class="line"><span class="comment">pop rdi</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="number">0x56</span>, <span class="number">0x57</span>,</span><br><span class="line"><span class="number">0x48</span>, <span class="number">0xBE</span>, <span class="number">0x88</span>, <span class="number">0x77</span>, <span class="number">0x66</span>, <span class="number">0x55</span>, <span class="number">0x44</span>, <span class="number">0x33</span>, <span class="number">0x22</span>, <span class="number">0x11</span>,</span><br><span class="line"><span class="number">0x48</span>, <span class="number">0xBF</span>, <span class="number">0x88</span>, <span class="number">0x77</span>, <span class="number">0x66</span>, <span class="number">0x55</span>, <span class="number">0x44</span>, <span class="number">0x33</span>, <span class="number">0x22</span>, <span class="number">0x11</span>,</span><br><span class="line"><span class="number">0x48</span>, <span class="number">0xB9</span>, <span class="number">0x88</span>, <span class="number">0x77</span>, <span class="number">0x66</span>, <span class="number">0x55</span>, <span class="number">0x44</span>, <span class="number">0x33</span>, <span class="number">0x22</span>, <span class="number">0x11</span>,</span><br><span class="line"><span class="number">0xF3</span>, <span class="number">0xA4</span>,</span><br><span class="line"><span class="number">0x5E</span>, <span class="number">0x5F</span>,</span><br><span class="line"><span class="comment">/*[bits 64]</span></span><br><span class="line"><span class="comment">push 0x23</span></span><br><span class="line"><span class="comment">push _next_x86_code</span></span><br><span class="line"><span class="comment">retfq</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="number">0x6A</span>, <span class="number">0x23</span>, <span class="number">0x68</span>, <span class="number">0x78</span>, <span class="number">0x56</span>, <span class="number">0x34</span>, <span class="number">0x12</span>, <span class="number">0x48</span>, <span class="number">0xCB</span>,</span><br><span class="line"><span class="comment">/*[bits 32]</span></span><br><span class="line"><span class="comment">ret</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="number">0xC3</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> ptr = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (!ptr) &#123;</span><br><span class="line">ptr = (<span class="type">uint32_t</span>)VirtualAlloc(<span class="literal">NULL</span>, <span class="keyword">sizeof</span>(code), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(code); i++) ((PBYTE)ptr)[i] = code[i];</span><br><span class="line">&#125;</span><br><span class="line">*(<span class="type">uint32_t</span>*)(ptr + <span class="number">3</span>) = ptr + <span class="number">8</span>;</span><br><span class="line">*(<span class="type">uint64_t</span>*)(ptr + <span class="number">12</span>) = src;</span><br><span class="line">*(<span class="type">uint64_t</span>*)(ptr + <span class="number">22</span>) = dst;</span><br><span class="line">*(<span class="type">uint64_t</span>*)(ptr + <span class="number">32</span>) = sz;</span><br><span class="line">*(<span class="type">uint32_t</span>*)(ptr + <span class="number">47</span>) = ptr + <span class="number">53</span>;</span><br><span class="line">((<span class="type">void</span>(*)())ptr)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>d3ctf2023学习</title>
      <link href="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之所以标题为学习，是因为我不会。</p><p>这篇文章仅为看完各位佬的wp之后，照葫芦画瓢跟着做一遍的过程，部分脚本会直接使用各位佬的wp。</p><p>在这次CTF中，我发现我其实并没有系统地学习逆向，从头到尾都是瞎子乱撞，对于各式各样的知识的理解只是流于表面。</p><p>所以啊，还得学，而且还得扎得深点啊。</p><p>各位✌的writeup：</p><p>👉<a href="https://fq6p9pyo5tt.feishu.cn/docx/InUFdQUKdozf8yx5IhGcf5zInSe">2023 AntCTF x D^3CTF 亚军 Writeup By S1uM4in)</a></p><p>👉<a href="https://mp.weixin.qq.com/s?__biz=Mzg4MjcxMTAwMQ==&mid=2247486967&idx=1&sn=ad55ddd11c6bfa17843270625f5f92fc&chksm=cf53cd41f8244457c2db68626c91f2e4564d756b903222f3a913e89f211d475418864c5041bc&mpshare=1&scene=23&srcid=0501bEUrW8ydbpm175TL5FFn&sharer_sharetime=1682949687637&sharer_shareid=6eea79ff6da57fc6752ab0bc570bf392#rd">2023 D^3CTF writeup by 万年三等奖</a></p><p>👉还有个官方的wp，就不放了</p><h1 id="d3syscall"><a href="#d3syscall" class="headerlink" title="d3syscall"></a>d3syscall</h1><p>首先看main，大概逻辑就是输入flag，检测。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507181209469.png" alt="main函数"></p><p>sub_D3F5就是检测函数。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507181232317.png" alt="检测函数sub_D3F5"></p><p>是syscall进行的系统调用，调用的操作由eax的值决定。</p><p>因此需要看syscall的调用有什么。</p><p>来到sub_1830，这里有对数据段取非，并写文件的操作，还有对字符串异或的操作。</p><p>但其实我并不知道为什么程序会来到这里，还是需要系统地学习一下程序执行的流程等知识啊。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507202136815.png" alt="sub_1830"></p><p>对unk_4020数据段的取非操作，可以在动态调试下直接把结果dump出来，看文件头可以知道是一个新的ELF文件。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507181121914.png" alt="取非结果"></p><p>也可以使用生成的文件，路径为<code>/tmp/my_module</code>。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507181136870.png" alt="文件路径"></p><p>在dump文件的init_module函数中，猜测就是更改系统调用表的过程。</p><p>v4的下表对应检测函数每一个syscall的eax取值。</p><blockquote><p>程序首先从<code>/proc/kallsyms</code>中获取了系统调用表的地址，通过参数传递到内核模块中，内核模块里注册了<code>Linux</code>保留的系统调用，分别为：335：MOV，336：ALU，337：PUSH，338：POP，339：resetreg，340：checkflag。</p></blockquote><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507204944395.png" alt="init_module"></p><p>一共更改了五个系统调用。</p><p>MOV调用：</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507205002664.png" alt="MOV"></p><p>PUSH调用：</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507205018345.png" alt="PUSH"></p><p>POP调用：</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507205034902.png" alt="POP"></p><p>resetreg调用：</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507181619340.png" alt="resetreg"></p><p>checkflag调用：</p><p>将v4与处理过后的输入作比较，进行检测。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507204810730.png" alt="checkflag"></p><p>运算操作：</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507205445965.png" alt="AUL_1"></p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507205505877.png" alt="AUL_2"></p><p>知道了调用，现在只需要知道调用的流程就可以了。</p><p>wp里给出了一个十分方便的方法：使用strace。(但其实根据汇编来看也行，但很麻烦)</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507181341809.png" alt="starce"></p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230507181409731.png" alt="流程（未完）"></p><p>将结果部分进行修改，再代入wp中的脚本中可以清楚地看到检测的逻辑：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">bytecode = [</span><br><span class="line">    [<span class="number">0x14f</span>, <span class="number">0x1</span>, <span class="number">0</span>, <span class="number">0x3837363534333231</span>, <span class="number">0</span>, <span class="number">0x5564c32f4027</span>, <span class="number">0x7fd40816fa80</span>],</span><br><span class="line">    [<span class="number">0x14f</span>, <span class="number">0x1</span>, <span class="number">0x1</span>, <span class="number">0x6665646362613039</span>, <span class="number">0</span>, <span class="number">0x5564c32f4027</span>, <span class="number">0x7fd40816fa80</span>],</span><br><span class="line">    [<span class="number">0x151</span>, <span class="number">0</span>, <span class="number">0x1</span>, <span class="number">0x6665646362613039</span>, <span class="number">0</span>, <span class="number">0x5564c32f4027</span>, <span class="number">0x7fd40816fa80</span>],</span><br><span class="line">    ...</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mov</span>(<span class="params">code</span>):</span><br><span class="line">    <span class="keyword">match</span> code[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;mov reg[<span class="subst">&#123;code[<span class="number">2</span>]&#125;</span>],reg[<span class="subst">&#123;code[<span class="number">3</span>]&#125;</span>]&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;mov reg[<span class="subst">&#123;code[<span class="number">2</span>]&#125;</span>],<span class="subst">&#123;<span class="built_in">hex</span>(code[<span class="number">3</span>])&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">alu</span>(<span class="params">code</span>):</span><br><span class="line">    <span class="keyword">match</span> code[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;add reg[<span class="subst">&#123;code[<span class="number">2</span>]&#125;</span>],reg[<span class="subst">&#123;code[<span class="number">3</span>]&#125;</span>]&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;sub reg[<span class="subst">&#123;code[<span class="number">2</span>]&#125;</span>],reg[<span class="subst">&#123;code[<span class="number">3</span>]&#125;</span>]&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;mul reg[<span class="subst">&#123;code[<span class="number">2</span>]&#125;</span>],reg[<span class="subst">&#123;code[<span class="number">3</span>]&#125;</span>]&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;xor reg[<span class="subst">&#123;code[<span class="number">2</span>]&#125;</span>],reg[<span class="subst">&#123;code[<span class="number">3</span>]&#125;</span>]&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;shl reg[<span class="subst">&#123;code[<span class="number">2</span>]&#125;</span>],reg[<span class="subst">&#123;code[<span class="number">3</span>]&#125;</span>]&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;shr reg[<span class="subst">&#123;code[<span class="number">2</span>]&#125;</span>],reg[<span class="subst">&#123;code[<span class="number">3</span>]&#125;</span>]&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">push</span>(<span class="params">code</span>):</span><br><span class="line">    <span class="keyword">match</span> code[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;push reg[<span class="subst">&#123;code[<span class="number">2</span>]&#125;</span>]&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;push <span class="subst">&#123;<span class="built_in">hex</span>(code[<span class="number">2</span>])&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pop</span>(<span class="params">code</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;pop reg[<span class="subst">&#123;code[<span class="number">1</span>]&#125;</span>]&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> bytecode:</span><br><span class="line">    <span class="keyword">match</span> i[<span class="number">0</span>]:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">335</span>:</span><br><span class="line">            mov(i)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">336</span>:</span><br><span class="line">            alu(i)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">337</span>:</span><br><span class="line">            push(i)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">338</span>:</span><br><span class="line">            pop(i)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">339</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;resetreg&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">340</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;checkflag&quot;</span>)</span><br></pre></td></tr></table></figure><p>在对逻辑的代码重新整理得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">input = [32bit] * 6</span><br><span class="line">stack = []</span><br><span class="line">r0 = input[0]</span><br><span class="line">r1 = input[1]</span><br><span class="line">stack.append(r1)</span><br><span class="line">r2 = r0 &lt;&lt; 3 + 0x51e7647e</span><br><span class="line">r3 = r0 * 3 + 0xe0b4140a</span><br><span class="line">r2 = r2 ^ r3</span><br><span class="line">r2 ^= (r0 + 0xe6978f27)</span><br><span class="line">stack.pop()</span><br><span class="line">r1 = r1 + r2</span><br><span class="line">stack.append(r1)</span><br><span class="line">stack.append(r0)</span><br><span class="line">r2 = r1 &lt;&lt; 6 + 0x53a35337</span><br><span class="line">r3 = r1 * 5 + 0x9840294d</span><br><span class="line">r2 = r2 ^ r3</span><br><span class="line">r3 = r1 - 0x5eae4751</span><br><span class="line">r2 = r2 ^ r3</span><br><span class="line">stack.pop(r0)</span><br><span class="line">stack.append(r0 + r2)</span><br><span class="line"></span><br><span class="line">r0 = input[2]</span><br><span class="line">r1 = input[3]</span><br><span class="line">stack.append(0)</span><br><span class="line">r2 = r0 &lt;&lt; 3 + 0x51e7647e</span><br><span class="line">r3 = r0 * 3 + 0xe0b4140a</span><br><span class="line">r2 = r2 ^ r3</span><br><span class="line">r2 ^= (r0 + 0xe6978f27)</span><br><span class="line">stack.pop(r1)</span><br><span class="line">r1 += r2</span><br><span class="line">stack.append(r1)</span><br><span class="line">stack.append(r0)</span><br><span class="line">r2 = r1 &lt;&lt; 6 + 0x53a35337</span><br><span class="line">r3 = r1 * 5 + 0x9840294d</span><br><span class="line">r2 = r2 ^ r3</span><br><span class="line">r2 ^= r1 - 0x5eae4751</span><br><span class="line">stack.pop(r0)</span><br><span class="line">r0 += r2</span><br><span class="line">stack.append(r0)</span><br><span class="line"></span><br><span class="line">r0 = input[4]</span><br><span class="line">r1 = input[5]</span><br><span class="line">stack.append(r1)</span><br><span class="line">r2 = r0 &lt;&lt; 3 + 0x51e7647e</span><br><span class="line">r3 = r0 * 3 + 0xe0b4140a</span><br><span class="line">r2 = r2 ^ r3</span><br><span class="line">r2 ^= r0 + 0xe6978f27</span><br><span class="line">stack.pop(r1)</span><br><span class="line">r1 += r2</span><br><span class="line">stack.append(r1)</span><br><span class="line">stack.append(r0)</span><br><span class="line">r2 = r1 &lt;&lt; 6 + 0x53a35337</span><br><span class="line">r3 = r1 * 5 + 0x9840294d</span><br><span class="line">r2 = r2 ^ r3</span><br><span class="line">r2 ^= r1 - 0x5eae4751</span><br><span class="line">stack.pop(r0)</span><br><span class="line">r0 += r2</span><br><span class="line">stack.append(r0)</span><br></pre></td></tr></table></figure><p>然后就可以写脚本得到flag了。👈官方的wp  (ㄒoㄒ)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">v4 = [<span class="number">0</span>]*<span class="number">7</span></span><br><span class="line">v4[<span class="number">1</span>] = <span class="number">0xB0800699CB89CC89</span></span><br><span class="line">v4[<span class="number">2</span>] = <span class="number">0x4764FD523FA00B19</span></span><br><span class="line">v4[<span class="number">3</span>] = <span class="number">0x396A7E6DF099D700</span></span><br><span class="line">v4[<span class="number">4</span>] = <span class="number">0xB115D56BCDEAF50A</span></span><br><span class="line">v4[<span class="number">5</span>] = <span class="number">0x2521513C985791F4</span></span><br><span class="line">v4[<span class="number">6</span>] = <span class="number">0xB03C06AF93AD0BE</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">7</span>, <span class="number">2</span>):</span><br><span class="line">enc_result = v4[i]</span><br><span class="line">half_1 = v4[i+<span class="number">1</span>] - (((enc_result &lt;&lt; <span class="number">6</span>) + <span class="number">0x53A35337</span>) ^ (enc_result * <span class="number">5</span> +</span><br><span class="line"><span class="number">0x9840294D</span>) ^ (enc_result - <span class="number">0x5EAE4751</span>))</span><br><span class="line">half_1 &amp;= <span class="number">0xffffffffffffffff</span></span><br><span class="line"><span class="built_in">print</span>(half_1.to_bytes(<span class="number">8</span>, <span class="string">&#x27;little&#x27;</span>).decode(), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">half_2 = enc_result - ((((half_1 &lt;&lt; <span class="number">3</span>) + <span class="number">0x51E7647E</span>) ^ ((half_1 * <span class="number">3</span>) +</span><br><span class="line"><span class="number">0x0E0B4140A</span>)) ^ (half_1 + <span class="number">0xE6978F27</span>))</span><br><span class="line">half_2 &amp;= <span class="number">0xffffffffffffffff</span></span><br><span class="line"><span class="built_in">print</span>(half_2.to_bytes(<span class="number">8</span>, <span class="string">&#x27;little&#x27;</span>).decode(), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="comment"># d3ctf&#123;cef9b994-2547-4844-ac0d-a097b75806a0&#125;</span></span><br></pre></td></tr></table></figure><h1 id="d3Hell"><a href="#d3Hell" class="headerlink" title="d3Hell"></a>d3Hell</h1><h2 id="分析dll"><a href="#分析dll" class="headerlink" title="分析dll"></a>分析dll</h2><p>其实，程序与dll的具体关系我还没搞懂，程序在哪里调用的dll我还不清楚，因此跟着wp提示走。</p><p>首先，看DllMain：</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230509193221462.png" alt="DllMain"></p><p>无论程序如何调用，64FC1628函数一定被调用了，因此查看64FC1628：</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230509193351163.png" alt="64FC1628函数"></p><p>经wp提示，这里使用了天堂之门（可以从<code>call $+5;</code>,<code>mov [ ], 23</code>,<code>retf</code>观察出），即：</p><ul><li><p><code>call $+5</code>：跳到下一条指令，call指令大小为5，同时将0x666C1642地址入栈；</p></li><li><p><code>mov [rsp+0xA8-0xA4], 23h</code>：将栈顶16位数据的前八位变成0x23</p></li><li><p><code>add [rsp+0xA8-0xA8], 0Dh</code>：将栈顶16位数据 +&#x3D; 0x0D，使其retf返回地址指向0x666C164E</p></li><li><p><code>retf</code>：远返回，该指令会从栈顶取出一个返回地址，再取出一个cs段选择子，这里的CS段变成了0x23，返回地址为0x666C164E，然后开始以32位模式开始0x666C164E处的指令</p></li></ul><p>具体了解天堂之门，看这位✌ [天堂之门 (Heaven’s Gate) C语言实现</p><p>这段32位的指令具体多长目前还不确定，所以先都dump下来，让capstone翻译成32位指令。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230509195823808.png" alt="32位指令"></p><p>很明显，前一部分的代码是在异或<code>0x666c169a - 0x666c18ea</code>这部分，</p><p>因此，手动异或后再翻译：</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230509201456498.png" alt="异或后的32位指令"></p><p><code>0x666c169a - 0x666c16a5</code>的代码是回到64位模式，因此将之后的部分用64位解释。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230509201924211.png" alt="结果指令"></p><p>为了方便分析，将以上的处理在ida写脚本处理，然后nop掉异或数据以及模式转换部分的代码。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230509202310847.png" alt="61FC1628函数逻辑"></p><p>彻底得到函数逻辑了，但<code>61FC1602()</code>这个函数分析起来好麻烦（感觉是一个将数转化为十进制字符串的过程），所以动态获取flag结果：698740305822331500978964939673142241。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230509202501985.png" alt="flag结果"></p><p>注意：</p><ol><li><p>这个flag结果将放在exe的<code>0x405020</code>。</p></li><li><p><code>61FC1628()</code>有检查4,202,264 &#x3D; 0x401f18 地址部分的数据，因此如果要修改Sleep代码，则需要修改下dll。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230509203924821.png" alt="0x401f18地址部分代码"></p></li></ol><h2 id="分析exe"><a href="#分析exe" class="headerlink" title="分析exe"></a>分析exe</h2><p>这个程序光是看着就头大，所以就从dll获取的flag调小，去看看每个函数的大概作用。</p><p>这里将flag调为 0x1ED &#x3D; 17 * 29，然后一个个函数大概看看结果啥的。</p><p>因此，大概逻辑就是将flag分解为两个约数，然后都输出十进制数出来。👈这些是wp中说的，我还没分析出来呢</p><p>（具体分析看看有没时间吧  (ㄒoㄒ））</p><p>根据wp，可以跳过最耗费时间的<code>401E64</code>（应该是求约数的函数）然后将xmm0寄存器改为flag的两个约数之一。</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230510102958001.png" alt="更改xmm0寄存器"></p><p>得到flag：</p><p><img src="/2023/05/07/d3ctf2023%E5%AD%A6%E4%B9%A0/image-20230510103101324.png" alt="flag"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>与程序交互的问题</title>
      <link href="/2023/04/05/%E4%B8%8E%E7%A8%8B%E5%BA%8F%E4%BA%A4%E4%BA%92%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2023/04/05/%E4%B8%8E%E7%A8%8B%E5%BA%8F%E4%BA%A4%E4%BA%92%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个问题是在做逆向时碰到的，就是一个猜数字的游戏，要猜对一百轮，这时，我的第一个想法是写一个自动与程序交互的脚本，于是就开始网上找有没有类似的脚本或方法了。</p><p>首先，要说明的是我并没有做出来关于这个猜数字程序的自动交互脚本，因为在这过程中遇到了个问题，这在下面讲述，所以我的方法只是面向一个简单的test程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s hello&quot;</span>, str);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello %s\n&quot;</span>, str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其次，我只是对我的方法进行一个叙述，说实话，这个方法很臭，我是真的想不出来好的方法了T_T T_T T_T</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用python的subprocess模块，</p><p>如果将程序输入输出导入subprocess模块的PIPE，即：</p><p><code>p = subprocess.Popen(&quot;test_fflush.exe&quot;, stdin=subprocess.PIPE, stdout=subprocess.PIPE, shell=True, bufsize=0)</code></p><p>之后读取程序输出时使用<code>readline()</code>会堵塞程序的进行。</p><p>如果将程序的输出导入标准输出，然后使用终端运行该脚本，即：</p><p><code>p = subprocess.Popen(&quot;test_fflush.exe&quot;, stdin=subprocess.PIPE, stdout=sys.stdout, shell=True, bufsize=0)</code></p><p>标准输出直接返回到终端上了，我看到但无法在程序中获取。</p><p>如果将程序的输出导入到文件中，同时写入文件时的缓冲区也为0，即：</p><p><code>with open(&#39;file.txt&#39;, &#39;wb+&#39;, buffering=0) as f:</code></p><p><code>p = subprocess.Popen(&quot;test_fflush.exe&quot;, stdin=subprocess.PIPE, stdout=f, shell=True, bufsize=0)</code></p><p>（以下其实并不完全确定是否正确）如果程序具有缓冲区，那程序的输出也无法直接实时地推到文件中，我就无法在程序中读取文件获取程序输出了。在这种情况下，如果程序的缓冲区为0，即每次输出后有<code>fflush()</code>的话，就可以通过执行system命令读取文件内容实时获取输出。</p><p>简而言之就是，单纯交互的方法做不出来。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>本来想叫这部分内容为解决方法的，但这其实并不能称之为解决方法，毕竟要解决的是与自己写的一个简单的test程序进行交互。</p><p>所以，现在碰到的问题是什么？是无法在脚本执行过程中获取程序的输出。</p><p>在第三种情况：把输出导入到文件中，因为程序的输出在缓冲区没有刷新，文件里没有内容，所以获取不了输出。</p><p>正道走不了就走偏一点。</p><p>因此，想到的第一个方法DLL注入：让程序执行一次<code>setvbuf()</code>，使缓冲区为0。</p><p>好消息：注入成功了；坏消息：没用。</p><p>按理来说是可以的，但我并不清楚为啥不成功。</p><p>然后，想到的第二个方法是IAT hook：每次程序执行完一次输出，就执行<code>fflush()</code>，刷新缓冲区。</p><p>这里要说明的是，我现在要解决的是我的test程序，里面的输出都是由<code>printf()</code>来完成的，所以我清楚我需要直接hook <code>printf()</code>函数，这其实也是这个思路的一个局限，我不一定知道程序的输出采用哪一个输出函数。</p><p>结果同样不行。</p><p>最后，想到的第三个方法是，既然我都实现了IAT hook了，那我直接在我自己写的<code>printf()</code>中获取<code>printf()</code>的参数，然后直接将其写入一个文件中，这样我的脚本就可以读取文件的内容获取每一次输出的内容了。</p><p>结果是这个方法成功了，但麻烦无比。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="自己的printf-函数"><a href="#自己的printf-函数" class="headerlink" title="自己的printf()函数"></a>自己的<code>printf()</code>函数</h4><p>重写了的<code>printf()</code>函数其实并不美丽，我只是简单写了一下。</p><p>实际上的<code>printf()</code>函数使用的是可变参数来获取其后面的参数，然后根据第一个参数格式字符串来解析后面变量的类型。</p><p>这里，我采用同样的思路，只是解析写得简单了很多，然后使用可变参数获取后面的参数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">MyPrintf</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* formatOri, ...)</span></span><br><span class="line">&#123;</span><br><span class="line">FILE* f = fopen(<span class="string">&quot;output.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (g_OldPfnMsgA != nullptr)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title function_">format</span><span class="params">(formatOri)</span>;</span><br><span class="line"><span class="type">size_t</span> pos = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> parmNum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> parmType[<span class="number">25</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">while</span> ((pos = format.find(<span class="string">&#x27;%&#x27;</span>, pos)) != <span class="built_in">std</span>::<span class="built_in">string</span>::npos) &#123;</span><br><span class="line"><span class="type">char</span> type = format[pos + <span class="number">1</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> type_name;</span><br><span class="line"><span class="keyword">switch</span> (type) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">parmType[parmNum] = <span class="number">0</span>;</span><br><span class="line">pos += <span class="number">2</span>;</span><br><span class="line">parmNum++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">parmType[parmNum] = <span class="number">1</span>;</span><br><span class="line">pos += <span class="number">2</span>;</span><br><span class="line">parmNum++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">parmType[parmNum] = <span class="number">2</span>;</span><br><span class="line">pos += <span class="number">2</span>;</span><br><span class="line">parmNum++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">va_list ap;</span><br><span class="line">        <span class="comment">// va_start的第二个参数得是printf的第一个参数，否则找不到后续参数的地址</span></span><br><span class="line">va_start(ap, formatOri);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">fputs</span>(formatOri, f);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; parmNum; i++) &#123;</span><br><span class="line"><span class="keyword">switch</span> (parmType[i]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">fprintf</span>(f, <span class="string">&quot;%s\n&quot;</span>, va_arg(ap, <span class="type">char</span>*));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">fprintf</span>(f, <span class="string">&quot;%d\n&quot;</span>, va_arg(ap, <span class="type">int</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">fprintf</span>(f, <span class="string">&quot;%c\n&quot;</span>, va_arg(ap, <span class="type">char</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fclose(f);</span><br><span class="line">va_end(ap);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;真的进去了！！！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="交互脚本"><a href="#交互脚本" class="headerlink" title="交互脚本"></a>交互脚本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">p = subprocess.Popen(<span class="string">&quot;test.exe&quot;</span>, stdin=subprocess.PIPE,</span><br><span class="line">                     stdout=subprocess.PIPE, stderr=sys.stderr, shell=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">while</span> p.poll() <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    out = <span class="built_in">open</span>(<span class="string">&quot;output.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(out.readlines())</span><br><span class="line">    out.close()</span><br><span class="line">    p.stdin.write((<span class="built_in">input</span>() + <span class="string">&#x27;\n&#x27;</span>).encode())</span><br><span class="line">    p.stdin.flush()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 杂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态规划</title>
      <link href="/2023/04/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
      <url>/2023/04/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>以下只是碰到问题的解决方法，顺便对学习到的算法记录一些笔记，并非彻底地讲解动态规划算法</p><h1 id="问题叙述"><a href="#问题叙述" class="headerlink" title="问题叙述"></a>问题叙述</h1><p>以下代码只是对问题的一个简要的描述，实际上十六个数组的元素都不为0。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">0</span>] * <span class="number">16</span></span><br><span class="line">b, c, d, e, f, g, h, i, j, k, l, m, n, o, p = [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, </span><br><span class="line">[[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, </span><br><span class="line">[[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, </span><br><span class="line">[[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, [[<span class="number">0</span>] * <span class="number">16</span>] * <span class="number">16</span>, </span><br><span class="line">arrays = [b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]</span><br><span class="line">result = <span class="number">1</span></span><br><span class="line">index_r = randon.randomint(<span class="number">0</span>, <span class="number">15</span>)</span><br><span class="line">result *= a[index_r]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">index_c = randon.randomint(<span class="number">0</span>, <span class="number">15</span>)</span><br><span class="line">result *= arrays[i][index_r][index_c]</span><br><span class="line">index_r = index_c</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>可以看出，这段代码通过十六次的随机选择生成一个result，现在需要将这个result最小化，即求出result的最小值。</p><h1 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h1><p>对于一个不懂算法的人，第一想法肯定是穷举，但复杂度为$16^16$，明显无法解决。</p><p>第二个想法是贪心算法，即每一次选择就选择最小的那一个数，但这无法达到全局最优解。</p><p>最后的方法就是动态规划了。</p><h2 id="动态规划算法思想"><a href="#动态规划算法思想" class="headerlink" title="动态规划算法思想"></a>动态规划算法思想</h2><blockquote><p>A * “1+1+1+1+1+1+1+1 &#x3D;？” *</p><p>A : “上面等式的值是多少”<br>B : <em>计算</em> “8!”</p><p>A *在上面等式的左边写上 “1+” *<br>A : “此时等式的值为多少”<br>B : <em>quickly</em> “9!”<br>A : “你怎么这么快就知道答案了”<br>A : “只要在8的基础上加1就行了”<br>A : “所以你不用重新计算因为你记住了第一个等式的值为8!</p><p>动态规划算法也可以说是 ‘记住求过的解来节省时间’”</p></blockquote><p>简单来说，动态规划其实就是，给定一个问题，我们把它拆成一个个子问题，直到子问题可以直接解决。然后呢，把子问题答案保存起来，以减少重复计算。再根据子问题答案反推，得出原问题解的一种方法。</p><p>对于斐波拉契数列，求F(n)时，使用动态规划算法有两种方式：①自顶向下的备忘录法；②自底向上。</p><p>自顶向下的备忘录法就是每次计算出F(a) (a &lt; n)时，记录下F(a)，如此就不需要每次计算F(b)，F(b+1)时重复计算F(b)和F(b-1)了。</p><p>自底向上的方法就是从F(1)出发，以此计算F(2)、F(3)、F(4)……如此，一直计算到F(n)。</p><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>那对于上面的问题应该怎么解决呢？</p><p>先简化一下问题，现在面对的是一个1×3的数组和两个3×3的数组：</p><p><img src="/2023/04/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20230405145317757.png" alt="简化问题"></p><p>选中a的一个元素，与b中对应的元素相乘，得到结果result1：（按照规则：a中的列要对应b中的行）</p><p><img src="/2023/04/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20230405145420183.png" alt="result1"></p><p>显然，到b为止，最小值为10。</p><p>选中result1的一个元素，与c中对应的元素相乘，得到结果result2：（按照规则：result1中的列要对应c中的行，因为result1的每一个元素的位置与相乘的b的元素的位置相同）。先考虑result1[i][0]×c[0][i]:</p><p><img src="/2023/04/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20230405145626564.png" alt="result1(i)(0)×c(0)(i)"></p><p>因为result[i][0]中result[1][0]是最小的，因此对于result1[i][0]×c[0][i]的每一列来说，最小值都是第二行的值。</p><p>而当还要往后计算d时，result1的位置信息是无用的，只需要知道得到该结果所相乘的c的元素的位置信息。</p><p>因此，只需知道result1[1][0]×c[0][i]。</p><p>即：使用result的每一列的最小值乘以下一个数组的对应行的每一个元素，得到下一个result数组。</p><p><img src="/2023/04/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20230405145718352.png" alt="result2"></p><p>运用类似的思想去更新result数组，这个result数组其实就是每一层的dp，dp的最后一层的最小值就是我们所要求最小值。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step是所有16×16的二维数组，step0是1×16的一维数组</span></span><br><span class="line">n = <span class="built_in">len</span>(step)</span><br><span class="line">dp = [[[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>)]</span><br><span class="line"><span class="comment"># prev的目的：获取最小值的每一轮选择</span></span><br><span class="line">prev = [[[<span class="literal">None</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        dp[<span class="number">0</span>][i][j] = step0[i] * step1[i][j]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">15</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        min_val_col = <span class="number">100</span></span><br><span class="line">        row_of_min_val = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            <span class="comment"># 遍历第n-1层的dp第i列的最小值</span></span><br><span class="line">            <span class="keyword">if</span> dp[n-<span class="number">1</span>][m][i] &lt; min_val_col:</span><br><span class="line">                min_val_col = dp[n-<span class="number">1</span>][m][i]</span><br><span class="line">                row_of_min_val = m</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            <span class="comment"># 第n个表完全与第n-1个表有关， 可以与第n-2个表有关、但可以看作无关</span></span><br><span class="line">            dp[n][i][j] = min_val_col * step[n][i][j]</span><br><span class="line">            prev[n][i][j] = row_of_min_val</span><br><span class="line">            <span class="comment"># pre记录了第n层[i][j]位置来自于第n-1层的哪一行，由于第n-1层的列决定了第n层的行，因此又可以通过i来确定第n-1层的列</span></span><br><span class="line"></span><br><span class="line">min_val_ans = <span class="number">100</span></span><br><span class="line">min_i = <span class="literal">None</span></span><br><span class="line">min_j = <span class="literal">None</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        <span class="keyword">if</span> min_val_ans &gt; dp[<span class="number">14</span>][i][j]:</span><br><span class="line">            min_val_ans = dp[<span class="number">14</span>][i][j]</span><br><span class="line">            min_i = i</span><br><span class="line">            min_j = j</span><br><span class="line"></span><br><span class="line">path = [(<span class="number">14</span>, min_i, min_j)]</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">14</span>, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">    i, j = path[-<span class="number">1</span>][<span class="number">1</span>], path[-<span class="number">1</span>][<span class="number">2</span>]</span><br><span class="line">    m = prev[n][i][j]  </span><br><span class="line">    <span class="comment"># m是第n层来自于第n-1层的那一行</span></span><br><span class="line">    path.append((n-<span class="number">1</span>, m, i))</span><br><span class="line">path.reverse()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QExtend-300</title>
      <link href="/2023/03/23/QExtend/"/>
      <url>/2023/03/23/QExtend/</url>
      
        <content type="html"><![CDATA[<h1 id="QExtend——XCTF"><a href="#QExtend——XCTF" class="headerlink" title="QExtend——XCTF"></a>QExtend——XCTF</h1><h2 id="函数主逻辑"><a href="#函数主逻辑" class="headerlink" title="函数主逻辑"></a>函数主逻辑</h2><p><img src="/2023/03/23/QExtend/image-20230323103139408.png" alt="主逻辑"></p><p>开始函数的逻辑，标记的一行为将输入的第四位和最后一位都变成0，即去掉flag中的{}，然后比较前四位是否位ZCTF，最后再使用flag中{}中的字符串。</p><h2 id="sub-4026D0函数"><a href="#sub-4026D0函数" class="headerlink" title="sub_4026D0函数"></a>sub_4026D0函数</h2><p>进入<code>loc_4026D0</code>可以看到，这其实应该是一个函数，但被数据断开了，但经过不更改代码的调试发现<code>0x4026E5</code>的数据在之后会被用到，因此如果要程序正常执行就不能直接使用nop将其覆盖。</p><p><img src="/2023/03/23/QExtend/image-20230323103226099.png" alt="sub_4026D0汇编代码"></p><p>先忽略这个数据，使用nop覆盖。</p><p><img src="/2023/03/23/QExtend/image-20230323103259763.png" alt="nop后的汇编代码"></p><p>获得<code>sub_4026D0</code>函数的主要逻辑。</p><p><img src="/2023/03/23/QExtend/image-20230323103310285.png" alt="sub_4026D0函数主要逻辑"></p><p>再进入switch的各个case的函数中看一下。</p><p><img src="/2023/03/23/QExtend/image-20230323103322567.png" alt="sub_4026D0函数的case0中的函数"></p><p>这里被标记的行有将函数返回地址进行加一的操作，可以将其nop掉，因为函数返回地址处的指令没有啥作用。</p><h3 id="回看被nop的数据"><a href="#回看被nop的数据" class="headerlink" title="回看被nop的数据"></a>回看被nop的数据</h3><p><img src="/2023/03/23/QExtend/image-20230323103357350.png" alt="hanoi数据"></p><p>此处的call会将函数返回地址压入栈中，而返回地址<code>0x4026E5</code>就是数据的地址，通过这种方法，当跳入<code>sub_4026F5</code>函数时，使用pop就可以获得数据的地址，然后继续下方的指令。</p><p><code>sub_4026F5</code>函数没有<code>push ebp；mov ebp esp；</code>环节因此，第一个出栈的就是函数返回地址。</p><p><img src="/2023/03/23/QExtend/v2-039d97b92f66e84801938c0e4b63e7cf_720w.png" alt="调用函数时的栈情况"></p><p>此处将数据的地址pop到esi中，而且还使用<code>mov [ebp-0Ch]，esi;</code>将数据地址复制到一个参数上。esi到switch的各case的函数中之前都没有更改，因此各case中的函数直接使用esi来获取数据。</p><p><img src="/2023/03/23/QExtend/image-20230323103444426.png" alt="获取数据"></p><p>图中esi的位置就是指向数据的地址，函数直接使用。</p><h3 id="switch各case中的函数的逻辑。"><a href="#switch各case中的函数的逻辑。" class="headerlink" title="switch各case中的函数的逻辑。"></a>switch各case中的函数的逻辑。</h3><p>因为这里看了别的师傅的wp，因此知道这是一个hanoi游戏。</p><p><img src="/2023/03/23/QExtend/image-20230323114812681.png" alt="case中函数的逻辑"></p><p>其他case中的函数，大差不差。</p><p>6个case分别对应这hanoi游戏中三列的互相移动。</p><p>switch存在与0xF相与再减一的操作（看汇编或者未nop的程序逻辑）。</p><p><img src="/2023/03/23/QExtend/image-20230323103751307.png" alt="switch"></p><p>看if中的函数sub_402490，这是检查每一步操作是否符合hanoi规则的。</p><p><img src="/2023/03/23/QExtend/image-20230323103644727.png" alt="检验函数"></p><h3 id="sub-4026F5的返回值。"><a href="#sub-4026F5的返回值。" class="headerlink" title="sub_4026F5的返回值。"></a>sub_4026F5的返回值。</h3><p><img src="/2023/03/23/QExtend/image-20230323103821747.png" alt="返回值"></p><p>对比汇编和伪代码。可以看出a2就是[ebp-0Ch]，上面说过这是某数据的地址，这里获取了数据的第5、6、7、8、9位，再将它们进行&amp;&amp;运算，将结果作为返回值。</p><p><img src="/2023/03/23/QExtend/image-20230323103835935.png" alt="返回值"></p><h2 id="sub-402800函数。"><a href="#sub-402800函数。" class="headerlink" title="sub_402800函数。"></a>sub_402800函数。</h2><p><img src="/2023/03/23/QExtend/image-20230323101337439.png" alt="汇编代码"></p><p>可以看出它与下方的<code>sub_40282E</code>其实应该是连在一起的。</p><p>现在看着汇编进行分析。</p><p><img src="/2023/03/23/QExtend/image-20230323101536470.png" alt="堆调用"></p><p>当程序执行<code>sub_40282E</code>时，<code>sub_40282E</code>函数没有进行正常的调节栈顶栈底操作，而是<code>pop esi;</code>，这将函数返回地址给pop出来了，程序将其放置在<code>[ebp-4]</code>中，这在程序之后会用到。</p><p><img src="/2023/03/23/QExtend/image-20230323101900462.png" alt="函数返回处"></p><p>在看到<code>sub_40282E</code>的最后，它进行了调节栈顶栈底的操作，但函数开始时并没有其对应的操作，因此在这里它调节的是<code>sub_40282E</code>的上一级函数<code>sub_402800</code>函数的堆栈，它将堆栈还原成<code>start</code>函数（即程序主逻辑函数）调用<code>sub_402800</code>函数时的堆栈，而此时栈顶的值是<code>sub_402800</code>函数的返回地址。</p><p>程序通过这样子的逻辑跳过了调用<code>sub_40282E</code>函数需要再返回调用处的流程。</p><p><img src="/2023/03/23/QExtend/image-20230323102432094.png" alt="md5数据"></p><p>上面说了这一部分是程序之后流程需要的数据，所以如果要想不干扰程序正常流程就不能改变它，但在这里为了获取伪代码，先将他nop掉，将<code>sub_402800</code>和<code>sub_40282E</code>连起来。</p><p><img src="/2023/03/23/QExtend/image-20230323102827971.png" alt="具体逻辑"></p><p>观察未nop的程序汇编就可以发现比较的字符串string1就是之前<code>sub_40282E</code>返回地址的那部分数据。</p><p><img src="/2023/03/23/QExtend/image-20230323103042610.png" alt="获取的数据"></p><h2 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h2><h3 id="程序逻辑"><a href="#程序逻辑" class="headerlink" title="程序逻辑"></a>程序逻辑</h3><p>获取用户输入，将{}中的内容提取出来；</p><p>根据输入，进行hanoi游戏，将每一块从大到小放置在第二列上；</p><p>将输入生成md5，进行比较；</p><p>hanoi初始状态和需要达到的状态：</p><p><img src="/2023/03/23/QExtend/image-20230323105523254.png" alt="数据形式"></p><p>手动玩一下，得到流程：053254104123104524104，也可以找个脚本跑一下。</p><p>因为程序在switch时进行了与0xF相与再减一的操作，因此满足条件的字符串有很多，但最后需要字符串的md5与上面数据相同，即：<code>0x30, 0x46, 0x32, 0x45, 0x37, 0x45, 0x34, 0x34, 0x37, 0x35,0x39, 0x33, 0x45, 0x43, 0x39, 0x41, 0x46, 0x33, 0x34, 0x36, 0x33, 0x45, 0x39, 0x43, 0x38, 0x37, 0x34, 0x35, 0x42, 0x38, 0x39 , 0x32</code>。</p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">oper = <span class="string">&quot;053254104123104524104&quot;</span></span><br><span class="line">oper = [<span class="built_in">int</span>(i) + <span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> oper]</span><br><span class="line"><span class="comment"># 六种输入char对应六种case方法</span></span><br><span class="line"><span class="comment"># oper是符合条件输入的低位</span></span><br><span class="line"><span class="comment"># 符合条件的输入 为 oper 补足 它的高位</span></span><br><span class="line">high_bit = [<span class="number">0x20</span>, <span class="number">0x30</span>, <span class="number">0x40</span>, <span class="number">0x50</span>, <span class="number">0x60</span>, <span class="number">0x70</span>]</span><br><span class="line">final = [</span><br><span class="line">    <span class="number">0x30</span>, <span class="number">0x46</span>, <span class="number">0x32</span>, <span class="number">0x45</span>, <span class="number">0x37</span>, <span class="number">0x45</span>, <span class="number">0x34</span>, <span class="number">0x34</span>, <span class="number">0x37</span>, <span class="number">0x35</span>,</span><br><span class="line">    <span class="number">0x39</span>, <span class="number">0x33</span>, <span class="number">0x45</span>, <span class="number">0x43</span>, <span class="number">0x39</span>, <span class="number">0x41</span>, <span class="number">0x46</span>, <span class="number">0x33</span>, <span class="number">0x34</span>, <span class="number">0x36</span>,</span><br><span class="line">    <span class="number">0x33</span>, <span class="number">0x45</span>, <span class="number">0x39</span>, <span class="number">0x43</span>, <span class="number">0x38</span>, <span class="number">0x37</span>, <span class="number">0x34</span>, <span class="number">0x35</span>, <span class="number">0x42</span>, <span class="number">0x38</span>,</span><br><span class="line">    <span class="number">0x39</span>, <span class="number">0x32</span></span><br><span class="line">]</span><br><span class="line">final_s = <span class="string">&quot;&quot;</span>.join(<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> final)</span><br><span class="line">final_s = final_s.lower()</span><br><span class="line"><span class="built_in">print</span>(final_s)</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> high_bit:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> high_bit:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> high_bit:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> high_bit:</span><br><span class="line">                <span class="keyword">for</span> e <span class="keyword">in</span> high_bit:</span><br><span class="line">                    <span class="keyword">for</span> f <span class="keyword">in</span> high_bit:</span><br><span class="line">                        now_oper = []</span><br><span class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> oper:</span><br><span class="line">                            <span class="keyword">match</span> i:</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                    now_oper.append(i + a)</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                    now_oper.append(i + b)</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                                    now_oper.append(i + c)</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                                    now_oper.append(i + d)</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                                    now_oper.append(i + e)</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                                    now_oper.append(i + f)</span><br><span class="line">                        now_str = <span class="string">&quot;&quot;</span>.join(<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> now_oper)</span><br><span class="line">                        md5 = hashlib.md5(now_str.encode())</span><br><span class="line">                        result = md5.hexdigest()</span><br><span class="line">                        <span class="keyword">if</span> result == final_s:</span><br><span class="line">                            <span class="built_in">print</span>(now_str)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCU2022新生赛</title>
      <link href="/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/"/>
      <url>/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="SCU2022新生赛"><a href="#SCU2022新生赛" class="headerlink" title="SCU2022新生赛"></a>SCU2022新生赛</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p><img src="/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/image-20221118153813903.png" alt="签到"></p><h1 id="Tower-of-Hanoi"><a href="#Tower-of-Hanoi" class="headerlink" title="Tower_of_Hanoi"></a>Tower_of_Hanoi</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x[<span class="number">35</span>]=&#123;</span><br><span class="line"><span class="number">0x1BF21</span>, <span class="number">0x1BF31</span>, <span class="number">0x1BF27</span>, <span class="number">0x1BF31</span>, <span class="number">0x1BF26</span>, <span class="number">0x1BF34</span>, <span class="number">0x1BF29</span>,</span><br><span class="line"> <span class="number">0x1BF20</span>, <span class="number">0x1BF37</span>, <span class="number">0x1BF24</span>, <span class="number">0x1BF37</span>, <span class="number">0x1BF20</span>, <span class="number">0x1BF21</span>, <span class="number">0x1BF37</span>,</span><br><span class="line"> <span class="number">0x1BF0D</span>, <span class="number">0x1BF3B</span>, <span class="number">0x1BF21</span>, <span class="number">0x1BF0D</span>, <span class="number">0x1BF24</span>, <span class="number">0x1BF37</span>, <span class="number">0x1BF20</span>,</span><br><span class="line"> <span class="number">0x1BF2B</span>, <span class="number">0x1BF0D</span>, <span class="number">0x1BF3B</span>, <span class="number">0x1BF3C</span>, <span class="number">0x1BF26</span>, <span class="number">0x1BF37</span>, <span class="number">0x1BF20</span>,</span><br><span class="line"> <span class="number">0x1BF37</span>, <span class="number">0x1BF21</span>, <span class="number">0x1BF26</span>, <span class="number">0x1BF3B</span>, <span class="number">0x1BF3C</span>, <span class="number">0x1BF35</span>, <span class="number">0x1BF2F</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">35</span>;i++)&#123;</span><br><span class="line"><span class="built_in">putchar</span>(x[i]^<span class="number">0x1bf52</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ez-Android"><a href="#ez-Android" class="headerlink" title="ez_Android"></a>ez_Android</h1><h3 id="主体逻辑"><a href="#主体逻辑" class="headerlink" title="主体逻辑"></a>主体逻辑</h3><p><img src="/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/image-20221118154221715.png" alt="代码"></p><p>即要获取一串0与1组成的字符串，使用check函数检查。</p><h3 id="check函数"><a href="#check函数" class="headerlink" title="check函数"></a>check函数</h3><p>将apk解压从lib文件夹中找到so文件，check函数就在里面。</p><p><img src="/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/image-20221118154650130.png" alt="代码"></p><p>根据点击得到的10序列变化基数1，从而得到数组f的下标，再从而得到某特定的值，该值应该对应 likeAndroid字符串的对应位的ASCII值</p><h3 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">b = [</span><br><span class="line">    <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span></span><br><span class="line">]</span><br><span class="line">c = []</span><br><span class="line">d = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">    <span class="keyword">if</span> b[i] != <span class="number">0</span>:</span><br><span class="line">        c.append(b[i])</span><br><span class="line">        d.append(i)</span><br><span class="line"></span><br><span class="line">a = <span class="string">&quot;even if i only have seven seconds of memory, even if i forget the world, i still love android&quot;</span></span><br><span class="line">total = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    frq = []</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c)):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">ord</span>(i) == c[j]:</span><br><span class="line">            num = d[j]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;wrong&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">while</span> num != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            num = num // <span class="number">2</span></span><br><span class="line">            frq.append(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            num = (num - <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">            frq.append(<span class="number">1</span>)</span><br><span class="line">    frq.reverse()</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> frq:</span><br><span class="line">        total.append(t)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> total:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;1&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;0&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;wrong&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>最终得到01字符串</p><h1 id="DEGUB"><a href="#DEGUB" class="headerlink" title="DEGUB"></a>DEGUB</h1><h3 id="调试过程"><a href="#调试过程" class="headerlink" title="调试过程"></a>调试过程</h3><p>当执行到除0异常时，更改eip，跳过除0异常。</p><p>由调试可发现，程序只是对Input字符串进行位置变换处理。</p><p>故，可以根据输入的字符串a变换后的结果b，去获取这个变换的过程。</p><h3 id="解题脚本-1"><a href="#解题脚本-1" class="headerlink" title="解题脚本"></a>解题脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&quot;0123456789abcdefghijklmnopqrstuv&quot;</span></span><br><span class="line">b = [<span class="number">0x35</span>, <span class="number">0x67</span>, <span class="number">0x64</span>, <span class="number">0x33</span>, <span class="number">0x69</span>, <span class="number">0x75</span>, <span class="number">0x71</span>, <span class="number">0x68</span>, <span class="number">0x72</span>, <span class="number">0x6B</span>,</span><br><span class="line">     <span class="number">0x6A</span>, <span class="number">0x74</span>, <span class="number">0x30</span>, <span class="number">0x34</span>, <span class="number">0x37</span>, <span class="number">0x31</span>, <span class="number">0x38</span>, <span class="number">0x65</span>, <span class="number">0x36</span>, <span class="number">0x70</span>,</span><br><span class="line">     <span class="number">0x63</span>, <span class="number">0x6C</span>, <span class="number">0x39</span>, <span class="number">0x6E</span>, <span class="number">0x6F</span>, <span class="number">0x61</span>, <span class="number">0x6D</span>, <span class="number">0x73</span>, <span class="number">0x32</span>, <span class="number">0x62</span>,</span><br><span class="line">     <span class="number">0x76</span>, <span class="number">0x66</span>]</span><br><span class="line">c = <span class="string">&quot;fa+cmRG25L5Cst5cqO&#123;CLmy6YigZu6&#125;5&quot;</span></span><br><span class="line">d = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        <span class="keyword">if</span> b[i] == <span class="built_in">ord</span>(a[j]):</span><br><span class="line">            d[j] = <span class="built_in">ord</span>(c[i])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(i), end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># scuctf&#123;5qyi6L+O5a2m5Lmg6YCG5ZCR&#125;</span></span><br></pre></td></tr></table></figure><h1 id="base"><a href="#base" class="headerlink" title="base"></a>base</h1><h3 id="程序逻辑"><a href="#程序逻辑" class="headerlink" title="程序逻辑"></a>程序逻辑</h3><p>类似走迷宫，dword_4D7258不能进行变换，因此走的位置在maze中不能为0。</p><p>go_way_1和go_way_2是走迷宫的方式，目标是x、y都为29</p><p><img src="/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/image-20221118162606895-16687601452271.png" alt="代码"></p><h3 id="解题脚本-2"><a href="#解题脚本-2" class="headerlink" title="解题脚本"></a>解题脚本</h3><p>使用DFS方法走迷宫</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">a = [</span><br><span class="line">    <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">]</span><br><span class="line">b = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a) // <span class="number">4</span>):</span><br><span class="line">    b.append(a[i * <span class="number">4</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">30</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">    <span class="keyword">if</span> b[i] != <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;0&#x27;</span>, end=<span class="string">&quot;, &quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>, end=<span class="string">&quot;, &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line">b[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gomaze</span>(<span class="params">x, y, flag, maze</span>):</span><br><span class="line">    newflag = flag</span><br><span class="line">    newmaze = []</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> maze:</span><br><span class="line">        newmaze.append(t)</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">29</span> <span class="keyword">and</span> y == <span class="number">29</span>:</span><br><span class="line">        <span class="built_in">print</span>(newflag)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="number">30</span> &gt; x + <span class="number">2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> <span class="number">30</span> &gt; y - <span class="number">1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> b[x + <span class="number">2</span> + <span class="number">30</span> * (y - <span class="number">1</span>)] != <span class="number">0</span>:</span><br><span class="line">        b[x + <span class="number">2</span> + <span class="number">30</span> * (y - <span class="number">1</span>)] = <span class="number">0</span></span><br><span class="line">        gomaze(x + <span class="number">2</span>, y - <span class="number">1</span>, flag + <span class="string">&#x27;0&#x27;</span>, newmaze)</span><br><span class="line">        b[x + <span class="number">2</span> + <span class="number">30</span> * (y - <span class="number">1</span>)] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="number">30</span> &gt; x + <span class="number">1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> <span class="number">30</span> &gt; y - <span class="number">2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> b[x + <span class="number">1</span> + <span class="number">30</span> * (y - <span class="number">2</span>)] != <span class="number">0</span>:</span><br><span class="line">        b[x + <span class="number">1</span> + <span class="number">30</span> * (y - <span class="number">2</span>)] = <span class="number">0</span></span><br><span class="line">        gomaze(x + <span class="number">1</span>, y - <span class="number">2</span>, flag + <span class="string">&#x27;1&#x27;</span>, newmaze)</span><br><span class="line">        b[x + <span class="number">1</span> + <span class="number">30</span> * (y - <span class="number">2</span>)] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="number">30</span> &gt; x - <span class="number">1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> <span class="number">30</span> &gt; y - <span class="number">2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> b[x - <span class="number">1</span> + <span class="number">30</span> * (y - <span class="number">2</span>)] != <span class="number">0</span>:</span><br><span class="line">        b[x - <span class="number">1</span> + <span class="number">30</span> * (y - <span class="number">2</span>)] = <span class="number">0</span></span><br><span class="line">        gomaze(x - <span class="number">1</span>, y - <span class="number">2</span>, flag + <span class="string">&#x27;2&#x27;</span>, newmaze)</span><br><span class="line">        b[x - <span class="number">1</span> + <span class="number">30</span> * (y - <span class="number">2</span>)] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="number">30</span> &gt; x - <span class="number">2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> <span class="number">30</span> &gt; y - <span class="number">1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> b[x - <span class="number">2</span> + <span class="number">30</span> * (y - <span class="number">1</span>)] != <span class="number">0</span>:</span><br><span class="line">        b[x - <span class="number">2</span> + <span class="number">30</span> * (y - <span class="number">1</span>)] = <span class="number">0</span></span><br><span class="line">        gomaze(x - <span class="number">2</span>, y - <span class="number">1</span>, flag + <span class="string">&#x27;3&#x27;</span>, newmaze)</span><br><span class="line">        b[x - <span class="number">2</span> + <span class="number">30</span> * (y - <span class="number">1</span>)] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="number">30</span> &gt; x + <span class="number">2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> <span class="number">30</span> &gt; y + <span class="number">1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> b[x + <span class="number">2</span> + <span class="number">30</span> * (y + <span class="number">1</span>)] != <span class="number">0</span>:</span><br><span class="line">        b[x + <span class="number">2</span> + <span class="number">30</span> * (y + <span class="number">1</span>)] = <span class="number">0</span></span><br><span class="line">        gomaze(x + <span class="number">2</span>, y + <span class="number">1</span>, flag + <span class="string">&#x27;4&#x27;</span>, newmaze)</span><br><span class="line">        b[x + <span class="number">2</span> + <span class="number">30</span> * (y + <span class="number">1</span>)] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="number">30</span> &gt; x + <span class="number">1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> <span class="number">30</span> &gt; y + <span class="number">2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> b[x + <span class="number">1</span> + <span class="number">30</span> * (y + <span class="number">2</span>)] != <span class="number">0</span>:</span><br><span class="line">        b[x + <span class="number">1</span> + <span class="number">30</span> * (y + <span class="number">2</span>)] = <span class="number">0</span></span><br><span class="line">        gomaze(x + <span class="number">1</span>, y + <span class="number">2</span>, flag + <span class="string">&#x27;5&#x27;</span>, newmaze)</span><br><span class="line">        b[x + <span class="number">1</span> + <span class="number">30</span> * (y + <span class="number">2</span>)] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="number">30</span> &gt; x - <span class="number">1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> <span class="number">30</span> &gt; y + <span class="number">2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> b[x - <span class="number">1</span> + <span class="number">30</span> * (y + <span class="number">2</span>)] != <span class="number">0</span>:</span><br><span class="line">        b[x - <span class="number">1</span> + <span class="number">30</span> * (y + <span class="number">2</span>)] = <span class="number">0</span></span><br><span class="line">        gomaze(x - <span class="number">1</span>, y + <span class="number">2</span>, flag + <span class="string">&#x27;6&#x27;</span>, newmaze)</span><br><span class="line">        b[x - <span class="number">1</span> + <span class="number">30</span> * (y + <span class="number">2</span>)] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="number">30</span> &gt; x - <span class="number">2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> <span class="number">30</span> &gt; y + <span class="number">1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> b[x - <span class="number">2</span> + <span class="number">30</span> * (y + <span class="number">1</span>)] != <span class="number">0</span>:</span><br><span class="line">        b[x - <span class="number">2</span> + <span class="number">30</span> * (y + <span class="number">1</span>)] = <span class="number">0</span></span><br><span class="line">        gomaze(x - <span class="number">2</span>, y + <span class="number">1</span>, flag + <span class="string">&#x27;7&#x27;</span>, newmaze)</span><br><span class="line">        b[x - <span class="number">2</span> + <span class="number">30</span> * (y + <span class="number">1</span>)] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gomaze(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;&#x27;</span>, b)</span><br></pre></td></tr></table></figure><h1 id="dp"><a href="#dp" class="headerlink" title="dp"></a>dp</h1><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>使用pyinstxtractor将exe转化回py，得到的t4文件，在其文件头加入pyc文件头，然后使用uncompyle6将pyc转化为py，得到程序逻辑。</p><p>该程序需要点击一定次数后开始运行flag字符串生成，其生成逻辑如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">gogogo</span>(<span class="params">self, x</span>):</span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">5</span>:</span><br><span class="line">        self.flag += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    self.gogogo(x + <span class="number">1</span>)</span><br><span class="line">    self.gogogo(x + <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>(<span class="params">self</span>):</span><br><span class="line">    self.gogogo(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> self.flag</span><br></pre></td></tr></table></figure><p>举几个例子，可以看出是斐波拉契数列，flag是第102项，在网上直接搜索可得到。</p><h1 id="flower"><a href="#flower" class="headerlink" title="flower"></a>flower</h1><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><p>动态调试程序，程序报错。</p><p><img src="/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/image-20221118165700892.png" alt="代码"></p><p>由上图发现，ida提示try，猜测是异常抛出，程序会执行下面的过程，因此更改eip直接执行下面的语句，程序开始正常运行。</p><p>程序的逻辑： </p><p>判定 input[i] ^ (i%7) &#x3D;&#x3D; someStr[i]</p><p>someStr为程序的数组。</p><h3 id="解题脚本-3"><a href="#解题脚本-3" class="headerlink" title="解题脚本"></a>解题脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Str = [<span class="number">0x73</span>, <span class="number">0x62</span>, <span class="number">0x77</span>, <span class="number">0x60</span>, <span class="number">0x70</span>, <span class="number">0x63</span>, <span class="number">0x7D</span>, <span class="number">0x4F</span>, <span class="number">0x74</span>, <span class="number">0x70</span>,</span><br><span class="line">       <span class="number">0x5C</span>, <span class="number">0x70</span>, <span class="number">0x60</span>, <span class="number">0x67</span>, <span class="number">0x6D</span>, <span class="number">0x5E</span>, <span class="number">0x6B</span>, <span class="number">0x70</span>, <span class="number">0x5B</span>, <span class="number">0x6C</span>,</span><br><span class="line">       <span class="number">0x68</span>, <span class="number">0x5F</span>, <span class="number">0x74</span>, <span class="number">0x70</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x6B</span>, <span class="number">0x72</span>, <span class="number">0x5F</span>, <span class="number">0x6F</span>,</span><br><span class="line">       <span class="number">0x67</span>, <span class="number">0x66</span>, <span class="number">0x60</span>, <span class="number">0x5A</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x5E</span>, <span class="number">0x70</span>, <span class="number">0x66</span>, <span class="number">0x72</span>,</span><br><span class="line">       <span class="number">0x60</span>, <span class="number">0x74</span>, <span class="number">0x73</span>, <span class="number">0x64</span>, <span class="number">0x5D</span>, <span class="number">0x73</span>, <span class="number">0x68</span>, <span class="number">0x64</span>, <span class="number">0x7F</span>, <span class="number">0x65</span>,</span><br><span class="line">       <span class="number">0x73</span>, <span class="number">0x71</span>, <span class="number">0x7E</span>]</span><br><span class="line">myinput = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(Str)):</span><br><span class="line">    myinput.append(Str[i] ^ (i % <span class="number">7</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> myinput:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(i), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="go"><a href="#go" class="headerlink" title="go"></a>go</h1><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>看程序的main_main、main_main_func1、main_main_func2、main_main_func3、main_main_func4、main_main_func5函数</p><p>后面五个func函数是分别处理访问url的参数的不同所执行的。</p><p>其中func2函数中包含scuctf字段，猜测其为提交flag，并且检测flag的地方。</p><p>不断调试该程序可以发现变换flag的过程，通过动态调试可以发现flag的转换只是位置上的转换，因此，可以根据输入的字符串a变换后的结果b，去获取这个变换的过程</p><p><img src="/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/image-20221118170503198.png" alt="代码"></p><h3 id="解题脚本-4"><a href="#解题脚本-4" class="headerlink" title="解题脚本"></a>解题脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">change = [<span class="number">0x30</span>, <span class="number">0x35</span>, <span class="number">0x61</span>, <span class="number">0x66</span>, <span class="number">0x6B</span>, <span class="number">0x70</span>, <span class="number">0x75</span>, <span class="number">0x31</span>, <span class="number">0x36</span>, <span class="number">0x62</span>,</span><br><span class="line">          <span class="number">0x67</span>, <span class="number">0x6C</span>, <span class="number">0x71</span>, <span class="number">0x76</span>, <span class="number">0x32</span>, <span class="number">0x37</span>, <span class="number">0x63</span>, <span class="number">0x68</span>, <span class="number">0x6D</span>, <span class="number">0x72</span>,</span><br><span class="line">          <span class="number">0x33</span>, <span class="number">0x38</span>, <span class="number">0x64</span>, <span class="number">0x69</span>, <span class="number">0x6E</span>, <span class="number">0x73</span>, <span class="number">0x34</span>, <span class="number">0x39</span>, <span class="number">0x65</span>, <span class="number">0x6A</span>,</span><br><span class="line">          <span class="number">0x6F</span>, <span class="number">0x74</span>]</span><br><span class="line">ch = <span class="string">&quot;0123456789abcdefghijklmnopqrstuv&quot;</span></span><br><span class="line">re = <span class="string">&quot;5r+cR6AoCc503=i45q/oR6Zyoq5LairI&quot;</span></span><br><span class="line">flag = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">ord</span>(ch[i]) == change[j]:</span><br><span class="line">            flag[i] = <span class="built_in">ord</span>(re[j])</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(i), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="logic"><a href="#logic" class="headerlink" title="logic"></a>logic</h1><h3 id="解题过程-2"><a href="#解题过程-2" class="headerlink" title="解题过程"></a>解题过程</h3><p>查询setjmp、longjmp函数理清程序流程，一共有三个函数。</p><p>第一个函数逻辑为：检查输入字符串每两位组合，前一个组合组成的数小于后一个组合组成的数；</p><p>第二个函数逻辑为：根据输入字符串对一个数组进行操作；</p><p>第三个函数逻辑为：其逻辑相当于检查被操作数组的每一个值。</p><p>由于被操作数组的结果正的相加为101，为输入字符串的一半，而负的相加为96，可以推断出每个组合的第一个数其对应数组的地方只加不减，而第二个数其对应数组的地方只减不加，且倒数五个组合的第二个数必须为Z。</p><h3 id="解题脚本-5"><a href="#解题脚本-5" class="headerlink" title="解题脚本"></a>解题脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">changenum</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= num &lt;= <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">chr</span>(num + <span class="number">48</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="number">10</span> &lt;= num &lt;= <span class="number">35</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">chr</span>(num + <span class="number">87</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="number">36</span> &lt;= num &lt;= <span class="number">62</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">chr</span>(num + <span class="number">29</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">changestr</span>(<span class="params">ch</span>):</span><br><span class="line">    num = <span class="built_in">ord</span>(ch)</span><br><span class="line">    <span class="keyword">if</span> <span class="number">48</span> &lt;= num &lt;= <span class="number">57</span>:</span><br><span class="line">        <span class="keyword">return</span> num - <span class="number">48</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="number">97</span> &lt;= num &lt;= <span class="number">122</span>:</span><br><span class="line">        <span class="keyword">return</span> num - <span class="number">87</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="number">65</span> &lt;= num &lt;= <span class="number">90</span>:</span><br><span class="line">        <span class="keyword">return</span> num - <span class="number">29</span></span><br><span class="line">a = [<span class="number">0x1</span>..<span class="number">.0</span>x5]</span><br><span class="line">frequencyOfNum = [<span class="number">0</span>] * <span class="number">62</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">62</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">        frequencyOfNum[i] = a[i]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        frequencyOfNum[i] = a[i] - a[i - <span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(frequencyOfNum[i], end=<span class="string">&quot;, &quot;</span>)</span><br><span class="line">result = [-<span class="number">1</span>] * <span class="number">202</span></span><br><span class="line">index1 = <span class="number">0</span></span><br><span class="line">index2 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">62</span>):</span><br><span class="line">    <span class="keyword">if</span> frequencyOfNum[i] &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(frequencyOfNum[i]):</span><br><span class="line">            result[index1 * <span class="number">2</span>] = i</span><br><span class="line">            index1 += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> frequencyOfNum[i] &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(-frequencyOfNum[i]):</span><br><span class="line">            result[index2 * <span class="number">2</span> + <span class="number">1</span>] = i - <span class="number">1</span></span><br><span class="line">            index2 += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    result[index2 * <span class="number">2</span> + <span class="number">1</span>] = <span class="number">61</span></span><br><span class="line">    index2 += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>, result)</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    flag += changenum(i)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h1 id="pyc"><a href="#pyc" class="headerlink" title="pyc"></a>pyc</h1><p>将pyc转换为py，可以看出类似矩阵计算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sss = <span class="string">&quot;99 ... 121674&quot;</span> // 条件等式</span><br><span class="line">ss = sss.split(<span class="string">&quot; and &quot;</span>)</span><br><span class="line">num = []</span><br><span class="line">r = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ss:</span><br><span class="line">    s = i.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">    x = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):</span><br><span class="line">        x.append(<span class="built_in">int</span>(s[i * <span class="number">4</span>]))</span><br><span class="line">    num.append(x)</span><br><span class="line">    r.append(<span class="built_in">int</span>(s[<span class="number">100</span>]))</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">b = np.array(num)</span><br><span class="line">a = np.array(r)</span><br><span class="line">flag = np.linalg.solve(b, a)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">round</span>(i)), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="xxx"><a href="#xxx" class="headerlink" title="xxx"></a>xxx</h1><p>程序一开始为检查函数解密出来，运行完解密函数，就可以知道检查函数了，</p><p>故使用动态调试，然后看汇编代码知道检查函数的流程，大概是(input + 4) ^ 0x28，然后进行比较。</p><h3 id="解题脚本-6"><a href="#解题脚本-6" class="headerlink" title="解题脚本"></a>解题脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b = [<span class="number">0x7E</span> ... <span class="number">0x00</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b) // <span class="number">4</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>((b[i * <span class="number">4</span>] ^ <span class="number">0x28</span>) - <span class="number">4</span>), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="VM"><a href="#VM" class="headerlink" title="VM"></a>VM</h1><h3 id="解题过程-3"><a href="#解题过程-3" class="headerlink" title="解题过程"></a>解题过程</h3><p>case0对应add，case1对应sub，case2对应xor，case3对应cmp，case456对应各类jmp，case7对应获取input，case8对应赋值input，case9对应获取具体操作。</p><p>三个数组分别为input、stack、operation，index被放在了input[0x32]</p><p>然后就是动态调试看程序的逻辑：</p><ul><li>input[i] &#x3D; input[i] ^ input[i+1]</li><li>input[i+1] &#x3D; （input[i] - i) + input[i+1]</li><li>进行结果比较</li></ul><h3 id="解题脚本-7"><a href="#解题脚本-7" class="headerlink" title="解题脚本"></a>解题脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">d = [<span class="number">0x3d</span>, <span class="number">0x56</span>, <span class="number">0x80</span>, <span class="number">0xb3</span>, <span class="number">0xc9</span>, <span class="number">0xf0</span>,</span><br><span class="line">     <span class="number">0x128</span>, <span class="number">0x15f</span>, <span class="number">0x180</span>, <span class="number">0x196</span>, <span class="number">0x1a7</span>, <span class="number">0x1a2</span>,</span><br><span class="line">     <span class="number">0x197</span>, <span class="number">0x19e</span>, <span class="number">0x19d</span>, <span class="number">0x1c1</span>, <span class="number">0x1e3</span>, <span class="number">0x1de</span>,</span><br><span class="line">     <span class="number">0x1ce</span>, <span class="number">0x1c6</span>, <span class="number">0x1b3</span>, <span class="number">0x1a5</span>, <span class="number">0x19a</span>, <span class="number">0x1e8</span>]</span><br><span class="line">c = [<span class="number">0</span>] * <span class="number">25</span></span><br><span class="line">d.reverse()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">23</span>):</span><br><span class="line">    c[i] = d[i] - d[i + <span class="number">1</span>] + (<span class="number">24</span> - i - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">23</span>):</span><br><span class="line">    c[i + <span class="number">1</span>] = c[i] ^ c[i + <span class="number">1</span>]</span><br><span class="line">c.reverse()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> c:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(i), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="unity"><a href="#unity" class="headerlink" title="unity"></a>unity</h1><p>dnspy打开Assembly-CSharp.dll，找到其方法、函数等，发现其中有个GameManger，应该是管理游戏的类，再在其中发现Update方法，应该是判定游戏是否可以继续以及画面更新的方法。</p><p><img src="/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/clip_image002.png"></p><p>在其中发现了Gameover变量，猜测是判定游戏是否可以继续的值，将赋值为true的地方更改为false，打开游戏，我不死了。</p><p><img src="/2022/11/18/SCU2022%E6%96%B0%E7%94%9F%E8%B5%9B/clip_image003.png" alt="代码"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TEA加密与解密</title>
      <link href="/2022/10/07/TEA%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86/"/>
      <url>/2022/10/07/TEA%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="TEA加密解密流程"><a href="#TEA加密解密流程" class="headerlink" title="TEA加密解密流程"></a>TEA加密解密流程</h1><p>参考代码：(源自：<a href="https://ctf-wiki.org/reverse/identify-encode-encryption/introduction/">常见加密算法和编码识别 - CTF Wiki (ctf-wiki.org)</a>)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">encrypt</span> <span class="params">(<span class="type">uint32_t</span>* v, <span class="type">uint32_t</span>* k)</span> &#123;</span><br><span class="line">    <span class="type">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0</span>, i;           <span class="comment">/* set up */</span></span><br><span class="line">    <span class="type">uint32_t</span> delta=<span class="number">0x9e3779b9</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line">    <span class="type">uint32_t</span> k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;                       <span class="comment">/* basic cycle start */</span></span><br><span class="line">        sum += delta;</span><br><span class="line">        v0 += ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);</span><br><span class="line">        v1 += ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);  </span><br><span class="line">    &#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">decrypt</span> <span class="params">(<span class="type">uint32_t</span>* v, <span class="type">uint32_t</span>* k)</span> &#123;</span><br><span class="line">    <span class="type">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0xC6EF3720</span>, i;  <span class="comment">/* set up */</span></span><br><span class="line">    <span class="type">uint32_t</span> delta=<span class="number">0x9e3779b9</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line">    <span class="type">uint32_t</span> k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i++) &#123;                         <span class="comment">/* basic cycle start */</span></span><br><span class="line">        v1 -= ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);</span><br><span class="line">        v0 -= ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);</span><br><span class="line">        sum -= delta;                                   </span><br><span class="line">    &#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>在其他的TEA加密解密流程中，部分过程或许有偏差，但整体上还是大差不差的。</li><li>注意使用的变量是32位的unsigned int类型变量。</li></ul><h3 id="具体示例"><a href="#具体示例" class="headerlink" title="具体示例"></a>具体示例</h3><p>在此TEA加密流程中，v5、v6并不完全按照示例进行，但只要按照其反思路来做就可以了。</p><p><img src="/2022/10/07/TEA%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86/image-20221007171855238.png" alt="TEA加密"></p><p>解密脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">decrypt</span><span class="params">(<span class="type">int</span> *res, <span class="type">int</span> *key)</span>&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v6=res[<span class="number">0</span>];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v5=res[<span class="number">1</span>];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> sum = <span class="number">0xC6EF3720</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> delta = <span class="number">0x61C88647</span>;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">0x1F</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">  v5 -= (((v6 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * v6)) + v6) ^ (key[(sum&gt;&gt;<span class="number">11</span>)&amp;<span class="number">3</span>] + sum);</span><br><span class="line">    sum += <span class="number">0x61C88647</span>;</span><br><span class="line">    v6 -= (((v5 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * v5)) + v5) ^ (key[sum&amp;<span class="number">3</span>] + sum);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;结果：%x,%x\n&quot;</span>,v6,v5);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">encrypt</span><span class="params">(<span class="type">int</span> *res, <span class="type">int</span> *key)</span>&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v6=res[<span class="number">0</span>];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v5=res[<span class="number">1</span>];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> delta = <span class="number">0x61C88647</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">0x1F</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">  v6 += (((v5 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * v5)) + v5) ^ (key[sum&amp;<span class="number">3</span>] + sum);</span><br><span class="line">  sum -= <span class="number">0x61C88647</span>;</span><br><span class="line">v5 += (((v6 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * v6)) + v6) ^ (key[(sum&gt;&gt;<span class="number">11</span>)&amp;<span class="number">3</span>] + sum);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;结果：%X,%X\n&quot;</span>,v6,v5);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> res[<span class="number">6</span>]=&#123;</span><br><span class="line"><span class="number">0xC11EE75A</span>, <span class="number">0xA4AD0973</span>,</span><br><span class="line"><span class="number">0xF61C9018</span>, <span class="number">0x32E37BCD</span>,</span><br><span class="line"><span class="number">0x2DCC1F26</span>, <span class="number">0x344380CC</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> key[<span class="number">4</span>]=&#123;</span><br><span class="line"><span class="number">0x010203</span>, <span class="number">0x04050607</span>, <span class="number">0x08090A0B</span>, <span class="number">0x0C0D0E0F</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">decrypt(&amp;res[i*<span class="number">2</span>],key);</span><br><span class="line">&#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后所得到的结果要注意是小端存储。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杰瑞的影分身——bugku</title>
      <link href="/2022/10/05/%E6%9D%B0%E7%91%9E%E7%9A%84%E5%BD%B1%E5%88%86%E8%BA%AB%E2%80%94%E2%80%94bugku/"/>
      <url>/2022/10/05/%E6%9D%B0%E7%91%9E%E7%9A%84%E5%BD%B1%E5%88%86%E8%BA%AB%E2%80%94%E2%80%94bugku/</url>
      
        <content type="html"><![CDATA[<h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>简单浏览下程序思路，可以发现程序的输入，但程序的结果比较过程则没有发现。</p><p><img src="/2022/10/05/%E6%9D%B0%E7%91%9E%E7%9A%84%E5%BD%B1%E5%88%86%E8%BA%AB%E2%80%94%E2%80%94bugku/image-20221005181311087.png" alt="main"></p><p><img src="/2022/10/05/%E6%9D%B0%E7%91%9E%E7%9A%84%E5%BD%B1%E5%88%86%E8%BA%AB%E2%80%94%E2%80%94bugku/image-20221005181336032.png" alt="sub_401670"></p><p><img src="/2022/10/05/%E6%9D%B0%E7%91%9E%E7%9A%84%E5%BD%B1%E5%88%86%E8%BA%AB%E2%80%94%E2%80%94bugku/image-20221005181419209.png" alt="sub_402770"></p><p>通过网上搜索，在sub_402770的函数中Block部分应该也是一个函数，我猜测具体过程是由前一句sub_401C40函数生成的，因此直接在这下断点，直接动态调试。</p><p>程序的比较过程还是比较明显的，但还是调试了我半天，具体过程就不贴图了。</p><h3 id="第一个过程"><a href="#第一个过程" class="headerlink" title="第一个过程"></a>第一个过程</h3><p>对input[i]进行异或4，然后当 i % 3 &#x3D;&#x3D; 1时，还将input[i]与一串字符串第（3 * i）位异或（但根据该字符串来进行解题时，出现的结果不太对，因此我直接记录进行异或的字符，直接异或了）</p><h3 id="第二个过程"><a href="#第二个过程" class="headerlink" title="第二个过程"></a>第二个过程</h3><p>对sub_4017B0函数生成的字符串进行处理。</p><p><img src="/2022/10/05/%E6%9D%B0%E7%91%9E%E7%9A%84%E5%BD%B1%E5%88%86%E8%BA%AB%E2%80%94%E2%80%94bugku/image-20221005182710135.png" alt="sub_4017B0"></p><p>由于程序的进行，处理后的字符串可以直接读取，因此不用管过程，直接得到结果。</p><p><code>str1 = &quot;e4bdtRV02&quot;</code></p><p>后面的字符被第十位的 0 截断了，因此只有9位了。</p><h3 id="第三个过程"><a href="#第三个过程" class="headerlink" title="第三个过程"></a>第三个过程</h3><p>将变化后的input[i]与sub_401BD0（i）所得到的返回值 + 2 进行异或。</p><p><img src="/2022/10/05/%E6%9D%B0%E7%91%9E%E7%9A%84%E5%BD%B1%E5%88%86%E8%BA%AB%E2%80%94%E2%80%94bugku/image-20221005183346887.png" alt="sub——401BD0"></p><p>同时如果input的前九位与str1的前九位相加。</p><p><img src="/2022/10/05/%E6%9D%B0%E7%91%9E%E7%9A%84%E5%BD%B1%E5%88%86%E8%BA%AB%E2%80%94%E2%80%94bugku/image-20221005183623391.png" alt="调试得到的第三个过程"></p><h1 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getnum</span>(<span class="params">a1</span>):</span><br><span class="line">    <span class="keyword">if</span> a1 == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">12</span></span><br><span class="line">    <span class="keyword">elif</span> a1 == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">11</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;e4bdtRV02&quot;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;flag&#123;where is tom&#125;flag&#123;My cheese&#125;flag&#123;i miss tom&#125;&quot;</span></span><br><span class="line">str2 = <span class="string">&quot;gsleg&quot;</span></span><br><span class="line">strrrr = [<span class="number">0xD3</span>, <span class="number">0x38</span>, <span class="number">0xD1</span>, <span class="number">0xD3</span>, <span class="number">0x7B</span>, <span class="number">0xAD</span>, <span class="number">0xB3</span>, <span class="number">0x66</span>, <span class="number">0x71</span>, <span class="number">0x3A</span>,</span><br><span class="line">          <span class="number">0x59</span>, <span class="number">0x5F</span>, <span class="number">0x5F</span>, <span class="number">0x2D</span>, <span class="number">0x73</span>]</span><br><span class="line">flag = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">    <span class="keyword">if</span> i &lt; <span class="number">9</span>:</span><br><span class="line">        flag.append((strrrr[i] - <span class="built_in">ord</span>(str1[i])) ^ getnum(i % <span class="number">3</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag.append((strrrr[i] ^ getnum(i % <span class="number">3</span>)))</span><br><span class="line">t = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">1</span>:</span><br><span class="line">        flag[i] ^= <span class="built_in">ord</span>(str2[t])</span><br><span class="line">        t += <span class="number">1</span></span><br><span class="line">    flag[i] ^= <span class="number">4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(i), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bingo——bugku</title>
      <link href="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/"/>
      <url>/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/</url>
      
        <content type="html"><![CDATA[<h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>思路主要参考网上writeup，一步步做出来的。</p><p>png中隐藏着exe文件</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/1.png" alt="1"></p><p>MZ文件头，即（4D5A9000…)，从这开始到最后的字节都提取出来，为一个exe文件。此时的exe文件因为缺少PE头无法被ida识别，因此加一个PE头 50 45 00 00</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/2.png" alt="2"></p><p>也可以通过010editor在模板中修改</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/3.png" alt="3"></p><p>用ida打开该exe文件</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/4.png" alt="4"></p><p>判断这是一个解密过程，即 为部分字节数据进行异或解密，用脚本进行解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;C:\Users\hahbiubiubiu\Downloads\file\bingo.exe&quot;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:    </span><br><span class="line">    data = f.read() </span><br><span class="line">data = <span class="built_in">list</span>(data) </span><br><span class="line">text_segment_size = <span class="number">0x3E000</span> - <span class="number">0x1000</span> </span><br><span class="line"><span class="comment"># 0x3E000是大小 </span></span><br><span class="line"><span class="comment"># 0x1000是偏移 </span></span><br><span class="line">key = <span class="number">0x22</span>  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x1000</span>, <span class="number">0x1000</span> + text_segment_size):</span><br><span class="line">    data[i] ^= key  </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;C:\Users\hahbiubiubiu\Downloads\file\bing0_xor.exe&quot;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f: </span><br><span class="line">    f.write(<span class="built_in">bytes</span>(data))</span><br></pre></td></tr></table></figure><p>执行脚本后得到新的exe文件，ida打开它</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/5.png" alt="5"></p><p>除了前面的异或，它跳到了0x408BE0的位置</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/6.png" alt="6"></p><p> Edit-&gt;Segments-&gt;Rebase Progarm…-&gt;修改value为0</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/7.png" alt="7"></p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/8.png" alt="8"></p><p>该函数地址修改为0x8BE0</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/9.png" alt="9"></p><p>在010editor中修改程序入口点为0x8BE0</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/10.png" alt="10"></p><p>再次用ida打开exe文件发现程序多了两个main函数，main_0函数就是程序主逻辑</p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/11.png" alt="11"></p><p><img src="/2022/10/04/Bingo%E2%80%94%E2%80%94bugku/12.png" alt="12"></p><p>_strrev是对字符串进行倒转的函数，根据逻辑，写出脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&quot;zaciWjV!Xm[_XSqeThmegndq&quot;</span> </span><br><span class="line">b = <span class="number">29</span> flag = <span class="string">&quot;&quot;</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">    t = math.sqrt(<span class="built_in">pow</span>(<span class="built_in">ord</span>(a[<span class="built_in">int</span>(i/<span class="number">2</span>)]), <span class="number">2.0</span>) + <span class="built_in">pow</span>(b, <span class="number">2.0</span>)) + <span class="number">0.5</span>    </span><br><span class="line">    k = <span class="built_in">int</span>(t)    </span><br><span class="line">    b += <span class="number">1</span>    </span><br><span class="line">    flag += <span class="built_in">chr</span>(k)    </span><br><span class="line">    a = a[::-<span class="number">1</span>] <span class="built_in">print</span>(flag[::-<span class="number">1</span>]) </span><br><span class="line"><span class="comment"># flag&#123;woc_6p_tql_moshifu&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>babyLoginPlus——bugku</title>
      <link href="/2022/10/03/babyLoginPlus-bugku/"/>
      <url>/2022/10/03/babyLoginPlus-bugku/</url>
      
        <content type="html"><![CDATA[<h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>该题主要是参照其他大佬writeup的思路，即找到输入，下断点，根据最后所得到的比较等式来一步步调试得到的。</p><h3 id="VM"><a href="#VM" class="headerlink" title="VM"></a>VM</h3><p>该函数应该是使用vm函数的地方</p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003131441527.png" alt="入口"></p><p>因此在这个地方下了断点之后，一步步开始调试，看看程序的执行流程</p><p>首先，程序的执行到这个地方，会不断重复执行，然后根据调用的函数来获取输入、进行比较、执行输出。</p><p>在前几次的执行中，包含了获取输入的函数，得到我们的输入。</p><h3 id="比较过程"><a href="#比较过程" class="headerlink" title="比较过程"></a>比较过程</h3><p>获取输入后，程序开始执行比较，其中我也不太清楚部分操作的流程，可能是获取数据或者解析数据什么的，因此省略了。</p><p>获取input[i]的字符更新为input[i]-9。</p><p><code>sub dex,ecx</code></p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003115001724.png" alt="input[i]-9"></p><p>获取操作数 0x26。</p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003115346614.png"></p><p>将input[i]与上一个函数获取的0x26异或，即input[i] &#x3D; input[i] ^ 0x26。</p><p><code>xor edx,ecx</code></p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003115613045.png" alt="异或0x26"></p><p>获取程序之前生成的Welcome字符串的第i个字符。</p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003120605295.png" alt="获取key"></p><p>将获取Welcome字符串的字符和之前变化后的input[i]进行异或。</p><p><code>xor edx,ecx</code></p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003120903814.png" alt="异或key"></p><p>执行add [eax], esi, 将上一步异或得到的的字符加上6。</p><p><code>add [eax], esi</code></p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003121506365.png" alt="变化"></p><p>获取最后结果比较所需的数组。</p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003121637821.png"></p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003121735062.png"></p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003130820114.png" alt="结果数组"></p><p>进行结果比较。</p><p><code>cmp edi,ecx</code></p><p><img src="/2022/10/03/babyLoginPlus-bugku/image-20221003122048630.png" alt="结果比较"></p><h1 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">result = [<span class="number">0x32</span>, <span class="number">0x26</span>, <span class="number">0x18</span>, <span class="number">0x21</span>, <span class="number">0x41</span>, <span class="number">0x23</span>, <span class="number">0x2A</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x29</span>, <span class="number">0x35</span>, <span class="number">0x12</span>, <span class="number">0x20</span>, <span class="number">0x17</span>, <span class="number">0x45</span>, <span class="number">0x1C</span>,</span><br><span class="line">       <span class="number">0x68</span>, <span class="number">0x2D</span>, <span class="number">0x7A</span>, <span class="number">0x79</span>, <span class="number">0x47</span>, <span class="number">0x7F</span>, <span class="number">0x44</span>, <span class="number">0x09</span>, <span class="number">0x1E</span>, <span class="number">0x75</span>, <span class="number">0x41</span>, <span class="number">0x2A</span>, <span class="number">0x19</span>, <span class="number">0x34</span>, <span class="number">0x76</span>, <span class="number">0x47</span>,</span><br><span class="line">       <span class="number">0x14</span>, <span class="number">0x50</span>, <span class="number">0x52</span>, <span class="number">0x76</span>, <span class="number">0x58</span>]</span><br><span class="line">key = [<span class="number">0x57</span>, <span class="number">0x65</span>, <span class="number">0x6C</span>, <span class="number">0x63</span>, <span class="number">0x6F</span>, <span class="number">0x6D</span>, <span class="number">0x65</span>, <span class="number">0x5F</span>, <span class="number">0x74</span>, <span class="number">0x6F</span>, <span class="number">0x5F</span>, <span class="number">0x73</span>, <span class="number">0x64</span>, <span class="number">0x6E</span>, <span class="number">0x69</span>, <span class="number">0x73</span>,</span><br><span class="line">       <span class="number">0x63</span>, <span class="number">0x5F</span>, <span class="number">0x32</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0x38</span>, <span class="number">0x5F</span>, <span class="number">0x42</span>, <span class="number">0x79</span>, <span class="number">0x2E</span>, <span class="number">0x5A</span>, <span class="number">0x65</span>, <span class="number">0x72</span>, <span class="number">0x6F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">       <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>]</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    flag += <span class="built_in">chr</span>(((result[i]-<span class="number">0x6</span>) ^ <span class="number">0x26</span> ^ key[i])+<span class="number">9</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment">#flag&#123;_p1us_babyL0gin_pPpPpPpPp_p1us_&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汤姆的苹果——bugku</title>
      <link href="/2022/09/27/%E6%B1%A4%E5%A7%86%E7%9A%84%E8%8B%B9%E6%9E%9C%E2%80%94%E2%80%94bugku/"/>
      <url>/2022/09/27/%E6%B1%A4%E5%A7%86%E7%9A%84%E8%8B%B9%E6%9E%9C%E2%80%94%E2%80%94bugku/</url>
      
        <content type="html"><![CDATA[<h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p>首先，看<strong>MainActivity</strong>，猜测b中<strong>handleMessage</strong>是判断最终条件，<strong>onClick</strong>是检验flag方法</p><p><img src="/2022/09/27/%E6%B1%A4%E5%A7%86%E7%9A%84%E8%8B%B9%E6%9E%9C%E2%80%94%E2%80%94bugku/1664414144444.png" alt="MainActivity"></p><p>然后查看引用输入字符串obj的a类中，<strong>doInBackground</strong>应该是对输入字符串进行解密</p><p><img src="/2022/09/27/%E6%B1%A4%E5%A7%86%E7%9A%84%E8%8B%B9%E6%9E%9C%E2%80%94%E2%80%94bugku/1664414485829.png" alt="类a"></p><p>查看<strong>doInBackground</strong>引用的b类</p><p><img src="/2022/09/27/%E6%B1%A4%E5%A7%86%E7%9A%84%E8%8B%B9%E6%9E%9C%E2%80%94%E2%80%94bugku/1664414746576.png" alt="类b"></p><p>可以看出这是对字符串的一个异或</p><p>再去看a类中的<strong>onPostExcute</strong>方法，以及除了a、b类以外的c类，猜测这是一起为最后为检测结果进行判定的方法</p><p><img src="/2022/09/27/%E6%B1%A4%E5%A7%86%E7%9A%84%E8%8B%B9%E6%9E%9C%E2%80%94%E2%80%94bugku/1664414837113.png" alt="目录"></p><p>c类，可以看出这是一个比较结果的方法</p><p><img src="/2022/09/27/%E6%B1%A4%E5%A7%86%E7%9A%84%E8%8B%B9%E6%9E%9C%E2%80%94%E2%80%94bugku/1664414874587.png" alt="类c"></p><h1 id="程序逻辑"><a href="#程序逻辑" class="headerlink" title="程序逻辑"></a>程序逻辑</h1><p>输入flag–&gt;进入a类不断进入b类进行循环–&gt;进入c类进行结果比较</p><h1 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h1><p>由于按照程序原本的逻辑，我写出的脚本无法生成flag，且网上暂时没有该题的writeup，我只好使用另一种方法。</p><p>程序的逻辑是将字符串不断地进行异或，最后的结果其实相当于进行一次异或，而这一次异或的数字是未知，因此可以写一个循环去爆破它。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">final = [<span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;%&#x27;</span>, <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">         <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;a&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    num = [<span class="number">0</span>] * <span class="number">24</span></span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> q <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(final)):</span><br><span class="line">        num[q] = (<span class="built_in">ord</span>(final[q]) ^ i)</span><br><span class="line">        <span class="keyword">if</span> num[q] &gt;= <span class="number">128</span>:</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> num[q] &lt;= <span class="number">31</span>:</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;the i is: &quot;</span>, i)</span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> num:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(t), end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line"><span class="comment"># the i is:  27</span></span><br><span class="line"><span class="comment"># akf`|mfntoa?&gt;543564mlmoz</span></span><br><span class="line"><span class="comment"># the i is:  28</span></span><br><span class="line"><span class="comment"># flag&#123;jaishf89234213jkjh&#125;</span></span><br><span class="line"><span class="comment"># the i is:  29</span></span><br><span class="line"><span class="comment"># gm`fzk`hrig98325302kjki|</span></span><br><span class="line"><span class="comment"># the i is:  30</span></span><br><span class="line"><span class="comment"># dnceyhckqjd:;016031hihj</span></span><br><span class="line"><span class="comment"># the i is:  31</span></span><br><span class="line"><span class="comment"># eobdxibjpke;:107120ihik~</span></span><br></pre></td></tr></table></figure><p><strong>flag{jaishf89234213jkjh}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
